#region Using

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;

using Wisej.Web;
using Captain.Common.Utilities;
using Captain.Common.Views.Forms.Base;
using Captain.Common.Menus;
using Captain.Common.Views.Forms;
using System.Data.SqlClient;
using Captain.Common.Views.Controls;
using Captain.Common.Model.Objects;
using Captain.Common.Model.Data;
using System.Text.RegularExpressions;
using Captain.Common.Views.UserControls;
using System.Xml;
using System.IO;

using iTextSharp;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.html.simpleparser;
using XLSExportFile;
using log4net.Repository.Hierarchy;
using DevExpress.XtraEditors.Filtering;
using static NPOI.HSSF.Util.HSSFColor;
using DevExpress.XtraRichEdit.Model;
using CarlosAg.ExcelXmlWriter;
using DevExpress.DataAccess.Sql;
using System.Globalization;
using OfficeOpenXml;
using NPOI.HSSF.Record.Chart;

#endregion

namespace Captain.Common.Views.Forms
{
    public partial class CASB4007_FunnelReport : _iForm//Form
    {
        #region private variables

        private ErrorProvider _errorProvider = null;
        //private GridControl _intakeHierarchy = null;
        private bool boolChangeStatus = false;
        private CaptainModel _model = null;
        private List<HierarchyEntity> _selectedHierarchies = null;

        #endregion
        public CASB4007_FunnelReport(BaseForm baseForm, PrivilegeEntity privileges)
        {
            InitializeComponent();
            _model = new CaptainModel();
            BaseForm = baseForm;
            Privileges = privileges;
            Agency = BaseForm.BaseAgency; Depart = BaseForm.BaseDept; Program = BaseForm.BaseProg;
            strYear = BaseForm.BaseYear;
            Set_Report_Hierarchy(BaseForm.BaseAgency, BaseForm.BaseDept, BaseForm.BaseProg, BaseForm.BaseYear);
            propReportPath = _model.lookupDataAccess.GetReportPath();
            _errorProvider = new ErrorProvider(this);
            _errorProvider.BlinkRate = 3;
            _errorProvider.BlinkStyle = ErrorBlinkStyle.BlinkIfDifferentError;
            _errorProvider.Icon = null;
            //strFolderPath = Consts.Common.ReportFolderLocation + BaseForm.UserID + "\\";    // Run at Server
            this.Text = /*Privileges.Program + " - " + */Privileges.PrivilegeName.Trim();
            this.chbSerOutOnly.Location = new Point(12, 167);
            fillcombo();
            Form_Load();
            FillCaseworker();
            Fill_Sites();

        }
        string Agency = string.Empty, Depart = string.Empty, Program = string.Empty, strYear = string.Empty;

        #region properties

        public BaseForm BaseForm { get; set; }

        public PrivilegeEntity Privileges { get; set; }

        public List<CAMASTEntity> propCAList { get; set; }

        public List<MSMASTEntity> propMSList { get; set; }

        public string propReportPath { get; set; }

        public bool IsSaveValid { get; set; }

        public List<SPCommonEntity> propfundingSource { get; set; }

        public List<CASESP2Entity> propCaseSp2List { get; set; }

        public List<HierarchyEntity> propCaseworkerList = new List<HierarchyEntity>();

        List<CaseHierarchyEntity> propCaseHieNameEntity { get; set; }

        public List<CaseSiteEntity> propCaseAllSiteEntity { get; set; }

        #endregion

        string Img_Blank = "blank";
        string Img_Tick = "icon-gridtick";

        //string Img_Blank = Consts.Icons.ico_Blank;
        //string Img_Tick = new Gizmox.WebGUI.Common.Resources.ImageResourceHandle("tick-icon10.png");

        private void Form_Load()
        {
            panel2.Visible = false;
            lblSelProg.Visible = false;
            cmbSelProg.Visible = false;
            pnlShowDetailrdb.Visible = false;
            //this.chkbDet.Location = new System.Drawing.Point(405, 351);//6, 86);
            //this.panel7.Location = new System.Drawing.Point(405, 351);//80, 83);
            pnlgvApp.Visible = false;
            this.pnlgvFunnel.Size = new Size(940,455);

            propCAList = _model.SPAdminData.Browse_CAMAST(null, null, null, null);
            propMSList = _model.SPAdminData.Browse_MSMAST(null, null, null, null, null);

            propCaseHieNameEntity = _model.AdhocData.Browse_CASEHIE("**", "**", "**", BaseForm.UserID, BaseForm.BaseAdminAgency); //Vikash,Added UserID and AdminAgency
            propCaseSp2List = _model.SPAdminData.Get_CASESP2(null, null, null, null);

            DataSet dsSP_Services = DatabaseLayer.SPAdminDB.Browse_CASESP0(null, null, null, null, null, null, null, null, null);
            if (dsSP_Services != null && dsSP_Services.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow row in dsSP_Services.Tables[0].Rows)
                    SP_Services.Add(new CASESP0Entity(row));
            }

        }

        #region Vikash added
        void fillcombo()
        {
            cmbCaseType.Items.Clear();
            cmbCaseType.ColorMember = "FavoriteColor";
            List<CommonEntity> CaseType = _model.lookupDataAccess.GetCaseType();
            CaseType = CaseType.OrderByDescending(u => u.Active.Trim()).ToList();
            foreach (CommonEntity casetype in CaseType)
            {
                cmbCaseType.Items.Add(new Captain.Common.Utilities.ListItem(casetype.Desc, casetype.Code, casetype.Active, casetype.Active.Equals("Y") ? Color.Black : Color.Red));
            }
            cmbCaseType.Items.Insert(0, new Captain.Common.Utilities.ListItem("All", "**"));
            cmbCaseType.SelectedIndex = 0;
        }

        private void cmbCaseType_SelectedIndexChanged(object sender, EventArgs e)
        {
            gvFunnel.Rows.Clear();
            gvApp.Rows.Clear();
        }

        #endregion
        string strNameFormat = null, strCwFormat = null;
        private void FillCaseworker()
        {
            if (Agency != "**")
            {
                DataSet ds2 = Captain.DatabaseLayer.AgyTab.GetHierarchyNames(Agency, "**", "**");
                //string strNameFormat = null, strCwFormat = null;
                if (ds2.Tables[0].Rows.Count > 0)
                {
                    strNameFormat = ds2.Tables[0].Rows[0]["HIE_CN_FORMAT"].ToString();
                    strCwFormat = ds2.Tables[0].Rows[0]["HIE_CW_FORMAT"].ToString();
                }
            }

            propCaseworkerList = _model.CaseMstData.GetCaseWorker("I", "**", "**", "**");
            cmbWorker.Items.Clear();
            cmbWorker.ColorMember = "FavoriteColor";
            List<Captain.Common.Utilities.ListItem> listItem = new List<Captain.Common.Utilities.ListItem>();
            //CmbWorker.Items.Insert(0, new ListItem("All", "**"));
            listItem.Add(new Captain.Common.Utilities.ListItem("All Caseworkers", "****"));
            if (Agency != "**")
            {
                DataSet ds1 = Captain.DatabaseLayer.CaseMst.GetCaseWorker(strCwFormat, Agency, Depart, Program);
                if (ds1.Tables.Count > 0)
                {
                    DataTable dt1 = ds1.Tables[0];
                    if (dt1.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dt1.Rows)
                            listItem.Add(new Captain.Common.Utilities.ListItem(dr["NAME"].ToString().Trim(), dr["PWH_CASEWORKER"].ToString().Trim(), dr["PWH_INACTIVE"].ToString().Trim(), dr["PWH_INACTIVE"].ToString().Trim().Equals("Y") ? Color.Red : Color.Black));
                    }
                }
            }
            else
            {
                DataSet ds1 = Captain.DatabaseLayer.CaseMst.GetAllCaseWorkers(string.Empty);
                if (ds1.Tables.Count > 0)
                {
                    DataTable dt1 = ds1.Tables[0];
                    if (dt1.Rows.Count > 0)
                    {
                        foreach (DataRow dr in dt1.Rows)
                            listItem.Add(new Captain.Common.Utilities.ListItem(dr["NAME"].ToString().Trim(), dr["PWH_CASEWORKER"].ToString().Trim()));
                    }
                }
            }
            cmbWorker.Items.AddRange(listItem.ToArray());
            cmbWorker.SelectedIndex = 0;
        }

        private void Fill_Sites()
        {
            cmbSite.Items.Clear();
            CaseSiteEntity Search_Entity = new CaseSiteEntity(true);
            Search_Entity.SiteAGENCY = Agency;
            Search_Entity.SiteROOM = "0000";

            propCaseAllSiteEntity = _model.CaseMstData.Browse_CASESITE(Search_Entity, "Browse");

            cmbSite.ColorMember = "FavoriteColor";
            
            List<Captain.Common.Utilities.ListItem> listItem = new List<Captain.Common.Utilities.ListItem>();
            listItem.Add(new Captain.Common.Utilities.ListItem("All Sites", "0", " ", Color.Black));
            string SiteAgency = Agency.Trim();
            //DataSet ds = Captain.DatabaseLayer.Lookups.GetCaseSite();
            DataSet ds = Captain.DatabaseLayer.CaseMst.GetSiteByHIE(/*BaseForm.BaseAgency*/SiteAgency, string.Empty, string.Empty);
            if (ds.Tables.Count > 0)
            {
                DataTable Sites_Table = ds.Tables[0];
                if (Sites_Table.Rows.Count > 0)
                {
                    //if (Mode.Equals("Add"))
                    //{
                    //    DataView dv = new DataView(Sites_Table);
                    //    dv.RowFilter = "SITE_ACTIVE='Y'";
                    //    Sites_Table = dv.ToTable();
                    //}

                    foreach (DataRow dr in Sites_Table.Rows)
                        listItem.Add(new Captain.Common.Utilities.ListItem(dr["SITE_NAME"].ToString(), dr["SITE_NUMBER"].ToString().Trim(), dr["SITE_ACTIVE"].ToString().Trim(), (dr["SITE_ACTIVE"].ToString().Trim().Equals("Y") ? Color.Black : Color.Red)));
                    //listItem.Add(new Captain.Common.Utilities.ListItem(dr["SITE_NAME"].ToString().Trim(), dr["SITE_NUMBER"].ToString().Trim()));
                }
                if (BaseForm.BaseAgencyControlDetails.SiteSecurity == "1")
                {
                    List<HierarchyEntity> userHierarchy = _model.UserProfileAccess.GetUserHierarchyByID(BaseForm.UserID);
                    HierarchyEntity hierarchyEntity = new HierarchyEntity(); List<CaseSiteEntity> selsites = new List<CaseSiteEntity>();
                    foreach (HierarchyEntity Entity in userHierarchy)
                    {
                        if (Entity.Agency == BaseForm.BaseAgency && Entity.Dept == BaseForm.BaseDept && Entity.Prog == BaseForm.BaseProg)
                            hierarchyEntity = Entity;
                        else if (Entity.Agency == BaseForm.BaseAgency && Entity.Dept == BaseForm.BaseDept && Entity.Prog == "**")
                            hierarchyEntity = Entity;
                        else if (Entity.Agency == BaseForm.BaseAgency && Entity.Dept == "**" && Entity.Prog == "**")
                            hierarchyEntity = Entity;
                        else if (Entity.Agency == "**" && Entity.Dept == "**" && Entity.Prog == "**")
                        { hierarchyEntity = null; }
                    }

                    if (hierarchyEntity != null)
                    {
                        List<Captain.Common.Utilities.ListItem> listItemSite = new List<Captain.Common.Utilities.ListItem>();
                        //listItemSite.Add(new Captain.Common.Utilities.ListItem("   ", "0", " ", Color.White));
                        if (hierarchyEntity.Sites.Length > 0)
                        {
                            string[] Sites = hierarchyEntity.Sites.Split(',');

                            for (int i = 0; i < Sites.Length; i++)
                            {
                                if (!string.IsNullOrEmpty(Sites[i].ToString().Trim()))
                                {
                                    foreach (Captain.Common.Utilities.ListItem casesite in listItem) //Site_List)//ListcaseSiteEntity)
                                    {
                                        if (Sites[i].ToString() == casesite.Value.ToString())
                                        {
                                            listItemSite.Add(casesite);
                                            //break;
                                        }
                                        // Sel_Site_Codes += "'" + casesite.SiteNUMBER + "' ,";
                                    }
                                }
                            }
                            //strsiteRoomNames = hierarchyEntity.Sites;
                            listItem = listItemSite;
                        }

                    }
                }
            }
            cmbSite.Items.AddRange(listItem.ToArray());
            cmbSite.SelectedIndex = 0;
        }

        List<CASESPMEntity> CASESPM_SP_List;
        CASESPMEntity Search_Entity = new CASESPMEntity();
        private void Fill_Applicant_SPs()
        {
            Search_Entity.agency = Agency;
            Search_Entity.dept = Depart;
            Search_Entity.program = Program;
            //Search_Entity.year = Year;
            Search_Entity.year = null;                          // Year will be always Four-Spaces in CASESPM
            Search_Entity.app_no = null;

            Search_Entity.service_plan = Search_Entity.caseworker = Search_Entity.site = null;
            Search_Entity.startdate = Search_Entity.estdate = Search_Entity.compdate = null;
            Search_Entity.sel_branches = Search_Entity.have_addlbr = Search_Entity.date_lstc = null;
            Search_Entity.lstc_operator = Search_Entity.date_add = Search_Entity.add_operator = null;
            Search_Entity.Sp0_Desc = Search_Entity.Sp0_Validatetd = Search_Entity.Def_Program =
            Search_Entity.Bulk_Post = null;

            CASESPM_SP_List = _model.SPAdminData.Browse_CASESPM(Search_Entity, "Browse");
        }

        private void Fill_SP_Grid()
        {
            gvSps.Rows.Clear();
            List<CASESP1Entity> SP_Hierarchies = new List<CASESP1Entity>();
            string SPAgy = string.Empty; string SPDept = string.Empty, SPProg = string.Empty;
            if (Agency == "**") SPAgy = null; else SPAgy = Agency; if (Depart == "**") SPDept = null; else SPDept = Depart;
            if (Program == "**") SPProg = null; else SPProg = Program;
            string ACR_SERV_Hies = string.Empty;
            if (!string.IsNullOrEmpty(BaseForm.BaseAgencyControlDetails.ServicePlanHiecontrol.Trim()))
            {
                if (BaseForm.BaseAgencyControlDetails.ServicePlanHiecontrol.Trim() == "Y")
                    ACR_SERV_Hies = "S";
            }

            if (ACR_SERV_Hies == "Y" || ACR_SERV_Hies == "S")
            {
                if (BaseForm.BaseAgencyControlDetails.SerPlanAllow.Trim() == "D")
                    SP_Hierarchies = _model.SPAdminData.CASESP1_SerPlans(null, SPAgy, SPDept, null, BaseForm.UserID);
                else
                    SP_Hierarchies = _model.SPAdminData.CASESP1_SerPlans(null, SPAgy, null, null, BaseForm.UserID);
            }
            else
            {
                SP_Hierarchies = _model.SPAdminData.Browse_CASESP1(null, SPAgy, SPDept, SPProg);
                //if (SP_Hierarchies.Count > 0)
                //    SP_Hierarchies = SP_Hierarchies.OrderByDescending(u => u.Sp0_Active).ThenBy(u => u.SP_Desc.Trim()).ToList();
            }

            //SP_Hierarchies = _model.SPAdminData.CASESP1_SerPlans(null, SPAgy, SPDept, SPProg, BaseForm.UserID);


            //SP_Hierarchies = _model.SPAdminData.Browse_CASESP1(null, SPAgy, SPDept, SPProg);
            string Sp_Plan = string.Empty, Priv_Sp_Plan = string.Empty;
            if (SP_Hierarchies.Count > 0)
            {
                SP_Hierarchies = SP_Hierarchies.OrderByDescending(u => u.Sp0_Active).ThenBy(u => u.SP_Desc.Trim()).ToList();

                string SP_Valid = null;
                foreach (CASESP1Entity Entity in SP_Hierarchies)  // 08122012
                {
                    Sp_Plan = Entity.Code.Trim();
                    if (Sp_Plan != Priv_Sp_Plan)
                    {
                        SP_Valid = Entity.SP_validated;

                       int rowIndex= gvSps.Rows.Add(false, Entity.SP_Desc.Trim(), Entity.Code.ToString(), "N");//Img_Blank
                        Priv_Sp_Plan = Sp_Plan;

                        if (Entity.Sp0_Active.Trim() == "N")
                            gvSps.Rows[rowIndex].DefaultCellStyle.ForeColor = System.Drawing.Color.Red;

                    }
                }
                gvSps.Rows[0].Tag = 0;
                if(gvSps.Rows.Count>0)
                    gvSps.Rows[0].Selected = true;
            }
        }


        private void CmbYear_SelectedIndexChanged(object sender, EventArgs e)
        {
            Program_Year = "    ";
            if (!(string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString())))
                Program_Year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();
        }

        string Program_Year;
        private void Set_Report_Hierarchy(string Agy, string Dept, string Prog, string Year)
        {
            Txt_HieDesc.Clear();
            CmbYear.Visible = false;
            Program_Year = "    ";
            Current_Hierarchy = Agy + Dept + Prog;
            Current_Hierarchy_DB = Agy + "-" + Dept + "-" + Prog;

            if (Agy != "**")
            {
                DataSet ds_AGY = Captain.DatabaseLayer.AgyTab.GetHierarchyNames(Agy, "**", "**");
                if (ds_AGY.Tables.Count > 0)
                {
                    if (ds_AGY.Tables[0].Rows.Count > 0)
                        Txt_HieDesc.Text += "AGY : " + Agy + " - " + (ds_AGY.Tables[0].Rows[0]["HIE_NAME"].ToString()).Trim() + "      ";
                }
            }
            else
                Txt_HieDesc.Text += "AGY : ** - All Agencies      ";

            if (Dept != "**")
            {
                DataSet ds_DEPT = Captain.DatabaseLayer.AgyTab.GetHierarchyNames(Agy, Dept, "**");
                if (ds_DEPT.Tables.Count > 0)
                {
                    if (ds_DEPT.Tables[0].Rows.Count > 0)
                        Txt_HieDesc.Text += "DEPT : " + Dept + " - " + (ds_DEPT.Tables[0].Rows[0]["HIE_NAME"].ToString()).Trim() + "      ";
                }
            }
            else
                Txt_HieDesc.Text += "DEPT : ** - All Departments      ";

            if (Prog != "**")
            {
                DataSet ds_PROG = Captain.DatabaseLayer.AgyTab.GetHierarchyNames(Agy, Dept, Prog);
                if (ds_PROG.Tables.Count > 0)
                {
                    if (ds_PROG.Tables[0].Rows.Count > 0)
                        Txt_HieDesc.Text += "PROG : " + Prog + " - " + (ds_PROG.Tables[0].Rows[0]["HIE_NAME"].ToString()).Trim();
                }
            }
            else
                Txt_HieDesc.Text += "PROG : ** - All Programs ";


            if (Agy != "**")
                Get_NameFormat_For_Agencirs(Agy);
            else
                Member_NameFormat = CAseWorkerr_NameFormat = "1";

            if (Agy != "**" && Dept != "**" && Prog != "**")
            {

                FillYearCombo(Agy, Dept, Prog, Year);
            }
            else
            {
                Agency = Agy; Depart = Dept; Program = Prog; strYear = "    ";
                Fill_SP_Grid(); FillProgramsCombo(); FillCaseworker();Fill_Sites();FillProgramsCombo();
                //this.pnlHie/*Txt_HieDesc*/.Size = new System.Drawing.Size(913, 38); this.Size = new Size(957, 753);
                this.Txt_HieDesc.Size = new Size(880, 25);
            }
        }

        string DepYear; string Fund_SW = "N";
        bool DefHieExist = false;
        private void FillYearCombo(string Agy, string Dept, string Prog, string Year)
        {
            CmbYear.Visible = DefHieExist = false;
            Program_Year = "    ";
            if (!string.IsNullOrEmpty(Year.Trim()))
                DefHieExist = true;

            DataSet ds = Captain.DatabaseLayer.MainMenu.GetCaseDepForHierarchy(Agy, Dept, Prog);
            if (ds.Tables.Count > 0)
            {
                DataTable dt = ds.Tables[0];
                int YearIndex = 0;

                if (dt.Rows.Count > 0)
                {
                    Program_Year = DepYear = dt.Rows[0]["DEP_YEAR"].ToString();
                    if (!(String.IsNullOrEmpty(DepYear)) && DepYear != null && DepYear != "    ")
                    {
                        int TmpYear = int.Parse(DepYear);
                        int TempCompareYear = 0;
                        string TmpYearStr = null;
                        if (!(String.IsNullOrEmpty(Year)) && Year != null && Year != " " && DefHieExist)
                            TempCompareYear = int.Parse(Year);
                        List<Captain.Common.Utilities.ListItem> listItem = new List<Captain.Common.Utilities.ListItem>();
                        for (int i = 0; i < 10; i++)
                        {
                            TmpYearStr = (TmpYear - i).ToString();
                            listItem.Add(new Captain.Common.Utilities.ListItem(TmpYearStr, i));
                            if (TempCompareYear == (TmpYear - i) && TmpYear != 0 && TempCompareYear != 0)
                                YearIndex = i;
                        }

                        CmbYear.Items.AddRange(listItem.ToArray());

                        CmbYear.Visible = true;

                        if (DefHieExist)
                            CmbYear.SelectedIndex = YearIndex;
                        else
                            CmbYear.SelectedIndex = 0;
                    }
                }
            }

            Agency = Agy; Depart = Dept; Program = Prog; strYear = Program_Year;

            //ChldMstEntity chldMstDetails = _model.ChldMstData.GetChldMstDetails(Agency, Depart, Program, Program_Year, string.Empty, string.Empty);
            //if (chldMstDetails == null)
            //{
            List<ChldAttnEntity> App_Attn_List = new List<ChldAttnEntity>();
            App_Attn_List = _model.ChldAttnData.GetChldAttnDetails(Agency, Depart, Program, Program_Year, string.Empty, string.Empty, string.Empty, string.Empty, string.Empty, string.Empty);
            if (App_Attn_List.Count > 0)
            { Fund_SW = "Y"; lblSelProg.Text = "Fund"; rbEnrApppBY_Hie.Text = "Enroll applicants by Fund"; }
            else
            { Fund_SW = "N"; lblSelProg.Text = "Program"; rbEnrApppBY_Hie.Text = "Enroll applicants by Program"; }
            //}
            //else Fund_SW = "Y";

            Fill_SP_Grid(); FillProgramsCombo(); FillCaseworker(); Fill_Sites();
            if (!string.IsNullOrEmpty(Program_Year.Trim()))
            {
                //this.Size = new Size(957, 753);
                //this.pnlHie.Size = new Size(913, 38);
                this.Txt_HieDesc.Size = new System.Drawing.Size(782, 25);

            }
            else
            {
                //this.Size = new Size(957, 753);
                //this.pnlHie.Size = new Size(913, 38);
                this.Txt_HieDesc.Size = new System.Drawing.Size(880, 25);
            }
        }

        private void Pb_Search_Hie_Click(object sender, EventArgs e)
        {
            //HierarchieSelectionFormNew hierarchieSelectionForm = new HierarchieSelectionFormNew(BaseForm, Current_Hierarchy_DB, "Master", "A", "*", "Reports");
            //hierarchieSelectionForm.FormClosed += new FormClosedEventHandler(OnHierarchieFormClosed);
            //hierarchieSelectionForm.StartPosition = FormStartPosition.CenterScreen;
            //hierarchieSelectionForm.ShowDialog();

            HierarchieSelection hierarchieSelectionForm = new HierarchieSelection(BaseForm, Current_Hierarchy_DB, "Master", "A", "*", "Reports", BaseForm.UserID);
            hierarchieSelectionForm.FormClosed += new FormClosedEventHandler(OnHierarchieFormClosed);
            hierarchieSelectionForm.StartPosition = FormStartPosition.CenterScreen;
            hierarchieSelectionForm.ShowDialog();
        }

        string Current_Hierarchy = "******", Current_Hierarchy_DB = "**-**-**";

        private void OnHierarchieFormClosed(object sender, FormClosedEventArgs e)
        {
            //HierarchieSelectionFormNew form = sender as HierarchieSelectionFormNew;
            HierarchieSelection form = sender as HierarchieSelection;

            if (form.DialogResult == DialogResult.OK)
            {
                List<HierarchyEntity> selectedHierarchies = form.SelectedHierarchies;
                string hierarchy = string.Empty;

                if (selectedHierarchies.Count > 0)
                {
                    foreach (HierarchyEntity row in selectedHierarchies)
                    {
                        hierarchy += (string.IsNullOrEmpty(row.Agency) ? "**" : row.Agency) + (string.IsNullOrEmpty(row.Dept) ? "**" : row.Dept) + (string.IsNullOrEmpty(row.Prog) ? "**" : row.Prog);
                    }
                    //Current_Hierarchy = hierarchy.Substring(0, 2) + "-" + hierarchy.Substring(2, 2) + "-" + hierarchy.Substring(4, 2);

                    
                    gvFunnel.Rows.Clear();
                    gvApp.Rows.Clear();
                    pnlgvApp.Visible = false;
                    this.pnlgvFunnel.Size = new Size(940, 455);
                    Set_Report_Hierarchy(hierarchy.Substring(0, 2), hierarchy.Substring(2, 2), hierarchy.Substring(4, 2), string.Empty);
                    propReportPath = _model.lookupDataAccess.GetReportPath();
                    
                }
            }
        }

        string Member_NameFormat = "1", CAseWorkerr_NameFormat = "1";
        private void Get_NameFormat_For_Agencirs(string Agency)
        {
            DataSet ds = Captain.DatabaseLayer.AgyTab.GetHierarchyNames(Agency, "**", "**");
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    Member_NameFormat = ds.Tables[0].Rows[0]["HIE_CN_FORMAT"].ToString();
                    CAseWorkerr_NameFormat = ds.Tables[0].Rows[0]["HIE_CW_FORMAT"].ToString();
                }
            }

        }

        private void rbSelSer_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void rbEnrApppBY_Hie_CheckedChanged(object sender, EventArgs e)
        {
            if (rbEnrApppBY_Hie.Checked.Equals(true))
            {
                lblSelProg.Visible = true;
                cmbSelProg.Visible = true;
                //this.chkbDet.Location = new System.Drawing.Point(6, 109);
                //this.panel7.Location = new System.Drawing.Point(80, 105);

                cmbSelProg.SelectedIndex = 0;
                this.chbSerOutOnly.Location = new Point(12, 193);
            }
            else
            {
                lblSelProg.Visible = false;
                cmbSelProg.Visible = false;
                //this.chkbDet.Location = new System.Drawing.Point(6, 86);
                //this.panel7.Location = new System.Drawing.Point(80, 83);

                this.chbSerOutOnly.Location = new Point(12, 167);
            }
        }

        string Hie_Code = string.Empty;
        private void FillProgramsCombo()
        {
            cmbSelProg.Items.Clear();
            if (Fund_SW == "N")
            {
                string HieProg = string.Empty; if (Program != "**") HieProg = "**"; else HieProg = Program;
                DataSet dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Agency, /*+ "-" +*/ Depart, /*+ "-" +*/ HieProg);//Vikash commented
                string DefProg = null;
                if (dsHie.Tables.Count > 0)
                {
                    if (dsHie.Tables[0].Rows.Count > 0)
                    {
                        DataTable dt = dsHie.Tables[0];

                        List<Captain.Common.Utilities.ListItem> listItem = new List<Captain.Common.Utilities.ListItem>();
                        int TmpRows = 0;
                        int ProgIndex = 0;
                        try
                        {
                            foreach (DataRow dr in dt.Rows)
                            {
                                if (!string.IsNullOrEmpty(dr["HIE_DEPT"].ToString().Trim()))
                                {
                                    if (!string.IsNullOrEmpty(dr["HIE_PROGRAM"].ToString().Trim()))
                                    {

                                        listItem.Add(new Captain.Common.Utilities.ListItem(dr["HIE_NAME"].ToString(), dr["CODE"].ToString()));//dr["Prog"] + " - " + 
                                        if (DefProg == dr["CODE"].ToString())
                                            ProgIndex = TmpRows;
                                        //Hie_Code = dr["CODE"].ToString().Trim();
                                        TmpRows++;
                                    }
                                }
                            }

                            if (TmpRows > 0)
                            {
                                cmbSelProg.Items.AddRange(listItem.ToArray());
                                cmbSelProg.Enabled = true;
                                if (DefHieExist)
                                    cmbSelProg.SelectedIndex = ProgIndex;
                                else
                                {
                                    if (cmbSelProg.Items.Count == 1)
                                        cmbSelProg.SelectedIndex = 0;
                                }
                                cmbSelProg.SelectedIndex = 0;
                            }
                        }
                        catch (Exception ex) { }
                    }
                    else
                        AlertBox.Show("Programs are not Defined", MessageBoxIcon.Warning);
                }
            }
            else if (Fund_SW == "Y")
            {
                propfundingSource = _model.SPAdminData.GetLookUpFromAGYTAB_EXT(Consts.AgyTab.CASEMNGMTFUNDSRC, "A");
                if (propfundingSource.Count > 0)
                {
                    int TmpRows = 0;
                    List<Captain.Common.Utilities.ListItem> listItem = new List<Captain.Common.Utilities.ListItem>();
                    foreach (SPCommonEntity Entity in propfundingSource)
                    {
                        if (!string.IsNullOrEmpty(Entity.Ext.Trim()))
                        {
                            listItem.Add(new Captain.Common.Utilities.ListItem(Entity.Desc, Entity.Code));
                            TmpRows++;
                        }
                    }

                    if (TmpRows > 0)
                    {
                        cmbSelProg.Items.AddRange(listItem.ToArray());
                        cmbSelProg.Enabled = true;
                        cmbSelProg.SelectedIndex = 0;
                    }
                }
                else
                    AlertBox.Show("Funding Sources are not Defined", MessageBoxIcon.Warning);
            }
        }


        string strFolderPath = string.Empty;
        string Random_Filename = null; string PdfName = null;

        List<CASESPMEntity> CaseSPM_List = new List<CASESPMEntity>();
        CASESPMEntity Search_CaseSPM_Entity = new CASESPMEntity(true);
        List<CASEACTEntity> CaseAct_Details = new List<CASEACTEntity>();
        List<CASEMSEntity> CaseMS_Details = new List<CASEMSEntity>();
        CASEMSEntity Search_MS_Details = new CASEMSEntity(true);
        CASEACTEntity CA_Entity = new CASEACTEntity(true);
        private void On_SaveForm_Closed(object sender, FormClosedEventArgs e)
        {
            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                string PdfName = "Pdf File";
                PdfName = form.GetFileName();
                //PdfName = strFolderPath + PdfName;
                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName;
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
                }
                catch (Exception ex)
                {
                    AlertBox.Show("Error", MessageBoxIcon.Error);
                }

                try
                {
                    string Tmpstr = PdfName + ".pdf";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = PdfName + newFileName.Substring(0, length) + ".pdf";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    PdfName = Random_Filename;
                else
                    PdfName += ".pdf";

                FileStream fs = new FileStream(PdfName, FileMode.Create);

                Document document = new Document(PageSize.A4, 30f, 30f, 30f, 50f);
                PdfWriter writer = PdfWriter.GetInstance(document, fs);
                document.Open();

                BaseFont bf_Calibri = BaseFont.CreateFont("c:/windows/fonts/calibri.ttf", BaseFont.WINANSI, BaseFont.EMBEDDED);
                BaseFont bf_TimesRomanI = BaseFont.CreateFont(BaseFont.TIMES_ITALIC, BaseFont.CP1250, false);
                BaseFont bf_Times = BaseFont.CreateFont(BaseFont.TIMES_BOLD, BaseFont.CP1250, false);
                iTextSharp.text.Font fc = new iTextSharp.text.Font(bf_Calibri, 10, 2);
                iTextSharp.text.Font fc1 = new iTextSharp.text.Font(bf_Times, 10, 2, BaseColor.BLUE);
                iTextSharp.text.Font TableFont = new iTextSharp.text.Font(bf_Calibri, 8);
                iTextSharp.text.Font TblFontBold = new iTextSharp.text.Font(bf_Times, 8);
                iTextSharp.text.Font TblFont = new iTextSharp.text.Font(bf_Times, 11);
                iTextSharp.text.Font TblParamsHeaderFont = new iTextSharp.text.Font(bf_Calibri, 11, 1, new BaseColor(System.Drawing.ColorTranslator.FromHtml("#2e5f71")));
                iTextSharp.text.Font TblHeaderTitleFont = new iTextSharp.text.Font(bf_Calibri, 14, 1, new BaseColor(System.Drawing.ColorTranslator.FromHtml("#806000")));
                iTextSharp.text.Font fnttimesRoman_Italic = new iTextSharp.text.Font(bf_TimesRomanI, 9, iTextSharp.text.Font.NORMAL, new BaseColor(System.Drawing.ColorTranslator.FromHtml("#000000")));


                HierarchyEntity hierarchyDetails = _model.HierarchyAndPrograms.GetCaseHierarchy("AGENCY", BaseForm.BaseAdminAgency, string.Empty, string.Empty, string.Empty, string.Empty);
                string _strImageFolderPath = "";
                if (hierarchyDetails != null)
                {
                    string LogoName = hierarchyDetails.Logo.ToString();
                    _strImageFolderPath = _model.lookupDataAccess.GetReportPath() + "\\AgencyLogos\\";
                    FileInfo info = new FileInfo(_strImageFolderPath + LogoName);
                    if (info.Exists)
                        _strImageFolderPath = _model.lookupDataAccess.GetReportPath() + "\\AgencyLogos\\" + LogoName;
                    else
                        _strImageFolderPath = "";
                }

                PdfPTable sample = new PdfPTable(2);
                sample.TotalWidth = 510;/*400f;*/
                sample.WidthPercentage = 100;
                sample.LockedWidth = true;
                float[] sampleHeaderwidths = new float[] { 20f, 100f };
                sample.SetWidths(sampleHeaderwidths);
                sample.HorizontalAlignment = Element.ALIGN_CENTER;
                //**sample.SpacingAfter = 100f;

                document.Add(sample);

                PdfPTable Header = new PdfPTable(8);
                Header.TotalWidth = 510f;/*400f;*/
                Header.WidthPercentage = 100;
                Header.LockedWidth = true;
                float[] Headerwidths = new float[] { 23f, 13f,13f,13f,13f,13f,13f,13f };
                Header.SetWidths(Headerwidths);
                Header.HorizontalAlignment = Element.ALIGN_CENTER;
                //**Header.SpacingBefore = 100f;

                //border trails
                PdfContentByte content = writer.DirectContent;
                iTextSharp.text.Rectangle rectangle = new iTextSharp.text.Rectangle(document.PageSize);
                rectangle.Left += document.LeftMargin;
                rectangle.Right -= document.RightMargin;
                rectangle.Top -= document.TopMargin;
                rectangle.Bottom += document.BottomMargin;
                content.SetColorStroke(BaseColor.BLACK);
                content.Rectangle(rectangle.Left, rectangle.Bottom, rectangle.Width, rectangle.Height);
                content.Stroke();

                bool Sel = true; string serv = string.Empty;
                foreach (DataGridViewRow row in gvSps.Rows)
                {
                    if (row.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        serv += row.Cells["SP_Code"].Value.ToString().Trim() + ",";
                        //Sel = true;
                    }
                    else if (row.Cells["Selected"].Value.ToString().Trim() == "N")
                        Sel = false;

                }

                string descserv = /*"Service Plan : */"All Service Plans";
                if (!Sel)
                    descserv = /*"Selected Sevice Plans : "*/serv.Substring(0, serv.Length - 1);

                if (_strImageFolderPath != "")
                {
                    iTextSharp.text.Image imgLogo = iTextSharp.text.Image.GetInstance(_strImageFolderPath);
                    PdfPCell cellLogo = new PdfPCell(imgLogo);
                    cellLogo.HorizontalAlignment = Element.ALIGN_CENTER;
                    cellLogo.Colspan = 8;
                    cellLogo.Padding = 5;
                    cellLogo.Border = iTextSharp.text.Rectangle.NO_BORDER;
                    Header.AddCell(cellLogo);
                }

                PdfPCell Heading = new PdfPCell(new Phrase(Privileges.Program + " - " + Privileges.PrivilegeName, TblHeaderTitleFont));
                Heading.HorizontalAlignment = Element.ALIGN_CENTER;
                Heading.Colspan = 8;
                Heading.PaddingBottom = 15;
                Heading.Border = iTextSharp.text.Rectangle.NO_BORDER;
                Header.AddCell(Heading);

                //PdfPCell row2 = new PdfPCell(new Phrase("Run By : " + LookupDataAccess.GetMemberName(BaseForm.UserProfile.FirstName.Trim(), BaseForm.UserProfile.MI.Trim(), BaseForm.UserProfile.LastName.Trim(), "3"), TableFont));
                //row2.HorizontalAlignment = Element.ALIGN_LEFT;
                ////row2.Colspan = 2;
                //row2.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(row2);

                //PdfPCell row21 = new PdfPCell(new Phrase("Date : " + DateTime.Now.ToString(), TableFont));
                //row21.HorizontalAlignment = Element.ALIGN_RIGHT;
                ////row2.Colspan = 2;
                //row21.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(row21);

                PdfPCell row3 = new PdfPCell(new Phrase("Selected Report Parameters", TblParamsHeaderFont));
                row3.HorizontalAlignment = Element.ALIGN_CENTER;
                row3.VerticalAlignment = PdfPCell.ALIGN_TOP;
                row3.PaddingBottom = 5;
                row3.MinimumHeight = 6;
                row3.Colspan = 8;
                row3.Border = iTextSharp.text.Rectangle.NO_BORDER;
                row3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b8e9fb"));
                Header.AddCell(row3);

                //PdfPCell Heading1 = new PdfPCell(new Phrase(" ", TableFont));
                //Heading1.HorizontalAlignment = Element.ALIGN_LEFT;
                //Heading1.Colspan = 2;
                //Heading1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(Heading1);

                //PdfPCell Header1 = new PdfPCell(new Phrase("Hierarchy  ", TableFont));
                //Header1.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(Header1);

                //PdfPCell Header2 = new PdfPCell(new Phrase(":  "+Txt_HieDesc.Text.Trim(), TableFont));
                //Header2.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header2.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(Header2);

                string Agy = /*Agency : */"All"; string Dept = /*Dept : */"All"; string Prg = /*Program : */"All"; string Header_year = string.Empty;
                if (Agency != "**") Agy = /*"Agency : " + */Agency;
                if (Depart != "**") Dept = /*"Dept : " + */Depart;
                if (Program != "**") Prg = /*"Program : " + */Program;
                if (CmbYear.Visible == true)
                    Header_year = /*"Year : " + */((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();
                
                if (CmbYear.Visible == true)
                {
                    PdfPCell Hierarchy = new PdfPCell(new Phrase("  " + "Hierarchy", TableFont));
                    Hierarchy.HorizontalAlignment = Element.ALIGN_LEFT;
                    Hierarchy.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Hierarchy.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Hierarchy.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    Hierarchy.PaddingBottom = 5;
                    Header.AddCell(Hierarchy);

                    PdfPCell Hierarchy1 = new PdfPCell(new Phrase("Agency: " + Agy + "," + "Department: " + Dept + ", " + "Program: " + Prg + ", " + "Year: " + Header_year, TableFont));
                    Hierarchy1.HorizontalAlignment = Element.ALIGN_LEFT;
                    Hierarchy1.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Hierarchy1.Colspan = 7;
                    Hierarchy1.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Hierarchy1.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    Hierarchy1.PaddingBottom = 5;
                    Header.AddCell(Hierarchy1);
                }
                else
                {
                    PdfPCell Hierarchy = new PdfPCell(new Phrase("  " + "Hierarchy", TableFont));
                    Hierarchy.HorizontalAlignment = Element.ALIGN_LEFT;
                    Hierarchy.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Hierarchy.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Hierarchy.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    Hierarchy.PaddingBottom = 5;
                    Header.AddCell(Hierarchy);

                    PdfPCell Hierarchy1 = new PdfPCell(new Phrase("Agency: " + Agy + ", " + "Department: " + Dept + ", " + "Program: " + Prg, TableFont));
                    Hierarchy1.HorizontalAlignment = Element.ALIGN_LEFT;
                    Hierarchy1.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Hierarchy1.Colspan = 7;
                    Hierarchy1.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Hierarchy1.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    Hierarchy1.PaddingBottom = 5;
                    Header.AddCell(Hierarchy1);
                }

                if (!Sel)
                {
                    PdfPCell header3 = new PdfPCell(new Phrase("  " + "Selected Sevice Plan(s)", TableFont));
                    header3.HorizontalAlignment = Element.ALIGN_LEFT;
                    header3.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    header3.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    header3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    header3.PaddingBottom = 5;
                    Header.AddCell(header3);

                    //Vikash added
                    PdfPCell Header31 = new PdfPCell(new Phrase(descserv, TableFont));
                    Header31.HorizontalAlignment = Element.ALIGN_LEFT;
                    Header31.Colspan = 7;
                    Header31.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Header31.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Header31.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    Header31.PaddingBottom = 5;
                    Header.AddCell(Header31);
                }
                else
                {
                    //Vikash added
                    PdfPCell Header3 = new PdfPCell(new Phrase("  " + "Sevice Plan", TableFont));
                    Header3.HorizontalAlignment = Element.ALIGN_LEFT;
                    Header3.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Header3.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Header3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    Header3.PaddingBottom = 5;
                    Header.AddCell(Header3);

                    //Vikash added
                    PdfPCell Header31 = new PdfPCell(new Phrase(descserv, TableFont));
                    Header31.HorizontalAlignment = Element.ALIGN_LEFT;
                    Header31.Colspan = 7;
                    Header31.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Header31.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Header31.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    Header31.PaddingBottom = 5;
                    Header.AddCell(Header31);
                }

                //PdfPCell Header4 = new PdfPCell(new Phrase(":  "+serv, TableFont));
                //Header4.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header4.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(Header4);

                PdfPCell Header5 = new PdfPCell(new Phrase("  " + "Case Worker" /*+ ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Text.Trim()*/, TableFont));
                Header5.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header5.Colspan = 2;
                Header5.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                Header5.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                Header5.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                Header5.PaddingBottom = 5;
                //Header5.Border = iTextSharp.text.Rectangle.NO_BORDER;
                Header.AddCell(Header5);

                //Vikash added
                PdfPCell HeaderD2 = new PdfPCell(new Phrase(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Text.Trim(), TableFont));
                HeaderD2.HorizontalAlignment = Element.ALIGN_LEFT;
                HeaderD2.Colspan = 7;
                HeaderD2.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                HeaderD2.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                HeaderD2.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                HeaderD2.PaddingBottom = 5;
                //Header5.Border = iTextSharp.text.Rectangle.NO_BORDER;
                Header.AddCell(HeaderD2);

                PdfPCell Header6 = new PdfPCell(new Phrase("  " + "Site"/* + ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Text.Trim()*/, TableFont));
                Header6.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header6.Colspan = 2;
                Header6.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                Header6.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                Header6.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                Header6.PaddingBottom = 5;
                Header.AddCell(Header6);

                //Vikash added
                PdfPCell HeaderD3 = new PdfPCell(new Phrase(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Text.Trim(), TableFont));
                HeaderD3.HorizontalAlignment = Element.ALIGN_LEFT;
                HeaderD3.Colspan = 7;
                HeaderD3.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                HeaderD3.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                HeaderD3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                HeaderD3.PaddingBottom = 5;
                Header.AddCell(HeaderD3);

                if (dtpFrom.Checked == true)
                {
                    PdfPCell Header7 = new PdfPCell(new Phrase("  " + "Date Range"/* + LookupDataAccess.Getdate(dtpFrom.Value.ToString().Trim()) + */, TableFont));
                    Header7.HorizontalAlignment = Element.ALIGN_LEFT;
                    Header7.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Header7.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Header7.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    Header7.PaddingBottom = 5;
                    Header.AddCell(Header7);
                    //Vikash added
                    PdfPCell HeaderD4 = new PdfPCell(new Phrase("From: " +LookupDataAccess.Getdate(dtpFrom.Value.ToString().Trim()) + "      " + "To: " + LookupDataAccess.Getdate(dtpTo.Value.ToString().Trim()), TableFont));
                    HeaderD4.HorizontalAlignment = Element.ALIGN_LEFT;
                    HeaderD4.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    HeaderD4.Colspan = 7;
                    HeaderD4.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    HeaderD4.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    HeaderD4.PaddingBottom = 5;
                    Header.AddCell(HeaderD4);
                    ////Vikash added
                    //PdfPCell Header71 = new PdfPCell(new Phrase("To Date"/* + LookupDataAccess.Getdate(dtpTo.Value.ToString().Trim())*/, TableFont));
                    //Header71.HorizontalAlignment = Element.ALIGN_LEFT;
                    //Header71.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    //Header71.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    //Header71.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    //Header71.PaddingBottom = 5;
                    //Header.AddCell(Header71);
                    ////Vikash added
                    //PdfPCell HeaderD5 = new PdfPCell(new Phrase(LookupDataAccess.Getdate(dtpTo.Value.ToString().Trim()), TableFont));
                    //HeaderD5.HorizontalAlignment = Element.ALIGN_LEFT;
                    //HeaderD5.Colspan = 5;
                    //HeaderD5.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    //HeaderD5.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    //HeaderD5.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    //HeaderD5.PaddingBottom = 5;
                    //Header.AddCell(HeaderD5);
                }
                //if (dtpFrom.Checked == true)
                //{
                //    PdfPCell Header8 = new PdfPCell(new Phrase(":  "+dtpFrom.Text.Trim(), TableFont));
                //    Header8.HorizontalAlignment = Element.ALIGN_LEFT;
                //    Header8.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //    Header.AddCell(Header8);
                //}
                //else
                //{
                //    PdfPCell Header8 = new PdfPCell(new Phrase(":  ", TableFont));
                //    Header8.HorizontalAlignment = Element.ALIGN_LEFT;
                //    Header8.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //    Header.AddCell(Header8);
                //}

                //PdfPCell Header9 = new PdfPCell(new Phrase("To Date  ", TableFont));
                //Header9.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header9.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(Header9);

                //if (dtpTo.Checked == true)
                //{
                //    PdfPCell Header10 = new PdfPCell(new Phrase(":  "+dtpTo.Text.Trim(), TableFont));
                //    Header10.HorizontalAlignment = Element.ALIGN_LEFT;
                //    Header10.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //    Header.AddCell(Header10);
                //}
                //else
                //{
                //    PdfPCell Header10 = new PdfPCell(new Phrase(":  ", TableFont));
                //    Header10.HorizontalAlignment = Element.ALIGN_LEFT;
                //    Header10.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //    Header.AddCell(Header10);
                //}

                string EnrlProg = string.Empty;
                if (rbAllApp.Checked == true) EnrlProg = rbAllApp.Text.Trim();
                else if (rbEnrolApp.Checked == true) EnrlProg = rbEnrolApp.Text.Trim();
                else if (rbEnrApppBY_Hie.Checked == true) EnrlProg = rbEnrApppBY_Hie.Text.Trim();

                PdfPCell Header11 = new PdfPCell(new Phrase("  " +"Enroll Program"/* + EnrlProg*/, TableFont));
                Header11.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header11.Colspan = 2;
                Header11.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                Header11.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                Header11.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                Header11.PaddingBottom = 5;
                Header.AddCell(Header11);

                //Vikash added
                PdfPCell HeaderD6 = new PdfPCell(new Phrase(EnrlProg, TableFont));
                HeaderD6.HorizontalAlignment = Element.ALIGN_LEFT;
                HeaderD6.Colspan = 7;
                HeaderD6.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                HeaderD6.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                HeaderD6.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                HeaderD6.PaddingBottom = 5;
                Header.AddCell(HeaderD6);

                if (rbEnrApppBY_Hie.Checked == true)
                {
                    PdfPCell Header12 = new PdfPCell(new Phrase("  " + "Program"/* + cmbSelProg.Text.Trim()*/, TableFont));
                    Header12.HorizontalAlignment = Element.ALIGN_LEFT;
                    //Header12.Colspan = 2;
                    Header12.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    Header12.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    Header12.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#F2F2F2"));
                    Header12.PaddingBottom = 5;
                    Header.AddCell(Header12);

                    //Vikash added
                    PdfPCell HeaderD7 = new PdfPCell(new Phrase(cmbSelProg.Text.Trim(), TableFont));
                    HeaderD7.HorizontalAlignment = Element.ALIGN_LEFT;
                    HeaderD7.Colspan = 7;
                    HeaderD7.Border = iTextSharp.text.Rectangle.BOTTOM_BORDER;
                    HeaderD7.BorderColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#FFFFFF"));
                    HeaderD7.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#fbfbfb"));
                    HeaderD7.PaddingBottom = 5;
                    Header.AddCell(HeaderD7);
                }

                //string EnrlProg = string.Empty;
                //if (rbAllApp.Checked == true) EnrlProg = rbAllApp.Text.Trim();
                //else if (rbEnrolApp.Checked == true) EnrlProg = rbEnrolApp.Text.Trim();
                //else if (rbEnrApppBY_Hie.Checked == true) EnrlProg = rbEnrApppBY_Hie.Text.Trim();

                //PdfPCell Header12 = new PdfPCell(new Phrase(":  "+EnrlProg, TableFont));
                //Header12.HorizontalAlignment = Element.ALIGN_LEFT;
                //Header12.Border = iTextSharp.text.Rectangle.NO_BORDER;
                //Header.AddCell(Header12);

                if (Header.Rows.Count > 0)
                {
                    document.Add(Header);
                    ColumnText.ShowTextAligned(writer.DirectContent, Element.ALIGN_LEFT, new Phrase("Generated By : ", fnttimesRoman_Italic), 33, 40, 0);
                    ColumnText.ShowTextAligned(writer.DirectContent, Element.ALIGN_LEFT, new Phrase(LookupDataAccess.GetMemberName(BaseForm.UserProfile.FirstName.Trim(), BaseForm.UserProfile.MI.Trim(), BaseForm.UserProfile.LastName.Trim(), "3"), fnttimesRoman_Italic), 90, 40, 0);
                    ColumnText.ShowTextAligned(writer.DirectContent, Element.ALIGN_LEFT, new Phrase("Generated On : ", fnttimesRoman_Italic), 410, 40, 0);
                    ColumnText.ShowTextAligned(writer.DirectContent, Element.ALIGN_LEFT, new Phrase(DateTime.Now.ToString(), fnttimesRoman_Italic), 468, 40, 0);
                    document.NewPage();
                }


                PdfPTable table = new PdfPTable(3);
                table.TotalWidth = 500f;
                table.WidthPercentage = 100;
                table.LockedWidth = true;
                float[] widths = new float[] { 15f, 90f, 15f };
                table.SetWidths(widths);
                table.HorizontalAlignment = Element.ALIGN_CENTER;

                string Year_Value = string.Empty;
                if (CmbYear.Visible == true)
                    Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();
                //else
                //    Year_Value = "    ";

                string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty;
                if (Agency == "**") SP_Agy = null; else SP_Agy = Agency;
                if (Depart == "**") SP_Dept = null; else SP_Dept = Depart;
                if (Program == "**") SP_Prog = null; else SP_Prog = Program;
                //Search_CaseSPM_Entity.agency = SP_Agy; Search_CaseSPM_Entity.dept = SP_Dept; Search_CaseSPM_Entity.program = SP_Prog;
                //Search_CaseSPM_Entity.app_no = null; 
                //CaseSPM_List = _model.SPAdminData.Browse_CASESPM(Search_CaseSPM_Entity, "Browse");
                // DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                string CAMSDesc = null;
                string SerVicePlan = null; string SP_Desc = null;
                bool First = true; string Branch = null, Priv_Branch = null;

                List<AgyCommonFillEntity> Apps = new List<AgyCommonFillEntity>();
                foreach (Funnel_RepEntity row in CAFunnel)
                {
                    Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));
                }

                foreach (Funnel_RepEntity row in MSFunnel)
                    Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));

                List<AgyCommonFillEntity> Selapps = new List<AgyCommonFillEntity>();
                if (dtpFrom.Checked == true && dtpTo.Checked == true)
                    Apps = Apps.FindAll(u => Convert.ToDateTime(u.Desc) <= Convert.ToDateTime(dtpTo.Value.ToString()) && Convert.ToDateTime(u.Desc) >= Convert.ToDateTime(dtpFrom.Value.ToString()));


                CASESP0Entity SP_Sel_Service = new CASESP0Entity();
                foreach (DataGridViewRow drsp in gvSps.Rows)//for (int k = 0; k < cmbSerPlan.Items.Count; k++)
                {
                    BaseFont bf_Calibri1 = BaseFont.CreateFont("c:/windows/fonts/calibri.ttf", BaseFont.WINANSI, BaseFont.EMBEDDED);
                    iTextSharp.text.Font Calibri = new iTextSharp.text.Font(bf_Calibri, 10);
                    iTextSharp.text.Font TableFont1 = new iTextSharp.text.Font(bf_Calibri, 8);
                    iTextSharp.text.Font SubHeadFont = new iTextSharp.text.Font(bf_Calibri, 8, iTextSharp.text.Font.NORMAL, BaseColor.BLACK);
                    iTextSharp.text.Font TableFontBoldItalic = new iTextSharp.text.Font(bf_Calibri, 9, 3);
                    iTextSharp.text.Font TblFontBold1 = new iTextSharp.text.Font(bf_Calibri, 8, iTextSharp.text.Font.BOLD, BaseColor.WHITE);
                    iTextSharp.text.Font TblFontItalic = new iTextSharp.text.Font(bf_Calibri, 9, 2);
                    iTextSharp.text.Font Timesline = new iTextSharp.text.Font(bf_Calibri, 9, 4);
                    iTextSharp.text.Font MainHeaderLine = new iTextSharp.text.Font(bf_Calibri, 9, 1, BaseColor.BLACK);


                    if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        SerVicePlan = drsp.Cells["SP_Code"].Value.ToString().Trim();

                        //DataSet ds = DatabaseLayer.SPAdminDB.CaseACTMS_AppCount(Agency, Depart, Program, SerVicePlan);

                        Selapps = Apps.FindAll(u => u.Deflt.Equals(SerVicePlan));
                        var appcount = Selapps.Select(u => u.Code).Distinct().ToList();

                        //if(ds.Tables[0].Rows[0]["COUNT_APP"].ToString())
                        SP_Sel_Service = SP_Services.Find(u => u.Code.Trim().Equals(SerVicePlan.Trim()));

                        string Allow_Add_Branch = SP_Sel_Service.Allow_Add_Branch.Trim();
                        List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == SerVicePlan.Trim()).OrderByDescending(u => u.Branch).ToList();
                        //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(SerVicePlan, null, null, null);
                        //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];
                        SP_Desc = SP_Sel_Service.Desc.ToString().Trim();
                        Priv_Branch = null;

                        if (casesp2Data.Count > 0)
                        {

                            foreach (CASESP2Entity dr in casesp2Data)
                            {
                                Branch = dr.Branch.ToString().Trim();
                                if (SerVicePlan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                {
                                    document.Add(table);
                                    table.DeleteBodyRows();
                                    if (!First)
                                        document.NewPage();
                                    string Service_desc = SP_Sel_Service.BpDesc.ToString();
                                    if (!First)
                                    {
                                        if (Branch.Trim() == SP_Sel_Service.B1Code.ToString().Trim())
                                            Service_desc = SP_Sel_Service.B1Desc.ToString();
                                        else if (Branch.Trim() == SP_Sel_Service.B2Code.ToString().Trim())
                                            Service_desc = SP_Sel_Service.B2Desc.ToString();
                                        else if (Branch.Trim() == SP_Sel_Service.B3Code.ToString().Trim())
                                            Service_desc = SP_Sel_Service.B3Desc.ToString();
                                        else if (Branch.Trim() == SP_Sel_Service.B4Code.ToString().Trim())
                                            Service_desc = SP_Sel_Service.B4Desc.ToString();
                                        else if (Branch.Trim() == SP_Sel_Service.B5Code.ToString().Trim())
                                            Service_desc = SP_Sel_Service.B5Desc.ToString();
                                    }
                                    PdfPCell SP_Desc_Header = new PdfPCell(new Phrase("Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")", MainHeaderLine));
                                    SP_Desc_Header.HorizontalAlignment = Element.ALIGN_CENTER;
                                    SP_Desc_Header.Colspan = 3;
                                    SP_Desc_Header.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    table.AddCell(SP_Desc_Header);

                                    PdfPCell ServiceDesc = new PdfPCell(new Phrase("Branch: " + Service_desc.Trim(), MainHeaderLine));
                                    ServiceDesc.HorizontalAlignment = Element.ALIGN_CENTER;
                                    ServiceDesc.Colspan = 3;
                                    ServiceDesc.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    table.AddCell(ServiceDesc);


                                    PdfPCell Headercell1 = new PdfPCell(new Phrase("Type", TblFontBold1));
                                    Headercell1.HorizontalAlignment = Element.ALIGN_LEFT;
                                    //Headercell1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    //Headercell1.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    //Headercell1.BorderWidthBottom = 0.7f;
                                    Headercell1.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                    Headercell1.BorderColor = BaseColor.WHITE;
                                    Headercell1.FixedHeight = 15f;
                                    table.AddCell(Headercell1);

                                    PdfPCell Headercell2 = new PdfPCell(new Phrase("Description", TblFontBold1));
                                    Headercell2.HorizontalAlignment = Element.ALIGN_LEFT;
                                    //Headercell1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    //Headercell1.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    //Headercell1.BorderWidthBottom = 0.7f;
                                    Headercell2.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                    Headercell2.BorderColor = BaseColor.WHITE;
                                    Headercell2.FixedHeight = 15f;
                                    table.AddCell(Headercell2);

                                    PdfPCell Headercell3 = new PdfPCell(new Phrase("Count", TblFontBold1));
                                    Headercell3.HorizontalAlignment = Element.ALIGN_LEFT;
                                    //Headercell1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    //Headercell1.BackgroundColor = BaseColor.LIGHT_GRAY;
                                    //Headercell1.BorderWidthBottom = 0.7f;
                                    Headercell3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                    Headercell3.BorderColor = BaseColor.WHITE;
                                    Headercell3.FixedHeight = 15f;
                                    table.AddCell(Headercell3);

                                    Priv_Branch = Branch;
                                    First = false;

                                }
                                string SP2_CountType = dr.SP2_COUNT_TYPE.Trim();
                                string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
                                if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
                                string Grp = dr.Orig_Grp.ToString().Trim();
                                if (CAMSType == "CA")
                                {
                                    //DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr.CamCd.ToString().Trim(), null, null);
                                    List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());

                                    if (dsCAMAST.Count > 0)
                                    {
                                        // DataRow drCAMAST =
                                        CAMSDesc = dsCAMAST[0].Desc.ToString();//drCAMAST["CA_DESC"].ToString();

                                        if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                            CA_Entity.Caseworker = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                            CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                        else CA_Entity.Caseworker = "";

                                        if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                            CA_Entity.Site = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                            CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                        else CA_Entity.Site = "";

                                        List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                        string CAmsCode = dr.CamCd.ToString().Trim();

                                        if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                        {
                                            if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }
                                        else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }
                                        else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }

                                        
                                        if (CAApp.Count > 0)
                                        {
                                            string Priv_Type = null, Priv_Cams_Desc = null;
                                            if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                            {
                                                int datecnt = 0; decimal TAmount = 0;

                                                List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                if (SelCaseact.Count > 0)
                                                {
                                                    if (dr.SP2_COUNT_TYPE == "A")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
                                                        decimal TotalCost = 0;
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            TAmount = ((TotalCost / SelRecs.Count));
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "S")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");

                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "E")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                            TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                        }
                                                    }
                                                    else
                                                        datecnt = SelCaseact.Count;
                                                }

                                                //foreach (Funnel_RepEntity ActEntity in CAApp)
                                                //{
                                                //    if (!string.IsNullOrEmpty(ActEntity.ACT_DATE.Trim()))
                                                //    {
                                                //        //if (Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))))
                                                //        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE.Trim()))))
                                                //        {
                                                //            datecnt++;
                                                //        }
                                                //    }
                                                //}

                                                PdfPCell RowType = new PdfPCell(new Phrase(CAMSTypeDesc.Trim(), TableFont1));
                                                RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowType.BorderColor = BaseColor.WHITE;
                                                RowType.FixedHeight = 15f;
                                                table.AddCell(RowType);
                                                Priv_Type = CAMSType.Trim();

                                                PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowDesc.BorderColor = BaseColor.WHITE;
                                                RowDesc.FixedHeight = 15f;
                                                table.AddCell(RowDesc);

                                                

                                                if (SP2_CountType == "A" || SP2_CountType == "E" || SP2_CountType == "S")
                                                {
                                                    PdfPCell RowDate = new PdfPCell(new Phrase(TAmount.ToString("0.00"), TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                                else if (datecnt == 0)
                                                {
                                                    PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                                else
                                                {
                                                    //if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                    //{
                                                    //    PdfPCell RowDate = new PdfPCell(new Phrase(TAmount.ToString("0.00"), TableFont1));
                                                    //    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    //    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    //    RowDate.BorderColor = BaseColor.WHITE;
                                                    //    RowDate.FixedHeight = 15f;
                                                    //    table.AddCell(RowDate);
                                                    //}
                                                    //else
                                                    //{
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(datecnt.ToString(), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    //}
                                                }
                                            }
                                            else
                                            {
                                                PdfPCell RowType = new PdfPCell(new Phrase(CAMSTypeDesc.Trim(), TableFont1));
                                                RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowType.BorderColor = BaseColor.WHITE;
                                                RowType.FixedHeight = 15f;
                                                table.AddCell(RowType);
                                                Priv_Type = CAMSType.Trim();

                                                PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowDesc.BorderColor = BaseColor.WHITE;
                                                RowDesc.FixedHeight = 15f;
                                                table.AddCell(RowDesc);
                                                Priv_Cams_Desc = CAMSDesc.Trim();

                                                if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                {
                                                    decimal TAmount = 0;
                                                    if (dr.SP2_COUNT_TYPE == "A")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                        decimal TotalCost = 0;
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            TAmount = ((TotalCost / SelRecs.Count) );
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "S")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");

                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "E")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                            TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                        }
                                                    }

                                                    if (SP2_CountType == "A" || SP2_CountType == "E" || SP2_CountType == "S")
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(TAmount.ToString("0.00"), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }
                                                    else
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(CAApp.Count.ToString(), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }

                                                }
                                                else
                                                {
                                                    PdfPCell RowDate = new PdfPCell(new Phrase(CAApp.Count.ToString(), TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                            }
                                        }
                                        else
                                        {

                                            PdfPCell RowType = new PdfPCell(new Phrase(CAMSTypeDesc.Trim(), TableFont1));
                                            RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                            //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                            RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                            RowType.BorderColor = BaseColor.WHITE;
                                            RowType.FixedHeight = 15f;
                                            table.AddCell(RowType);

                                            PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                            RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                            //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                            RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                            RowDesc.BorderColor = BaseColor.WHITE;
                                            RowDesc.FixedHeight = 15f;
                                            table.AddCell(RowDesc);

                                            PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                            RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                            //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                            RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                            RowDate.BorderColor = BaseColor.WHITE;
                                            RowDate.FixedHeight = 15f;
                                            table.AddCell(RowDate);
                                        }
                                    }
                                }
                                else
                                {
                                    // DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr.CamCd.ToString().Trim(), null, null, null);
                                    List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                    if (MSMast.Count > 0)
                                    {
                                        List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
                                        //DataRow drMSMast = MSMast.Tables[0].Rows[0];

                                        CAMSDesc = MSMast[0].Desc.ToString();
                                        string MSType = MSMast[0].Type1.ToString();
                                        string Type_Desc = string.Empty;
                                        //if (MSType == "M")
                                        //    Type_Desc = "Milestone";
                                        //else 
                                        Type_Desc = "Outcome";

                                        if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                            Search_MS_Details.CaseWorker = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                            Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                        else Search_MS_Details.CaseWorker = "";

                                        if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                            Search_MS_Details.Site = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                            Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                        else Search_MS_Details.Site = "";

                                        string CAmsCode = dr.CamCd.ToString().Trim();

                                        if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }
                                        else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }
                                        else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                            else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                        }

                                        
                                        if (MSApp.Count > 0)
                                        {
                                            if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
                                            {
                                                int DateCount = 0;
                                                List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                if (SelCaseact.Count > 0) DateCount = SelCaseact.Count;
                                                //foreach (Funnel_RepEntity MSEntity in MSApp)
                                                //{
                                                //    if (!string.IsNullOrEmpty(MSEntity.ACT_DATE.Trim()))
                                                //    {
                                                //        //if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))))
                                                //        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE.Trim()))))
                                                //        {
                                                //            DateCount++;
                                                //        }
                                                //    }
                                                //}

                                                int datecnt = 0; decimal TAmount = 0;

                                                List<Funnel_RepEntity> SelCasems = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                if (SelCasems.Count > 0)
                                                {
                                                    if (dr.SP2_COUNT_TYPE == "A")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = SelCasems.FindAll(u => u.Cost != "");
                                                        decimal TotalCost = 0;
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            TAmount = ((TotalCost / SelRecs.Count));
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "S")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = SelCasems.FindAll(u => u.Cost != "");

                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "E")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = SelCasems.FindAll(u => u.Cost != "");
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                            TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                        }
                                                    }
                                                    else
                                                        datecnt = SelCasems.Count;
                                                }



                                                PdfPCell RowType = new PdfPCell(new Phrase(Type_Desc, TableFont1));
                                                RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowType.BorderColor = BaseColor.WHITE;
                                                RowType.FixedHeight = 15f;
                                                table.AddCell(RowType);

                                                PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowDesc.BorderColor = BaseColor.WHITE;
                                                RowDesc.FixedHeight = 15f;
                                                table.AddCell(RowDesc);

                                                if (SP2_CountType == "A" || SP2_CountType == "E" || SP2_CountType == "S")
                                                {
                                                    PdfPCell RowDate = new PdfPCell(new Phrase(TAmount.ToString("0.00"), TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                                else if (DateCount == 0)
                                                {
                                                    PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                                else
                                                {
                                                    //if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                    //{
                                                    //    PdfPCell RowDate = new PdfPCell(new Phrase(TAmount.ToString("0.00"), TableFont1));
                                                    //    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    //    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    //    RowDate.BorderColor = BaseColor.WHITE;
                                                    //    RowDate.FixedHeight = 15f;
                                                    //    table.AddCell(RowDate);
                                                    //}
                                                    //else
                                                    //{
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(datecnt.ToString(), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    //}
                                                }
                                            }
                                            else
                                            {
                                                PdfPCell RowType = new PdfPCell(new Phrase(Type_Desc, TableFont1));
                                                RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowType.BorderColor = BaseColor.WHITE;
                                                RowType.FixedHeight = 15f;
                                                table.AddCell(RowType);

                                                PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowDesc.BorderColor = BaseColor.WHITE;
                                                RowDesc.FixedHeight = 15f;
                                                table.AddCell(RowDesc);

                                                if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                {
                                                    decimal TAmount = 0;
                                                    if (dr.SP2_COUNT_TYPE == "A")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = MSApp.FindAll(u => u.Cost != "");
                                                        decimal TotalCost = 0;
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            TAmount = ((TotalCost / SelRecs.Count));
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "S")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = MSApp.FindAll(u => u.Cost != "");

                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "E")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = MSApp.FindAll(u => u.Cost != "");
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                            TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                        }
                                                    }

                                                    if (SP2_CountType == "A" || SP2_CountType == "E" || SP2_CountType == "S")
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(TAmount.ToString("0.00"), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }
                                                    else
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(MSApp.Count.ToString(), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }

                                                }
                                                else
                                                {
                                                    PdfPCell RowDate = new PdfPCell(new Phrase(MSApp.Count.ToString(), TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                            }
                                        }
                                        else
                                        {
                                            PdfPCell RowType = new PdfPCell(new Phrase(Type_Desc, TableFont1));
                                            RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                            //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                            RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                            RowType.BorderColor = BaseColor.WHITE;
                                            RowType.FixedHeight = 15f;
                                            table.AddCell(RowType);

                                            PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                            RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                            //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                            RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                            RowDesc.BorderColor = BaseColor.WHITE;
                                            RowDesc.FixedHeight = 15f;
                                            table.AddCell(RowDesc);

                                            PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                            RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                            //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                            RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                            RowDate.BorderColor = BaseColor.WHITE;
                                            RowDate.FixedHeight = 15f;
                                            table.AddCell(RowDate);
                                        }

                                    }
                                }

                            }
                        }

                        if (Allow_Add_Branch == "Y")
                        {
                            DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(SP_Agy, SP_Dept, SP_Prog, Year_Value, SerVicePlan);
                            DataTable dtAdd = ds.Tables[0];

                            if (dtAdd.Rows.Count > 0)
                            {
                                document.Add(table);
                                table.DeleteBodyRows();
                                if (!First)
                                    document.NewPage();

                                PdfPCell SP_Desc_Header = new PdfPCell(new Phrase("Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")", MainHeaderLine));
                                SP_Desc_Header.HorizontalAlignment = Element.ALIGN_CENTER;
                                SP_Desc_Header.Colspan = 3;
                                SP_Desc_Header.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                table.AddCell(SP_Desc_Header);

                                PdfPCell ServiceDesc = new PdfPCell(new Phrase("Branch: " + "Additional Branch".Trim(), MainHeaderLine));
                                ServiceDesc.HorizontalAlignment = Element.ALIGN_CENTER;
                                ServiceDesc.Colspan = 3;
                                ServiceDesc.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                table.AddCell(ServiceDesc);


                                PdfPCell Headercell1 = new PdfPCell(new Phrase("Type", TblFontBold1));
                                Headercell1.HorizontalAlignment = Element.ALIGN_LEFT;
                                //Headercell1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                //Headercell1.BackgroundColor = BaseColor.LIGHT_GRAY;
                                //Headercell1.BorderWidthBottom = 0.7f;
                                Headercell1.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                Headercell1.BorderColor = BaseColor.WHITE;
                                Headercell1.FixedHeight = 15f;
                                table.AddCell(Headercell1);

                                PdfPCell Headercell2 = new PdfPCell(new Phrase("Description", TblFontBold1));
                                Headercell2.HorizontalAlignment = Element.ALIGN_LEFT;
                                //Headercell2.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                //Headercell2.BackgroundColor = BaseColor.LIGHT_GRAY;
                                //Headercell2.BorderWidthBottom = 0.7f;
                                Headercell2.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                Headercell2.BorderColor = BaseColor.WHITE;
                                Headercell2.FixedHeight = 15f;
                                table.AddCell(Headercell2);

                                PdfPCell Headercell3 = new PdfPCell(new Phrase("Count", TblFontBold1));
                                Headercell3.HorizontalAlignment = Element.ALIGN_LEFT;
                                //Headercell3.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                //Headercell3.BackgroundColor = BaseColor.LIGHT_GRAY;
                                //Headercell3.BorderWidthBottom = 0.7f;
                                Headercell3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                Headercell3.BorderColor = BaseColor.WHITE;
                                Headercell3.FixedHeight = 15f;
                                table.AddCell(Headercell3);

                                foreach (DataRow dr in dtAdd.Rows)
                                {
                                    string CAMSType = dr["SPM2_TYPE"].ToString();

                                    string CAMSTypeDesc = string.Empty;
                                    if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";

                                    if (CAMSType == "CA")
                                    {
                                        //DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr["SPM2_CAMS_CODE"].ToString().Trim(), null, null);
                                        List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                        if (dsCAMAST.Count > 0)
                                        {
                                            //  DataRow drCAMAST = dsCAMAST.Tables[0].Rows[0];
                                            CAMSDesc = dsCAMAST[0].Desc.ToString();

                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                CA_Entity.Caseworker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else CA_Entity.Caseworker = "";

                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                CA_Entity.Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else CA_Entity.Site = "";

                                            List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                            string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim(); //string Grp = dr["sp2_orig_grp"].ToString().Trim();
                                            if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                            }
                                            else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                            }
                                            else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                            }

                                            
                                            if (CAApp.Count > 0)
                                            {
                                                string Priv_Type = null, Priv_Cams_Desc = null;
                                                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                {
                                                    int datecnt = 0;
                                                    List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                    if (SelCaseact.Count > 0) datecnt = SelCaseact.Count;
                                                    //foreach (Funnel_RepEntity ActEntity in CAApp)
                                                    //{
                                                    //    if (!string.IsNullOrEmpty(ActEntity.ACT_DATE.Trim()))
                                                    //    {
                                                    //        if (Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))))
                                                    //        {
                                                    //            datecnt++;
                                                    //        }
                                                    //    }
                                                    //}

                                                    PdfPCell RowType = new PdfPCell(new Phrase(CAMSTypeDesc.Trim(), TableFont1));
                                                    RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowType.BorderColor = BaseColor.WHITE;
                                                    RowType.FixedHeight = 15f;
                                                    table.AddCell(RowType);
                                                    Priv_Type = CAMSType.Trim();

                                                    PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                    RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowDesc.BorderColor = BaseColor.WHITE;
                                                    RowDesc.FixedHeight = 15f;
                                                    table.AddCell(RowDesc);

                                                    if (datecnt == 0)
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }
                                                    else
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(datecnt.ToString(), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }
                                                }
                                                else
                                                {
                                                    PdfPCell RowType = new PdfPCell(new Phrase(CAMSTypeDesc.Trim(), TableFont1));
                                                    RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowType.BorderColor = BaseColor.WHITE;
                                                    RowType.FixedHeight = 15f;
                                                    table.AddCell(RowType);
                                                    Priv_Type = CAMSType.Trim();

                                                    PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                    RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowDesc.BorderColor = BaseColor.WHITE;
                                                    RowDesc.FixedHeight = 15f;
                                                    table.AddCell(RowDesc);
                                                    Priv_Cams_Desc = CAMSDesc.Trim();

                                                    PdfPCell RowDate = new PdfPCell(new Phrase(CAApp.Count.ToString(), TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);

                                                }
                                            }
                                            else
                                            {

                                                PdfPCell RowType = new PdfPCell(new Phrase(CAMSTypeDesc.Trim(), TableFont1));
                                                RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowType.BorderColor = BaseColor.WHITE;
                                                RowType.FixedHeight = 15f;
                                                table.AddCell(RowType);

                                                PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowDesc.BorderColor = BaseColor.WHITE;
                                                RowDesc.FixedHeight = 15f;
                                                table.AddCell(RowDesc);

                                                PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                                RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#b9d8ef"));
                                                RowDate.BorderColor = BaseColor.WHITE;
                                                RowDate.FixedHeight = 15f;
                                                table.AddCell(RowDate);
                                            }
                                        }
                                    }
                                    else
                                    {
                                        //DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr["SPM2_CAMS_CODE"].ToString().Trim(), null, null, null);
                                        List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                        if (MSMast.Count > 0)
                                        {
                                            List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
                                            //DataRow drMSMast = MSMast.Tables[0].Rows[0];

                                            CAMSDesc = MSMast[0].Desc.ToString();
                                            string MSType = MSMast[0].Type1.ToString();
                                            string Type_Desc = string.Empty;
                                            //if (MSType == "M")
                                                Type_Desc = "Outcome";
                                            //else Type_Desc = "Outcome";

                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                Search_MS_Details.CaseWorker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else Search_MS_Details.CaseWorker = "";

                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                Search_MS_Details.Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else Search_MS_Details.Site = "";

                                            string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim();
                                            if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }

                                            
                                            if (MSApp.Count > 0)
                                            {
                                                if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
                                                {
                                                    int DateCount = 0;
                                                    List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                    if (SelCaseact.Count > 0) DateCount = SelCaseact.Count;
                                                    //foreach (Funnel_RepEntity MSEntity in MSApp)
                                                    //{
                                                    //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))))
                                                    //    {
                                                    //        DateCount++;
                                                    //    }
                                                    //}
                                                    PdfPCell RowType = new PdfPCell(new Phrase(Type_Desc, TableFont1));
                                                    RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowType.BorderColor = BaseColor.WHITE;
                                                    RowType.FixedHeight = 15f;
                                                    table.AddCell(RowType);

                                                    PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                    RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowDesc.BorderColor = BaseColor.WHITE;
                                                    RowDesc.FixedHeight = 15f;
                                                    table.AddCell(RowDesc);
                                                    if (DateCount == 0)
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }
                                                    else
                                                    {
                                                        PdfPCell RowDate = new PdfPCell(new Phrase(DateCount.ToString(), TableFont1));
                                                        RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                        RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                        RowDate.BorderColor = BaseColor.WHITE;
                                                        RowDate.FixedHeight = 15f;
                                                        table.AddCell(RowDate);
                                                    }
                                                }
                                                else
                                                {
                                                    PdfPCell RowType = new PdfPCell(new Phrase(Type_Desc, TableFont1));
                                                    RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowType.BorderColor = BaseColor.WHITE;
                                                    RowType.FixedHeight = 15f;
                                                    table.AddCell(RowType);

                                                    PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                    RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowDesc.BorderColor = BaseColor.WHITE;
                                                    RowDesc.FixedHeight = 15f;
                                                    table.AddCell(RowDesc);

                                                    PdfPCell RowDate = new PdfPCell(new Phrase(MSApp.Count.ToString(), TableFont1));
                                                    RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                    RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    RowDate.BorderColor = BaseColor.WHITE;
                                                    RowDate.FixedHeight = 15f;
                                                    table.AddCell(RowDate);
                                                }
                                            }
                                            else
                                            {
                                                PdfPCell RowType = new PdfPCell(new Phrase(Type_Desc, TableFont1));
                                                RowType.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                RowType.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowType.BorderColor = BaseColor.WHITE;
                                                RowType.FixedHeight = 15f;
                                                table.AddCell(RowType);

                                                PdfPCell RowDesc = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                RowDesc.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDesc.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowDesc.BorderColor = BaseColor.WHITE;
                                                RowDesc.FixedHeight = 15f;
                                                table.AddCell(RowDesc);

                                                PdfPCell RowDate = new PdfPCell(new Phrase("", TableFont1));
                                                RowDate.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //RowDate.Border = iTextSharp.text.Rectangle.BOX;
                                                RowDate.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                RowDate.BorderColor = BaseColor.WHITE;
                                                RowDate.FixedHeight = 15f;
                                                table.AddCell(RowDate);
                                            }

                                        }
                                    }
                                }
                            }
                        }

                    }
                }

                if (table.Rows.Count > 0)
                    document.Add(table);
                else
                {
                    PdfContentByte cb;
                    cb = writer.DirectContent;
                    cb.BeginText();
                    cb.SetFontAndSize(bf_Calibri, 14);
                    cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "This Service plan having No Postings", 200, 600, 0);
                    cb.EndText();

                }
                document.Close();
                fs.Close();
                fs.Dispose();
                AlertBox.Show("Report Generated Successfully");
            }
        }

        #region Converted to Carlos by Vikash on 08/04/2023 for adding Params page
        private void GenerateStyles(WorksheetStyleCollection styles)
        {
            // -----------------------------------------------
            //  Default
            // -----------------------------------------------
            WorksheetStyle Default = styles.Add("Default");
            Default.Name = "Normal";
            Default.Font.FontName = "Arial";
            Default.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s16
            // -----------------------------------------------
            WorksheetStyle s16 = styles.Add("s16");
            s16.Font.Bold = true;
            s16.Font.FontName = "Calibri Light";
            s16.Font.Size = 16;
            s16.Interior.Color = "#DDEBF7";
            s16.Interior.Pattern = StyleInteriorPattern.Solid;
            s16.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s16.Alignment.Vertical = StyleVerticalAlignment.Center;
            // -----------------------------------------------
            //  s17
            // -----------------------------------------------
            WorksheetStyle s17 = styles.Add("s17");
            s17.Font.Bold = true;
            s17.Font.FontName = "Calibri Light";
            s17.Font.Size = 16;
            s17.Interior.Color = "#DDEBF7";
            s17.Interior.Pattern = StyleInteriorPattern.Solid;
            s17.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s17.Alignment.Vertical = StyleVerticalAlignment.Center;
            // -----------------------------------------------
            //  s18
            // -----------------------------------------------
            WorksheetStyle s18 = styles.Add("s18");
            s18.Interior.Color = "#DDEBF7";
            s18.Interior.Pattern = StyleInteriorPattern.Solid;
            s18.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s18.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s19
            // -----------------------------------------------
            WorksheetStyle s19 = styles.Add("s19");
            s19.Interior.Color = "#DDEBF7";
            s19.Interior.Pattern = StyleInteriorPattern.Solid;
            // -----------------------------------------------
            //  s20
            // -----------------------------------------------
            WorksheetStyle s20 = styles.Add("s20");
            s20.Interior.Color = "#DDEBF7";
            s20.Interior.Pattern = StyleInteriorPattern.Solid;
            s20.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s20.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s21
            // -----------------------------------------------
            WorksheetStyle s21 = styles.Add("s21");
            s21.Font.Bold = true;
            s21.Font.FontName = "Calibri";
            s21.Font.Size = 11;
            s21.Font.Color = "#000000";
            s21.Interior.Color = "#FCE4D6";
            s21.Interior.Pattern = StyleInteriorPattern.Solid;
            s21.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s21.Alignment.Vertical = StyleVerticalAlignment.Center;
            s21.Alignment.WrapText = true;
            s21.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            s21.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s21.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s21.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s21.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s22
            // -----------------------------------------------
            WorksheetStyle s22 = styles.Add("s22");
            s22.Font.Bold = true;
            s22.Font.FontName = "Calibri";
            s22.Font.Size = 11;
            s22.Font.Color = "#000000";
            s22.Interior.Color = "#FCE4D6";
            s22.Interior.Pattern = StyleInteriorPattern.Solid;
            s22.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s22.Alignment.Vertical = StyleVerticalAlignment.Center;
            s22.Alignment.WrapText = true;
            s22.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            s22.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s22.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s22.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s22.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s23
            // -----------------------------------------------
            WorksheetStyle s23 = styles.Add("s23");
            s23.Font.Bold = true;
            s23.Font.FontName = "Calibri";
            s23.Font.Size = 11;
            // -----------------------------------------------
            //  s24
            // -----------------------------------------------
            WorksheetStyle s24 = styles.Add("s24");
            s24.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s24.Alignment.Vertical = StyleVerticalAlignment.Center;
            s24.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s24.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s24.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s24.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s25
            // -----------------------------------------------
            WorksheetStyle s25 = styles.Add("s25");
            s25.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s25.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            s25.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s25.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s25.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s25.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s26
            // -----------------------------------------------
            WorksheetStyle s26 = styles.Add("s26");
            s26.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s26.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s26.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s26.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s27
            // -----------------------------------------------
            WorksheetStyle s27 = styles.Add("s27");
            s27.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s27.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            s27.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s27.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s27.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s27.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            s27.NumberFormat = "General Date";
            // -----------------------------------------------
            //  s28
            // -----------------------------------------------
            WorksheetStyle s28 = styles.Add("s28");
            s28.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s28.Alignment.Vertical = StyleVerticalAlignment.Center;
            s28.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s28.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s28.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s28.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            s28.NumberFormat = "General Date";
            // -----------------------------------------------
            //  s29
            // -----------------------------------------------
            WorksheetStyle s29 = styles.Add("s29");
            s29.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s29.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            s29.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s29.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s29.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s29.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s30
            // -----------------------------------------------
            WorksheetStyle s30 = styles.Add("s30");
            s30.Font.FontName = "Arial";
            s30.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s30.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            s30.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s30.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s30.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s30.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s31
            // -----------------------------------------------
            WorksheetStyle s31 = styles.Add("s31");
            s31.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s31.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s32
            // -----------------------------------------------
            WorksheetStyle s32 = styles.Add("s32");
            s32.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s32.Alignment.Vertical = StyleVerticalAlignment.Center;
            // -----------------------------------------------
            //  s33
            // -----------------------------------------------
            WorksheetStyle s33 = styles.Add("s33");
            s33.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s33.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s34
            // -----------------------------------------------
            WorksheetStyle s34 = styles.Add("s34");
            s34.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s34.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s35
            // -----------------------------------------------
            WorksheetStyle s35 = styles.Add("s35");
            // -----------------------------------------------
            //  s36
            // -----------------------------------------------
            WorksheetStyle s36 = styles.Add("s36");
            s36.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s36.Alignment.Vertical = StyleVerticalAlignment.Center;
            // -----------------------------------------------
            //  s37
            // -----------------------------------------------
            WorksheetStyle s37 = styles.Add("s37");
            s37.Font.FontName = "Arial";
            s37.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s37.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s38
            // -----------------------------------------------
            WorksheetStyle s38 = styles.Add("s38");
            s38.Font.FontName = "Arial";
            s38.Font.Color = "#000000";
            s38.Interior.Color = "#FFFFFF";
            s38.Interior.Pattern = StyleInteriorPattern.Solid;
            s38.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s38.Alignment.Vertical = StyleVerticalAlignment.Center;
            s38.Alignment.WrapText = true;
            s38.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            // -----------------------------------------------
            //  s39
            // -----------------------------------------------
            WorksheetStyle s39 = styles.Add("s39");
            s39.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s39.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s40
            // -----------------------------------------------
            WorksheetStyle s40 = styles.Add("s40");
            s40.Font.FontName = "Arial";
            s40.Font.Color = "#000000";
            s40.Interior.Color = "#FFFFFF";
            s40.Interior.Pattern = StyleInteriorPattern.Solid;
            s40.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s40.Alignment.Vertical = StyleVerticalAlignment.Center;
            s40.Alignment.WrapText = true;
            s40.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            s40.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s40.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s40.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s40.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s41
            // -----------------------------------------------
            WorksheetStyle s41 = styles.Add("s41");
            s41.Alignment.Horizontal = StyleHorizontalAlignment.Right;
            s41.Alignment.Vertical = StyleVerticalAlignment.Center;
            s41.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s41.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s41.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s41.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);

            // -----------------------------------------------
            //  m386123900
            // -----------------------------------------------
            WorksheetStyle m386123900 = styles.Add("m386123900");
            m386123900.Font.FontName = "Calibri";
            m386123900.Font.Size = 12;
            m386123900.Font.Color = "#000000";
            m386123900.Interior.Color = "#F2DCDB";
            m386123900.Interior.Pattern = StyleInteriorPattern.Solid;
            m386123900.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            m386123900.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            m386123900.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 2);
            m386123900.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            m386123900.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            m386123900.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  m386123920
            // -----------------------------------------------
            WorksheetStyle m386123920 = styles.Add("m386123920");
            m386123920.Font.Bold = true;
            m386123920.Font.FontName = "Calibri";
            m386123920.Font.Size = 11;
            m386123920.Font.Color = "#000000";
            m386123920.Interior.Color = "#DCE6F1";
            m386123920.Interior.Pattern = StyleInteriorPattern.Solid;
            m386123920.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            m386123920.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            m386123920.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 2);
            m386123920.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            m386123920.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            m386123920.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  m386123940
            // -----------------------------------------------
            WorksheetStyle m386123940 = styles.Add("m386123940");
            m386123940.Font.Bold = true;
            m386123940.Font.FontName = "Calibri";
            m386123940.Font.Size = 12;
            m386123940.Font.Color = "#000000";
            m386123940.Interior.Color = "#FCD5B4";
            m386123940.Interior.Pattern = StyleInteriorPattern.Solid;
            m386123940.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            m386123940.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            m386123940.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            m386123940.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            m386123940.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  s45
            // -----------------------------------------------
            WorksheetStyle s45 = styles.Add("s45");
            s45.Font.Bold = true;
            s45.Font.FontName = "Calibri";
            s45.Font.Size = 11;
            s45.Font.Color = "#000000";
            s45.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s45.Alignment.Vertical = StyleVerticalAlignment.Top;
            s45.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s45.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s45.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s46
            // -----------------------------------------------
            WorksheetStyle s46 = styles.Add("s46");
            s46.Font.Bold = true;
            s46.Font.FontName = "Calibri";
            s46.Font.Size = 11;
            s46.Font.Color = "#000000";
            s46.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s46.Alignment.Vertical = StyleVerticalAlignment.Center;
            s46.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s46.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s46.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  s53
            // -----------------------------------------------
            WorksheetStyle s53 = styles.Add("s53");
            s53.Font.Bold = true;
            s53.Font.FontName = "Calibri";
            s53.Font.Size = 11;
            s53.Font.Color = "#000000";
            s53.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s53.Alignment.Vertical = StyleVerticalAlignment.Top;
            s53.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s53.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            s53.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s53.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  s54
            // -----------------------------------------------
            WorksheetStyle s54 = styles.Add("s54");
            s54.Font.Bold = true;
            s54.Font.FontName = "Calibri";
            s54.Font.Size = 11;
            s54.Font.Color = "#000000";
            s54.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s54.Alignment.Vertical = StyleVerticalAlignment.Top;
            s54.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s54.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s54.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s54.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  s55
            // -----------------------------------------------
            WorksheetStyle s55 = styles.Add("s55");
            s55.Font.Bold = true;
            s55.Font.FontName = "Calibri";
            s55.Font.Size = 11;
            s55.Font.Color = "#000000";
            s55.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s55.Alignment.Vertical = StyleVerticalAlignment.Top;
            s55.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s55.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s55.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            s55.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 2);
            // -----------------------------------------------
            //  s56
            // -----------------------------------------------
            WorksheetStyle s56 = styles.Add("s56");
            s56.Alignment.Vertical = StyleVerticalAlignment.Center;
            s56.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s56.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            s56.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s56.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s57
            // -----------------------------------------------
            WorksheetStyle s57 = styles.Add("s57");
            s57.Alignment.Vertical = StyleVerticalAlignment.Center;
            s57.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s57.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s57.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            s57.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s58
            // -----------------------------------------------
            WorksheetStyle s58 = styles.Add("s58");
            s58.Alignment.Vertical = StyleVerticalAlignment.Center;
            s58.Alignment.WrapText = true;
            s58.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s58.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s58.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            s58.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s59
            // -----------------------------------------------
            WorksheetStyle s59 = styles.Add("s59");
            s59.Alignment.Vertical = StyleVerticalAlignment.Center;
            s59.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 2);
            s59.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            s59.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s59.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s60
            // -----------------------------------------------
            WorksheetStyle s60 = styles.Add("s60");
            s60.Alignment.Vertical = StyleVerticalAlignment.Center;
            s60.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 2);
            s60.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s60.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 2);
            s60.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s61
            // -----------------------------------------------
            WorksheetStyle s61 = styles.Add("s61");
            s61.Font.Bold = true;
            s61.Font.FontName = "Calibri";
            s61.Font.Size = 11;
            s61.Font.Color = "#000000";
            s61.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s61.Alignment.Vertical = StyleVerticalAlignment.Center;
            s61.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s61.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            s61.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s62
            // -----------------------------------------------
            WorksheetStyle s62 = styles.Add("s62");
            s62.Font.Bold = true;
            s62.Font.FontName = "Calibri";
            s62.Font.Size = 11;
            s62.Font.Color = "#000000";
            s62.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s62.Alignment.Vertical = StyleVerticalAlignment.Center;
            s62.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s62.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s62.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s63
            // -----------------------------------------------
            WorksheetStyle s63 = styles.Add("s63");
            s63.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s63.Alignment.Vertical = StyleVerticalAlignment.Center;
            s63.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s63.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            s63.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s63.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s64
            // -----------------------------------------------
            WorksheetStyle s64 = styles.Add("s64");
            s64.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s64.Alignment.Vertical = StyleVerticalAlignment.Center;
            s64.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1);
            s64.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s64.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s64.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s65
            // -----------------------------------------------
            WorksheetStyle s65 = styles.Add("s65");
            s65.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s65.Alignment.Vertical = StyleVerticalAlignment.Center;
            s65.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 2);
            s65.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 2);
            s65.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s65.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s66
            // -----------------------------------------------
            WorksheetStyle s66 = styles.Add("s66");
            s66.Alignment.Horizontal = StyleHorizontalAlignment.Center;
            s66.Alignment.Vertical = StyleVerticalAlignment.Center;
            s66.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 2);
            s66.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1);
            s66.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1);
            s66.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1);
            // -----------------------------------------------
            //  s67
            // -----------------------------------------------
            WorksheetStyle s67 = styles.Add("s67");
            s67.Font.Bold = true;
            s67.Font.FontName = "Calibri";
            s67.Font.Size = 16;
            s67.Font.Color = "#000000";
            s67.Alignment.Horizontal = StyleHorizontalAlignment.Left;
            s67.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  s137
            // -----------------------------------------------
            WorksheetStyle s137 = styles.Add("s137");
            s137.Name = "Normal 3";
            s137.Font.FontName = "Calibri";
            s137.Font.Size = 11;
            s137.Font.Color = "#000000";
            s137.Alignment.Vertical = StyleVerticalAlignment.Bottom;
            // -----------------------------------------------
            //  m2611536909264
            // -----------------------------------------------
            WorksheetStyle m2611536909264 = styles.Add("m2611536909264");
            m2611536909264.Parent = "s137";
            m2611536909264.Font.FontName = "Arial";
            m2611536909264.Font.Color = "#9400D3";
            m2611536909264.Interior.Color = "#FFFFFF";
            m2611536909264.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611536909264.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611536909264.Alignment.WrapText = true;
            m2611536909264.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611536909264.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611536909284
            // -----------------------------------------------
            WorksheetStyle m2611536909284 = styles.Add("m2611536909284");
            m2611536909284.Parent = "s137";
            m2611536909284.Font.FontName = "Arial";
            m2611536909284.Font.Color = "#9400D3";
            m2611536909284.Interior.Color = "#FFFFFF";
            m2611536909284.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611536909284.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611536909284.Alignment.WrapText = true;
            m2611536909284.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611536909284.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611536909304
            // -----------------------------------------------
            WorksheetStyle m2611536909304 = styles.Add("m2611536909304");
            m2611536909304.Parent = "s137";
            m2611536909304.Font.FontName = "Arial";
            m2611536909304.Font.Color = "#9400D3";
            m2611536909304.Interior.Color = "#FFFFFF";
            m2611536909304.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611536909304.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611536909304.Alignment.WrapText = true;
            m2611536909304.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611536909304.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611536909324
            // -----------------------------------------------
            WorksheetStyle m2611536909324 = styles.Add("m2611536909324");
            m2611536909324.Parent = "s137";
            m2611536909324.Font.FontName = "Arial";
            m2611536909324.Font.Color = "#9400D3";
            m2611536909324.Interior.Color = "#FFFFFF";
            m2611536909324.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611536909324.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611536909324.Alignment.WrapText = true;
            m2611536909324.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611536909324.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611536909344
            // -----------------------------------------------
            WorksheetStyle m2611536909344 = styles.Add("m2611536909344");
            m2611536909344.Parent = "s137";
            m2611536909344.Font.FontName = "Arial";
            m2611536909344.Font.Color = "#9400D3";
            m2611536909344.Interior.Color = "#FFFFFF";
            m2611536909344.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611536909344.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611536909344.Alignment.WrapText = true;
            m2611536909344.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611536909344.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549552
            // -----------------------------------------------
            WorksheetStyle m2611540549552 = styles.Add("m2611540549552");
            m2611540549552.Parent = "s137";
            m2611540549552.Font.FontName = "Arial";
            m2611540549552.Font.Color = "#9400D3";
            m2611540549552.Interior.Color = "#FFFFFF";
            m2611540549552.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549552.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549552.Alignment.WrapText = true;
            m2611540549552.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549552.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549572
            // -----------------------------------------------
            WorksheetStyle m2611540549572 = styles.Add("m2611540549572");
            m2611540549572.Parent = "s137";
            m2611540549572.Font.FontName = "Arial";
            m2611540549572.Font.Color = "#9400D3";
            m2611540549572.Interior.Color = "#FFFFFF";
            m2611540549572.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549572.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549572.Alignment.WrapText = true;
            m2611540549572.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549572.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
            m2611540549572.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549592
            // -----------------------------------------------
            WorksheetStyle m2611540549592 = styles.Add("m2611540549592");
            m2611540549592.Parent = "s137";
            m2611540549592.Font.FontName = "Arial";
            m2611540549592.Font.Color = "#9400D3";
            m2611540549592.Interior.Color = "#FFFFFF";
            m2611540549592.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549592.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549592.Alignment.WrapText = true;
            m2611540549592.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549592.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549612
            // -----------------------------------------------
            WorksheetStyle m2611540549612 = styles.Add("m2611540549612");
            m2611540549612.Parent = "s137";
            m2611540549612.Font.FontName = "Arial";
            m2611540549612.Font.Color = "#9400D3";
            m2611540549612.Interior.Color = "#FFFFFF";
            m2611540549612.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549612.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549612.Alignment.WrapText = true;
            m2611540549612.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549612.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549632
            // -----------------------------------------------
            WorksheetStyle m2611540549632 = styles.Add("m2611540549632");
            m2611540549632.Parent = "s137";
            m2611540549632.Font.FontName = "Arial";
            m2611540549632.Font.Color = "#9400D3";
            m2611540549632.Interior.Color = "#FFFFFF";
            m2611540549632.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549632.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549632.Alignment.WrapText = true;
            m2611540549632.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549632.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549652
            // -----------------------------------------------
            WorksheetStyle m2611540549652 = styles.Add("m2611540549652");
            m2611540549652.Parent = "s137";
            m2611540549652.Font.FontName = "Arial";
            m2611540549652.Font.Color = "#9400D3";
            m2611540549652.Interior.Color = "#FFFFFF";
            m2611540549652.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549652.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549652.Alignment.WrapText = true;
            m2611540549652.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549652.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  m2611540549672
            // -----------------------------------------------
            WorksheetStyle m2611540549672 = styles.Add("m2611540549672");
            m2611540549672.Parent = "s137";
            m2611540549672.Font.FontName = "Arial";
            m2611540549672.Font.Color = "#9400D3";
            m2611540549672.Interior.Color = "#FFFFFF";
            m2611540549672.Interior.Pattern = StyleInteriorPattern.Solid;
            m2611540549672.Alignment.Vertical = StyleVerticalAlignment.Top;
            m2611540549672.Alignment.WrapText = true;
            m2611540549672.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            m2611540549672.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");

            // -----------------------------------------------
            //  s139
            // -----------------------------------------------
            WorksheetStyle s139 = styles.Add("s139");
            s139.Parent = "s137";
            s139.Font.FontName = "Calibri";
            s139.Font.Size = 11;
            s139.Interior.Color = "#FFFFFF";
            s139.Interior.Pattern = StyleInteriorPattern.Solid;
            s139.Alignment.Vertical = StyleVerticalAlignment.Top;
            s139.Alignment.WrapText = true;
            // -----------------------------------------------
            //  s140
            // -----------------------------------------------
            WorksheetStyle s140 = styles.Add("s140");
            s140.Parent = "s137";
            s140.Font.FontName = "Calibri";
            s140.Font.Size = 11;
            s140.Interior.Color = "#FFFFFF";
            s140.Interior.Pattern = StyleInteriorPattern.Solid;
            s140.Alignment.Vertical = StyleVerticalAlignment.Top;
            s140.Alignment.WrapText = true;
            s140.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
            s140.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s141
            // -----------------------------------------------
            WorksheetStyle s141 = styles.Add("s141");
            s141.Parent = "s137";
            s141.Font.FontName = "Calibri";
            s141.Font.Size = 11;
            s141.Interior.Color = "#FFFFFF";
            s141.Interior.Pattern = StyleInteriorPattern.Solid;
            s141.Alignment.Vertical = StyleVerticalAlignment.Top;
            s141.Alignment.WrapText = true;
            s141.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s142
            // -----------------------------------------------
            WorksheetStyle s142 = styles.Add("s142");
            s142.Parent = "s137";
            s142.Font.FontName = "Calibri";
            s142.Font.Size = 11;
            s142.Interior.Color = "#FFFFFF";
            s142.Interior.Pattern = StyleInteriorPattern.Solid;
            s142.Alignment.Vertical = StyleVerticalAlignment.Top;
            s142.Alignment.WrapText = true;
            s142.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            s142.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s143
            // -----------------------------------------------
            WorksheetStyle s143 = styles.Add("s143");
            s143.Parent = "s137";
            s143.Font.FontName = "Calibri";
            s143.Font.Size = 11;
            s143.Interior.Color = "#FFFFFF";
            s143.Interior.Pattern = StyleInteriorPattern.Solid;
            s143.Alignment.Vertical = StyleVerticalAlignment.Top;
            s143.Alignment.WrapText = true;
            s143.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s144
            // -----------------------------------------------
            WorksheetStyle s144 = styles.Add("s144");
            s144.Parent = "s137";
            s144.Font.FontName = "Arial";
            s144.Font.Color = "#9400D3";
            s144.Interior.Color = "#FFFFFF";
            s144.Interior.Pattern = StyleInteriorPattern.Solid;
            s144.Alignment.Vertical = StyleVerticalAlignment.Top;
            s144.Alignment.WrapText = true;
            s144.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            // -----------------------------------------------
            //  s145
            // -----------------------------------------------
            WorksheetStyle s145 = styles.Add("s145");
            s145.Parent = "s137";
            s145.Font.FontName = "Calibri";
            s145.Font.Size = 11;
            s145.Interior.Color = "#FFFFFF";
            s145.Interior.Pattern = StyleInteriorPattern.Solid;
            s145.Alignment.Vertical = StyleVerticalAlignment.Top;
            s145.Alignment.WrapText = true;
            s145.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s146
            // -----------------------------------------------
            WorksheetStyle s146 = styles.Add("s146");
            s146.Parent = "s137";
            s146.Font.FontName = "Calibri";
            s146.Font.Size = 11;
            s146.Interior.Color = "#FFFFFF";
            s146.Interior.Pattern = StyleInteriorPattern.Solid;
            s146.Alignment.Vertical = StyleVerticalAlignment.Top;
            s146.Alignment.WrapText = true;
            s146.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
            s146.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s169
            // -----------------------------------------------
            WorksheetStyle s169 = styles.Add("s169");
            s169.Parent = "s137";
            s169.Font.FontName = "Arial";
            s169.Font.Color = "#9400D3";
            s169.Interior.Color = "#FFFFFF";
            s169.Interior.Pattern = StyleInteriorPattern.Solid;
            s169.Alignment.Vertical = StyleVerticalAlignment.Top;
            s169.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
            // -----------------------------------------------
            //  s170
            // -----------------------------------------------
            WorksheetStyle s170 = styles.Add("s170");
            s170.Parent = "s137";
            s170.Font.FontName = "Calibri";
            s170.Font.Size = 11;
            s170.Interior.Color = "#FFFFFF";
            s170.Interior.Pattern = StyleInteriorPattern.Solid;
            s170.Alignment.Vertical = StyleVerticalAlignment.Top;
            // -----------------------------------------------
            //  s171
            // -----------------------------------------------
            WorksheetStyle s171 = styles.Add("s171");
            s171.Parent = "s137";
            s171.Font.FontName = "Calibri";
            s171.Font.Size = 11;
            s171.Interior.Color = "#FFFFFF";
            s171.Interior.Pattern = StyleInteriorPattern.Solid;
            s171.Alignment.Vertical = StyleVerticalAlignment.Top;
            s171.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
            // -----------------------------------------------
            //  s172
            // -----------------------------------------------
            WorksheetStyle s172 = styles.Add("s172");
            s172.Alignment.Vertical = StyleVerticalAlignment.Bottom;
        }

        private void On_ExcelForm_Closed(object sender, FormClosedEventArgs e)
        {

            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                string PdfName = "Pdf File";
                PdfName = form.GetFileName();
                //PdfName = strFolderPath + PdfName + "-Details";
                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName + "_AUDIT";
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
                }
                catch (Exception ex)
                {
                    AlertBox.Show("Error", MessageBoxIcon.Error);
                }

                try
                {
                    string Tmpstr = PdfName + ".xls";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = PdfName + newFileName.Substring(0, length) + ".xls";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    PdfName = Random_Filename;
                else
                    PdfName += ".xls";

                WorksheetRow excelrowSpace; WorksheetRow excelrowSpace1; WorksheetCell cell;
                WorksheetRow excelrow1; WorksheetRow excelrow2; WorksheetRow excelrow3; WorksheetRow excelrow4; WorksheetRow excelrow5; WorksheetRow excelrow6; WorksheetRow excelrow7; WorksheetRow excelrow8;
                WorksheetRow excelrow9; WorksheetRow excelrow10; WorksheetRow excelrow11; WorksheetRow excelrow12; WorksheetRow excelrow13; WorksheetRow excelrow14; WorksheetRow excelrow15;

                Workbook book = new Workbook();

                #region Header Page
                //WorksheetColumn columnHead = sheet.Table.Columns.Add();
                //columnHead.Index = 2;
                //columnHead.Width = 5;
                //sheet.Table.Columns.Add(163);
                //WorksheetColumn column2Head = sheet.Table.Columns.Add();
                //column2Head.Width = 370;//332;
                //column2Head.StyleID = "s172";
                //sheet.Table.Columns.Add(100);//(59);
                //                             //  s137
                //                             // -----------------------------------------------
                //WorksheetStyle s137 = book.Styles.Add("s137");
                //s137.Name = "Normal 3";
                //s137.Font.FontName = "Calibri";
                //s137.Font.Size = 11;
                //s137.Font.Color = "#000000";
                //s137.Alignment.Vertical = StyleVerticalAlignment.Bottom;
                //// -----------------------------------------------
                ////  m2611536909264
                //// -----------------------------------------------
                //WorksheetStyle m2611536909264 = book.Styles.Add("m2611536909264");
                //m2611536909264.Parent = "s137";
                //m2611536909264.Font.FontName = "Arial";
                //m2611536909264.Font.Color = "#9400D3";
                //m2611536909264.Interior.Color = "#FFFFFF";
                //m2611536909264.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909264.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909264.Alignment.WrapText = true;
                //m2611536909264.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909264.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909284
                //// -----------------------------------------------
                //WorksheetStyle m2611536909284 = book.Styles.Add("m2611536909284");
                //m2611536909284.Parent = "s137";
                //m2611536909284.Font.FontName = "Arial";
                //m2611536909284.Font.Color = "#9400D3";
                //m2611536909284.Interior.Color = "#FFFFFF";
                //m2611536909284.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909284.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909284.Alignment.WrapText = true;
                //m2611536909284.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909284.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909304
                //// -----------------------------------------------
                //WorksheetStyle m2611536909304 = book.Styles.Add("m2611536909304");
                //m2611536909304.Parent = "s137";
                //m2611536909304.Font.FontName = "Arial";
                //m2611536909304.Font.Color = "#9400D3";
                //m2611536909304.Interior.Color = "#FFFFFF";
                //m2611536909304.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909304.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909304.Alignment.WrapText = true;
                //m2611536909304.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909304.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909324
                //// -----------------------------------------------
                //WorksheetStyle m2611536909324 = book.Styles.Add("m2611536909324");
                //m2611536909324.Parent = "s137";
                //m2611536909324.Font.FontName = "Arial";
                //m2611536909324.Font.Color = "#9400D3";
                //m2611536909324.Interior.Color = "#FFFFFF";
                //m2611536909324.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909324.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909324.Alignment.WrapText = true;
                //m2611536909324.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909324.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909344
                //// -----------------------------------------------
                //WorksheetStyle m2611536909344 = book.Styles.Add("m2611536909344");
                //m2611536909344.Parent = "s137";
                //m2611536909344.Font.FontName = "Arial";
                //m2611536909344.Font.Color = "#9400D3";
                //m2611536909344.Interior.Color = "#FFFFFF";
                //m2611536909344.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909344.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909344.Alignment.WrapText = true;
                //m2611536909344.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909344.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549552
                //// -----------------------------------------------
                //WorksheetStyle m2611540549552 = book.Styles.Add("m2611540549552");
                //m2611540549552.Parent = "s137";
                //m2611540549552.Font.FontName = "Arial";
                //m2611540549552.Font.Color = "#9400D3";
                //m2611540549552.Interior.Color = "#FFFFFF";
                //m2611540549552.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549552.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549552.Alignment.WrapText = true;
                //m2611540549552.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549552.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549572
                //// -----------------------------------------------
                //WorksheetStyle m2611540549572 = book.Styles.Add("m2611540549572");
                //m2611540549572.Parent = "s137";
                //m2611540549572.Font.FontName = "Arial";
                //m2611540549572.Font.Color = "#9400D3";
                //m2611540549572.Interior.Color = "#FFFFFF";
                //m2611540549572.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549572.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549572.Alignment.WrapText = true;
                //m2611540549572.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549572.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
                //m2611540549572.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549592
                //// -----------------------------------------------
                //WorksheetStyle m2611540549592 = book.Styles.Add("m2611540549592");
                //m2611540549592.Parent = "s137";
                //m2611540549592.Font.FontName = "Arial";
                //m2611540549592.Font.Color = "#9400D3";
                //m2611540549592.Interior.Color = "#FFFFFF";
                //m2611540549592.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549592.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549592.Alignment.WrapText = true;
                //m2611540549592.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549592.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549612
                //// -----------------------------------------------
                //WorksheetStyle m2611540549612 = book.Styles.Add("m2611540549612");
                //m2611540549612.Parent = "s137";
                //m2611540549612.Font.FontName = "Arial";
                //m2611540549612.Font.Color = "#9400D3";
                //m2611540549612.Interior.Color = "#FFFFFF";
                //m2611540549612.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549612.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549612.Alignment.WrapText = true;
                //m2611540549612.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549612.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549632
                //// -----------------------------------------------
                //WorksheetStyle m2611540549632 = book.Styles.Add("m2611540549632");
                //m2611540549632.Parent = "s137";
                //m2611540549632.Font.FontName = "Arial";
                //m2611540549632.Font.Color = "#9400D3";
                //m2611540549632.Interior.Color = "#FFFFFF";
                //m2611540549632.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549632.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549632.Alignment.WrapText = true;
                //m2611540549632.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549632.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549652
                //// -----------------------------------------------
                //WorksheetStyle m2611540549652 = book.Styles.Add("m2611540549652");
                //m2611540549652.Parent = "s137";
                //m2611540549652.Font.FontName = "Arial";
                //m2611540549652.Font.Color = "#9400D3";
                //m2611540549652.Interior.Color = "#FFFFFF";
                //m2611540549652.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549652.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549652.Alignment.WrapText = true;
                //m2611540549652.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549652.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549672
                //// -----------------------------------------------
                //WorksheetStyle m2611540549672 = book.Styles.Add("m2611540549672");
                //m2611540549672.Parent = "s137";
                //m2611540549672.Font.FontName = "Arial";
                //m2611540549672.Font.Color = "#9400D3";
                //m2611540549672.Interior.Color = "#FFFFFF";
                //m2611540549672.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549672.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549672.Alignment.WrapText = true;
                //m2611540549672.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549672.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s139
                //// -----------------------------------------------
                //WorksheetStyle s139 = book.Styles.Add("s139");
                //s139.Parent = "s137";
                //s139.Font.FontName = "Calibri";
                //s139.Font.Size = 11;
                //s139.Interior.Color = "#FFFFFF";
                //s139.Interior.Pattern = StyleInteriorPattern.Solid;
                //s139.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s139.Alignment.WrapText = true;
                //// -----------------------------------------------
                ////  s140
                //// -----------------------------------------------
                //WorksheetStyle s140 = book.Styles.Add("s140");
                //s140.Parent = "s137";
                //s140.Font.FontName = "Calibri";
                //s140.Font.Size = 11;
                //s140.Interior.Color = "#FFFFFF";
                //s140.Interior.Pattern = StyleInteriorPattern.Solid;
                //s140.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s140.Alignment.WrapText = true;
                //s140.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
                //s140.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s141
                //// -----------------------------------------------
                //WorksheetStyle s141 = book.Styles.Add("s141");
                //s141.Parent = "s137";
                //s141.Font.FontName = "Calibri";
                //s141.Font.Size = 11;
                //s141.Interior.Color = "#FFFFFF";
                //s141.Interior.Pattern = StyleInteriorPattern.Solid;
                //s141.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s141.Alignment.WrapText = true;
                //s141.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s142
                //// -----------------------------------------------
                //WorksheetStyle s142 = book.Styles.Add("s142");
                //s142.Parent = "s137";
                //s142.Font.FontName = "Calibri";
                //s142.Font.Size = 11;
                //s142.Interior.Color = "#FFFFFF";
                //s142.Interior.Pattern = StyleInteriorPattern.Solid;
                //s142.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s142.Alignment.WrapText = true;
                //s142.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //s142.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s143
                //// -----------------------------------------------
                //WorksheetStyle s143 = book.Styles.Add("s143");
                //s143.Parent = "s137";
                //s143.Font.FontName = "Calibri";
                //s143.Font.Size = 11;
                //s143.Interior.Color = "#FFFFFF";
                //s143.Interior.Pattern = StyleInteriorPattern.Solid;
                //s143.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s143.Alignment.WrapText = true;
                //s143.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s144
                //// -----------------------------------------------
                //WorksheetStyle s144 = book.Styles.Add("s144");
                //s144.Parent = "s137";
                //s144.Font.FontName = "Arial";
                //s144.Font.Color = "#9400D3";
                //s144.Interior.Color = "#FFFFFF";
                //s144.Interior.Pattern = StyleInteriorPattern.Solid;
                //s144.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s144.Alignment.WrapText = true;
                //s144.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //// -----------------------------------------------
                ////  s145
                //// -----------------------------------------------
                //WorksheetStyle s145 = book.Styles.Add("s145");
                //s145.Parent = "s137";
                //s145.Font.FontName = "Calibri";
                //s145.Font.Size = 11;
                //s145.Interior.Color = "#FFFFFF";
                //s145.Interior.Pattern = StyleInteriorPattern.Solid;
                //s145.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s145.Alignment.WrapText = true;
                //s145.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s146
                //// -----------------------------------------------
                //WorksheetStyle s146 = book.Styles.Add("s146");
                //s146.Parent = "s137";
                //s146.Font.FontName = "Calibri";
                //s146.Font.Size = 11;
                //s146.Interior.Color = "#FFFFFF";
                //s146.Interior.Pattern = StyleInteriorPattern.Solid;
                //s146.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s146.Alignment.WrapText = true;
                //s146.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
                //s146.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s169
                //// -----------------------------------------------
                //WorksheetStyle s169 = book.Styles.Add("s169");
                //s169.Parent = "s137";
                //s169.Font.FontName = "Arial";
                //s169.Font.Color = "#9400D3";
                //s169.Interior.Color = "#FFFFFF";
                //s169.Interior.Pattern = StyleInteriorPattern.Solid;
                //s169.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s169.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //// -----------------------------------------------
                ////  s170
                //// -----------------------------------------------
                //WorksheetStyle s170 = book.Styles.Add("s170");
                //s170.Parent = "s137";
                //s170.Font.FontName = "Calibri";
                //s170.Font.Size = 11;
                //s170.Interior.Color = "#FFFFFF";
                //s170.Interior.Pattern = StyleInteriorPattern.Solid;
                //s170.Alignment.Vertical = StyleVerticalAlignment.Top;
                //// -----------------------------------------------
                ////  s171
                //// -----------------------------------------------
                //WorksheetStyle s171 = book.Styles.Add("s171");
                //s171.Parent = "s137";
                //s171.Font.FontName = "Calibri";
                //s171.Font.Size = 11;
                //s171.Interior.Color = "#FFFFFF";
                //s171.Interior.Pattern = StyleInteriorPattern.Solid;
                //s171.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s171.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s172
                //// -----------------------------------------------
                //WorksheetStyle s172 = book.Styles.Add("s172");
                //s172.Alignment.Vertical = StyleVerticalAlignment.Bottom;

                //// -----------------------------------------------
                //WorksheetRow RowHead = sheet.Table.Rows.Add();
                ////WorksheetCell cell;
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s170";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //// -----------------------------------------------
                //WorksheetRow Row1Head = sheet.Table.Rows.Add();
                //Row1Head.Height = 14;
                //Row1Head.AutoFitHeight = false;
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s140";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s141";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s171";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s142";
                //// -----------------------------------------------
                //WorksheetRow Row2Head = sheet.Table.Rows.Add();
                //Row2Head.Height = 14;
                //Row2Head.AutoFitHeight = false;
                //cell = Row2Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row2Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row2Head.Cells.Add();
                //cell.StyleID = "m2611536909264";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row7Head = sheet.Table.Rows.Add();
                //Row7Head.Height = 14;
                //Row7Head.AutoFitHeight = false;
                //cell = Row7Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row7Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row7Head.Cells.Add();
                //cell.StyleID = "m2611536909324";
                //cell.Data.Type = DataType.String;
                //cell.Data.Text = Privileges.Program + " - " + Privileges.PrivilegeName;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row101 = sheet.Table.Rows.Add();
                //Row101.Height = 14;
                //Row101.AutoFitHeight = false;
                //cell = Row101.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row101.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row101.Cells.Add();
                //cell.StyleID = "m2611540549592";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row88Head = sheet.Table.Rows.Add();
                //Row88Head.Height = 14;
                //Row88Head.AutoFitHeight = false;
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row3Head = sheet.Table.Rows.Add();
                //Row3Head.Height = 14;
                //Row3Head.AutoFitHeight = false;
                //cell = Row3Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row3Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row3Head.Cells.Add();
                //cell.StyleID = "m2611536909284";
                //cell.Data.Type = DataType.String;
                //cell.Data.Text = "Selected Report Parameters";
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row4Head = sheet.Table.Rows.Add();
                //Row4Head.Height = 14;
                //Row4Head.AutoFitHeight = false;
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row5Head = sheet.Table.Rows.Add();
                //Row5Head.Height = 14;
                //Row5Head.AutoFitHeight = false;
                //cell = Row5Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row5Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row5Head.Cells.Add();
                //cell.StyleID = "m2611536909304";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row6Head = sheet.Table.Rows.Add();
                //Row6Head.Height = 14;
                //Row6Head.AutoFitHeight = false;
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //string Header_year = string.Empty;

                //if (CmbYear.Visible == true)
                //    Header_year = "Year: " + ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();

                //WorksheetRow Row78Head = sheet.Table.Rows.Add();
                //Row78Head.Height = 14;
                //Row78Head.AutoFitHeight = false;
                //cell = Row78Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row78Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row78Head.Cells.Add();
                //cell.StyleID = "m2611536909324";
                //cell.Data.Type = DataType.String;
                //cell.Data.Text = "            Hierarchy: " + Txt_HieDesc.Text.Trim() + "   " + Header_year;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row10 = sheet.Table.Rows.Add();
                //Row10.Height = 14;
                //Row10.AutoFitHeight = false;
                //cell = Row10.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row10.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row10.Cells.Add();
                //cell.StyleID = "m2611540549592";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row11 = sheet.Table.Rows.Add();
                //Row11.Height = 14;
                //Row11.AutoFitHeight = false;
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //string Report_Type = string.Empty;
                //if (Rb_Act.Checked == true) Report_Type = Rb_Act.Text.Trim();
                //else if (Rb_Weekly1.Checked == true) Report_Type = Rb_Weekly1.Text.Trim();
                //else if (Rb_Weekly2.Checked == true) Report_Type = Rb_Weekly2.Text.Trim();

                //WorksheetRow ReportType = sheet.Table.Rows.Add();
                //ReportType.Height = 14;
                //ReportType.AutoFitHeight = false;
                //cell = ReportType.Cells.Add();
                //cell.StyleID = "s139";
                //cell = ReportType.Cells.Add();
                //cell.StyleID = "s143";
                //ReportType.Cells.Add("           Report Type", DataType.String, "s144");
                //ReportType.Cells.Add(Report_Type, DataType.String, "s169");
                //cell = ReportType.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row13 = sheet.Table.Rows.Add();
                //Row13.Height = 14;
                //Row13.AutoFitHeight = false;
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow AppType = sheet.Table.Rows.Add();
                //AppType.Height = 14;
                //AppType.AutoFitHeight = false;
                //cell = AppType.Cells.Add();
                //cell.StyleID = "s139";
                //cell = AppType.Cells.Add();
                //cell.StyleID = "s143";
                //AppType.Cells.Add("            Application Type", DataType.String, "s144");
                //AppType.Cells.Add(((Captain.Common.Utilities.ListItem)Cmb_Applications.SelectedItem).Text.Trim(), DataType.String, "s169");
                //cell = AppType.Cells.Add();
                //cell.StyleID = "s145";

                //// -----------------------------------------------
                //WorksheetRow Row133 = sheet.Table.Rows.Add();
                //Row133.Height = 14;
                //Row133.AutoFitHeight = false;
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s145";

                //// -----------------------------------------------
                //if (Intake_From_Date.Checked == true && Intake_To_Date.Checked == true)
                //{

                //    WorksheetRow IntDte = sheet.Table.Rows.Add();
                //    IntDte.Height = 14;
                //    IntDte.AutoFitHeight = false;
                //    cell = IntDte.Cells.Add();
                //    cell.StyleID = "s139";
                //    cell = IntDte.Cells.Add();
                //    cell.StyleID = "s143";
                //    IntDte.Cells.Add("           Intake From Date: ", DataType.String, "s144");
                //    IntDte.Cells.Add(CommonFunctions.ChangeDateFormat(Convert.ToDateTime(Intake_From_Date.Value).ToShortDateString(), Consts.DateTimeFormats.DateSaveFormat, Consts.DateTimeFormats.DateDisplayFormat)
                //        + "   To: " + CommonFunctions.ChangeDateFormat(Convert.ToDateTime(Intake_To_Date.Value).ToShortDateString(), Consts.DateTimeFormats.DateSaveFormat, Consts.DateTimeFormats.DateDisplayFormat));
                //    cell = IntDte.Cells.Add();
                //    cell.StyleID = "s145";
                //    // -----------------------------------------------
                //    WorksheetRow Row135 = sheet.Table.Rows.Add();
                //    Row135.Height = 14;
                //    Row135.AutoFitHeight = false;
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s139";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s143";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s139";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s170";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s145";
                //}
                //// -----------------------------------------------
                //WorksheetRow Row24 = sheet.Table.Rows.Add();
                //Row24.Height = 14;
                //Row24.AutoFitHeight = false;
                //cell = Row24.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row24.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row24.Cells.Add();
                //cell.StyleID = "m2611540549632";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row25 = sheet.Table.Rows.Add();
                //Row25.Height = 14;
                //Row25.AutoFitHeight = false;
                //cell = Row25.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row25.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row25.Cells.Add();
                //cell.StyleID = "m2611540549652";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row26Head = sheet.Table.Rows.Add();
                //Row26Head.Height = 14;
                //Row26Head.AutoFitHeight = false;
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row27Head = sheet.Table.Rows.Add();
                //Row27Head.Height = 14;
                //Row27Head.AutoFitHeight = false;
                //cell = Row27Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row27Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row27Head.Cells.Add();
                //cell.StyleID = "m2611540549672";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row28 = sheet.Table.Rows.Add();
                //Row28.Height = 14;
                //Row28.AutoFitHeight = false;
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row29 = sheet.Table.Rows.Add();
                //Row29.Height = 14;
                //Row29.AutoFitHeight = false;
                //cell = Row29.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row29.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row29.Cells.Add();
                //cell.StyleID = "m2611540549552";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row30 = sheet.Table.Rows.Add();
                //Row30.Height = 14;
                //Row30.AutoFitHeight = false;
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row31 = sheet.Table.Rows.Add();
                //Row31.Height = 14;
                //Row31.AutoFitHeight = false;
                //cell = Row31.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row31.Cells.Add();
                //cell.StyleID = "s146";
                //cell = Row31.Cells.Add();
                //cell.StyleID = "m2611540549572";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                ////  Options
                //// -----------------------------------------------
                //sheet.Options.Selected = true;
                //sheet.Options.ProtectObjects = false;
                //sheet.Options.ProtectScenarios = false;
                //sheet.Options.PageSetup.Header.Margin = 0.3F;
                //sheet.Options.PageSetup.Footer.Margin = 0.3F;
                //sheet.Options.PageSetup.PageMargins.Bottom = 0.75F;
                //sheet.Options.PageSetup.PageMargins.Left = 0.7F;
                //sheet.Options.PageSetup.PageMargins.Right = 0.7F;
                //sheet.Options.PageSetup.PageMargins.Top = 0.75F;

                #endregion
                #region Styles
                WorksheetStyle mainstyle = book.Styles.Add("MainHeaderStyles");
                mainstyle.Font.FontName = "Tahoma";
                mainstyle.Font.Size = 12;
                mainstyle.Font.Bold = true;
                mainstyle.Font.Color = "#FFFFFF";
                mainstyle.Interior.Color = "#0070c0";
                mainstyle.Interior.Pattern = StyleInteriorPattern.Solid;
                mainstyle.Alignment.Horizontal = StyleHorizontalAlignment.Center;
                mainstyle.Alignment.Vertical = StyleVerticalAlignment.Center;


                WorksheetStyle style1 = book.Styles.Add("Normal");
                style1.Font.FontName = "Tahoma";
                style1.Font.Size = 11;
                style1.Alignment.Horizontal = StyleHorizontalAlignment.Center;
                style1.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle stylecenter = book.Styles.Add("Normalcenter");
                stylecenter.Font.FontName = "Tahoma";
                stylecenter.Font.Bold = true;
                stylecenter.Font.Size = 11;
                stylecenter.Interior.Pattern = StyleInteriorPattern.Solid;
                stylecenter.Interior.Color = "#BDD6ED";
                stylecenter.Alignment.Horizontal = StyleHorizontalAlignment.Center;
                stylecenter.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style3 = book.Styles.Add("NormalLeft");
                style3.Font.FontName = "Tahoma";
                style3.Font.Size = 10;
                style3.Interior.Color = "#f2f2f2";
                style3.Alignment.WrapText = true;
                style3.Alignment.Horizontal = StyleHorizontalAlignment.Left;
                style3.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style4 = book.Styles.Add("NormalRight");
                style4.Font.FontName = "Tahoma";
                style4.Font.Size = 10;
                style4.Interior.Color = "#f2f2f2";
                style4.Alignment.Horizontal = StyleHorizontalAlignment.Right;
                style4.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style44 = book.Styles.Add("NormalRightBold");
                style44.Font.FontName = "Tahoma";
                style44.Font.Size = 10;
                style44.Font.Bold = true;
                style44.Interior.Color = "#f2f2f2";
                style44.Alignment.Horizontal = StyleHorizontalAlignment.Right;
                style44.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style15 = book.Styles.Add("NormalBold");
                style15.Font.FontName = "Tahoma";
                style15.Font.Size = 11;
                style15.Font.Bold = true;
                style15.Interior.Pattern = StyleInteriorPattern.Solid;
                style15.Interior.Color = "#BDD6ED";
                style15.Alignment.Horizontal = StyleHorizontalAlignment.Left;
                style15.Alignment.Vertical = StyleVerticalAlignment.Center;
                style15.Alignment.WrapText = true;

                WorksheetStyle style16 = book.Styles.Add("NormalRedBold");
                style16.Font.FontName = "Tahoma";
                style16.Font.Size = 10;
                style16.Font.Bold = true;
                style16.Alignment.Horizontal = StyleHorizontalAlignment.Left;
                style16.Alignment.Vertical = StyleVerticalAlignment.Center;
                style16.Alignment.WrapText = true;

                #endregion


                /*Worksheet*/
                Worksheet sheet = book.Worksheets.Add("Funnel_Report");
                sheet.Table.DefaultRowHeight = 14.25F;

                sheet.Table.DefaultColumnWidth = 220.5F;
                sheet.Table.Columns.Add(150);
                sheet.Table.Columns.Add(350);
                sheet.Table.Columns.Add(150);


                string Year_Value = string.Empty;
                if (CmbYear.Visible == true)
                    Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();
                //else
                //    Year_Value = "    ";

                string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty;
                if (Agency == "**") SP_Agy = null; else SP_Agy = Agency;
                if (Depart == "**") SP_Dept = null; else SP_Dept = Depart;
                if (Program == "**") SP_Prog = null; else SP_Prog = Program;

                // DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                string CAMSDesc = null;
                string SerVicePlan = null; string SP_Desc = null;
                bool First = true; string Branch = null, Priv_Branch = null;

                try
                {
                    List<AgyCommonFillEntity> Apps = new List<AgyCommonFillEntity>();

                    foreach (Funnel_RepEntity row in CAFunnel)
                    {
                        Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));
                    }

                    foreach (Funnel_RepEntity row in MSFunnel)
                        Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));

                    List<AgyCommonFillEntity> Selapps = new List<AgyCommonFillEntity>();
                    if (dtpFrom.Checked == true && dtpTo.Checked == true)
                        Apps = Apps.FindAll(u => Convert.ToDateTime(u.Desc) <= Convert.ToDateTime(dtpTo.Value.ToString()) && Convert.ToDateTime(u.Desc) >= Convert.ToDateTime(dtpFrom.Value.ToString()));


                    CASESP0Entity SP_Sel_Service = new CASESP0Entity();
                    foreach (DataGridViewRow drsp in gvSps.Rows)//for (int k = 0; k < cmbSerPlan.Items.Count; k++)
                    {
                        if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                        {
                            SerVicePlan = drsp.Cells["SP_Code"].Value.ToString().Trim();

                            Selapps = Apps.FindAll(u => u.Deflt.Equals(SerVicePlan));
                            var appcount = Selapps.Select(u => u.Code).Distinct().ToList();

                            SP_Sel_Service = SP_Services.Find(u => u.Code.Trim().Equals(SerVicePlan.Trim()));

                            string Allow_Add_Branch = SP_Sel_Service.Allow_Add_Branch.Trim();

                            List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == SerVicePlan.Trim()).OrderByDescending(u => u.Branch).ToList();
                            //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(SerVicePlan, null, null, null);
                            //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];
                            SP_Desc = SP_Sel_Service.Desc.ToString().Trim();
                            Priv_Branch = null;

                            if (casesp2Data.Count > 0)
                            {
                                //DataView dv = dtSP_CaseSP2.DefaultView;
                                //dv.Sort = "sp2_branch DESC";
                                //dtSP_CaseSP2 = dv.ToTable();
                                foreach (CASESP2Entity dr in casesp2Data)
                                {
                                    Branch = dr.Branch.ToString().Trim();
                                    if (SerVicePlan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                    {
                                        string Service_desc = SP_Sel_Service.BpDesc.ToString();
                                        if (!First)
                                        {
                                            if (Branch.Trim() == SP_Sel_Service.B1Code.ToString().Trim())
                                                Service_desc = SP_Sel_Service.B1Desc.ToString();
                                            else if (Branch.Trim() == SP_Sel_Service.B2Code.ToString().Trim())
                                                Service_desc = SP_Sel_Service.B2Desc.ToString();
                                            else if (Branch.Trim() == SP_Sel_Service.B3Code.ToString().Trim())
                                                Service_desc = SP_Sel_Service.B3Desc.ToString();
                                            else if (Branch.Trim() == SP_Sel_Service.B4Code.ToString().Trim())
                                                Service_desc = SP_Sel_Service.B4Desc.ToString();
                                            else if (Branch.Trim() == SP_Sel_Service.B5Code.ToString().Trim())
                                                Service_desc = SP_Sel_Service.B5Desc.ToString();
                                        }

                                        excelrowSpace = sheet.Table.Rows.Add();
                                        cell = excelrowSpace.Cells.Add("", DataType.String, "NormalLeft");
                                        cell.MergeAcross = 2;

                                        excelrowSpace1 = sheet.Table.Rows.Add();
                                        cell = excelrowSpace1.Cells.Add("", DataType.String, "NormalLeft");
                                        cell.MergeAcross = 2;

                                        excelrow1 = sheet.Table.Rows.Add();
                                        cell = excelrow1.Cells.Add("Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")", DataType.String, "Normal");
                                        cell.MergeAcross = 2;

                                        excelrow2 = sheet.Table.Rows.Add();
                                        cell = excelrow2.Cells.Add("Branch: " + Service_desc.Trim(), DataType.String, "Normal");
                                        cell.MergeAcross = 2;

                                        excelrow3 = sheet.Table.Rows.Add();
                                        cell = excelrow3.Cells.Add("Type", DataType.String, "NormalBold");
                                        cell = excelrow3.Cells.Add("Description", DataType.String, "NormalBold");
                                        cell = excelrow3.Cells.Add("Count", DataType.String, "NormalBold");

                                        Priv_Branch = Branch;
                                        First = false;
                                    }

                                    string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
                                    if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
                                    string Grp = dr.Orig_Grp.ToString().Trim();
                                    if (CAMSType == "CA")
                                    {
                                        // DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr.CamCd.ToString().Trim(), null, null);
                                        List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                        if (dsCAMAST.Count > 0)
                                        {
                                            //DataRow drCAMAST = dsCAMAST.Tables[0].Rows[0];
                                            CAMSDesc = dsCAMAST[0].Desc.ToString();

                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                CA_Entity.Caseworker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else CA_Entity.Caseworker = "";

                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                CA_Entity.Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else CA_Entity.Site = "";

                                            List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                            string CAmsCode = dr.CamCd.ToString().Trim();

                                            if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }
                                            else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }
                                            else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                else
                                                    CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }

                                            if (CAApp.Count > 0)
                                            {

                                                string Priv_Type = null, Priv_Cams_Desc = null;
                                                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                {
                                                    int datecnt = 0; decimal TAmount = 0;
                                                    List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                    if (SelCaseact.Count > 0)
                                                    {
                                                        if (dr.SP2_COUNT_TYPE == "A")
                                                        {
                                                            List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
                                                            decimal TotalCost = 0;
                                                            if (SelRecs.Count > 0)
                                                            {
                                                                TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                                TAmount = ((TotalCost / SelRecs.Count));
                                                            }
                                                        }
                                                        else if (dr.SP2_COUNT_TYPE == "S")
                                                        {
                                                            List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");

                                                            if (SelRecs.Count > 0)
                                                            {
                                                                TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                                //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                            }
                                                        }
                                                        else if (dr.SP2_COUNT_TYPE == "E")
                                                        {
                                                            List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
                                                            if (SelRecs.Count > 0)
                                                            {
                                                                SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                                TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                            }
                                                        }
                                                        else
                                                            datecnt = SelCaseact.Count;
                                                    }
                                                    //foreach (Funnel_RepEntity ActEntity in CAApp)
                                                    //{
                                                    //    if (!string.IsNullOrEmpty(ActEntity.ACT_DATE.Trim()))
                                                    //    {
                                                    //        //if (Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))))
                                                    //        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE.Trim()))))
                                                    //        {
                                                    //            datecnt++;
                                                    //        }
                                                    //    }
                                                    //}

                                                    excelrow4 = sheet.Table.Rows.Add();
                                                    cell = excelrow4.Cells.Add(CAMSTypeDesc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");

                                                    if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                    {
                                                        cell = excelrow4.Cells.Add(TAmount.ToString("0.00").Trim(), DataType.String, "NormalLeft");
                                                    }
                                                    else if (datecnt == 0)
                                                    {
                                                        cell = excelrow4.Cells.Add("", DataType.String, "NormalLeft");
                                                    }
                                                    else
                                                    {
                                                        cell = excelrow4.Cells.Add(datecnt.ToString().Trim(), DataType.String, "NormalLeft");
                                                    }
                                                }
                                                else
                                                {
                                                    excelrow4 = sheet.Table.Rows.Add();
                                                    cell = excelrow4.Cells.Add(CAMSTypeDesc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");

                                                    Priv_Type = CAMSTypeDesc.Trim();

                                                    Priv_Cams_Desc = CAMSDesc.Trim();
                                                    decimal TAmount = 0;
                                                    if (dr.SP2_COUNT_TYPE == "A")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                        decimal TotalCost = 0;
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            TAmount = ((TotalCost / SelRecs.Count));
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "S")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");

                                                        if (SelRecs.Count > 0)
                                                        {
                                                            TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                            //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                        }
                                                    }
                                                    else if (dr.SP2_COUNT_TYPE == "E")
                                                    {
                                                        List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                        if (SelRecs.Count > 0)
                                                        {
                                                            SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                            TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                        }
                                                    }

                                                    if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                        cell = excelrow4.Cells.Add(TAmount.ToString("0.00").Trim(), DataType.String, "NormalLeft");
                                                    else
                                                        cell = excelrow4.Cells.Add(CAApp.Count.ToString().Trim(), DataType.String, "NormalLeft");
                                                }
                                            }
                                            else
                                            {
                                                excelrow4 = sheet.Table.Rows.Add();
                                                cell = excelrow4.Cells.Add(CAMSTypeDesc.Trim(), DataType.String, "NormalLeft");
                                                cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");
                                                cell = excelrow4.Cells.Add("", DataType.String, "NormalLeft");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        //DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr.CamCd.ToString().Trim(), null, null, null);
                                        List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                        if (MSMast.Count > 0)
                                        {
                                            List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
                                            // DataRow drMSMast = MSMast.Tables[0].Rows[0];

                                            CAMSDesc = MSMast[0].Desc.ToString();
                                            string MSType = MSMast[0].Type1.ToString();
                                            string Type_Desc = string.Empty;
                                            //if (MSType == "M")
                                            Type_Desc = "Outcome";
                                            //else Type_Desc = "Outcome";

                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                Search_MS_Details.CaseWorker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else Search_MS_Details.CaseWorker = "";

                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                Search_MS_Details.Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else Search_MS_Details.Site = "";

                                            string CAmsCode = dr.CamCd.ToString().Trim();
                                            if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }
                                            else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }
                                            else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                else
                                                    MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                            }

                                            if (MSApp.Count > 0)
                                            {
                                                if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
                                                {
                                                    int DateCount = 0;
                                                    List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                    if (SelCaseact.Count > 0) DateCount = SelCaseact.Count;
                                                    //foreach (Funnel_RepEntity MSEntity in MSApp)
                                                    //{
                                                    //    if (!string.IsNullOrEmpty(MSEntity.ACT_DATE.Trim()))
                                                    //    {
                                                    //        //if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))))
                                                    //        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE.Trim()))))
                                                    //        {
                                                    //            DateCount++;
                                                    //        }
                                                    //    }
                                                    //}

                                                    excelrow5 = sheet.Table.Rows.Add();
                                                    cell = excelrow5.Cells.Add(Type_Desc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow5.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");

                                                    if (DateCount == 0)
                                                    {
                                                        cell = excelrow5.Cells.Add("", DataType.String, "NormalLeft");
                                                    }
                                                    else
                                                    {
                                                        cell = excelrow5.Cells.Add(DateCount.ToString(), DataType.String, "NormalLeft");
                                                    }
                                                }
                                                else
                                                {
                                                    excelrow5 = sheet.Table.Rows.Add();
                                                    cell = excelrow5.Cells.Add(Type_Desc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow5.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow5.Cells.Add(MSApp.Count.ToString(), DataType.String, "NormalLeft");
                                                }
                                            }
                                            else
                                            {
                                                excelrow5 = sheet.Table.Rows.Add();
                                                cell = excelrow5.Cells.Add(Type_Desc.Trim(), DataType.String, "NormalLeft");
                                                cell = excelrow5.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");
                                                cell = excelrow5.Cells.Add("", DataType.String, "NormalLeft");
                                            }
                                        }
                                    }
                                }
                            }

                            if (Allow_Add_Branch == "Y")
                            {
                                DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(SP_Agy, SP_Dept, SP_Prog, Year_Value, SerVicePlan);
                                DataTable dtAdd = ds.Tables[0];

                                if (dtAdd.Rows.Count > 0)
                                {
                                    excelrowSpace = sheet.Table.Rows.Add();
                                    cell = excelrowSpace.Cells.Add("", DataType.String, "NormalLeft");
                                    cell.MergeAcross = 2;

                                    excelrowSpace1 = sheet.Table.Rows.Add();
                                    cell = excelrowSpace1.Cells.Add("", DataType.String, "NormalLeft");
                                    cell.MergeAcross = 2;

                                    excelrow1 = sheet.Table.Rows.Add();
                                    cell = excelrow1.Cells.Add("Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")", DataType.String, "Normalcenter");
                                    cell.MergeAcross = 2;

                                    excelrow2 = sheet.Table.Rows.Add();
                                    cell = excelrow2.Cells.Add("Branch: " + "Additional Branch".Trim(), DataType.String, "Normalcenter");
                                    cell.MergeAcross = 2;

                                    excelrow3 = sheet.Table.Rows.Add();
                                    cell = excelrow3.Cells.Add("Type", DataType.String, "NormalBold");
                                    cell = excelrow3.Cells.Add("Description", DataType.String, "NormalBold");
                                    cell = excelrow3.Cells.Add("Count", DataType.String, "NormalBold");

                                    foreach (DataRow dr in dtAdd.Rows)
                                    {
                                        string CAMSType = dr["SPM2_TYPE"].ToString();
                                        string CAMSTypeDesc = string.Empty;
                                        if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";

                                        if (CAMSType == "CA")
                                        {
                                            //DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr["SPM2_CAMS_CODE"].ToString().Trim(), null, null);
                                            List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                            if (dsCAMAST.Count > 0)
                                            {
                                                // DataRow drCAMAST = dsCAMAST.Tables[0].Rows[0];
                                                CAMSDesc = dsCAMAST[0].Desc.ToString();

                                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                    CA_Entity.Caseworker = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                    CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                else CA_Entity.Caseworker = "";

                                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                    CA_Entity.Site = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                    CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                else CA_Entity.Site = "";

                                                List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                                string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim(); //string Grp = dr["sp2_orig_grp"].ToString().Trim();

                                                if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                }
                                                else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                }
                                                else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                }

                                                if (CAApp.Count > 0)
                                                {
                                                    string Priv_Type = null, Priv_Cams_Desc = null;
                                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                    {
                                                        int datecnt = 0;
                                                        List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                        if (SelCaseact.Count > 0) datecnt = SelCaseact.Count;
                                                        //foreach (Funnel_RepEntity ActEntity in CAApp)
                                                        //{
                                                        //    if (!string.IsNullOrEmpty(ActEntity.ACT_DATE.Trim()))
                                                        //    {
                                                        //        if (Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))))
                                                        //        {
                                                        //            datecnt++;
                                                        //        }
                                                        //    }
                                                        //}

                                                        excelrow4 = sheet.Table.Rows.Add();
                                                        cell = excelrow4.Cells.Add(CAMSTypeDesc.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");

                                                        Priv_Type = CAMSTypeDesc.Trim();

                                                        if (datecnt == 0)
                                                        {
                                                            cell = excelrow4.Cells.Add("", DataType.String, "NormalLeft");
                                                        }
                                                        else
                                                        {
                                                            cell = excelrow4.Cells.Add(datecnt.ToString(), DataType.String, "NormalLeft");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        excelrow4 = sheet.Table.Rows.Add();
                                                        cell = excelrow4.Cells.Add(CAMSTypeDesc.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");

                                                        Priv_Type = CAMSTypeDesc.Trim();

                                                        Priv_Cams_Desc = CAMSDesc.Trim();

                                                        cell = excelrow4.Cells.Add(CAApp.Count.ToString(), DataType.String, "NormalLeft");

                                                    }
                                                }
                                                else
                                                {
                                                    excelrow4 = sheet.Table.Rows.Add();
                                                    cell = excelrow4.Cells.Add(CAMSTypeDesc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow4.Cells.Add("", DataType.String, "NormalLeft");
                                                }
                                            }
                                        }

                                        else
                                        {
                                            // DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr["SPM2_CAMS_CODE"].ToString().Trim(), null, null, null);
                                            List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                            if (MSMast.Count > 0)
                                            {
                                                List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
                                                // DataRow drMSMast = MSMast.Tables[0].Rows[0];

                                                CAMSDesc = MSMast[0].Desc.ToString();
                                                string MSType = MSMast[0].Type1.ToString();
                                                string Type_Desc = string.Empty;
                                                //if (MSType == "M")
                                                Type_Desc = "Outcome";
                                                //else Type_Desc = "Outcome";

                                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                    Search_MS_Details.CaseWorker = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                    Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                else Search_MS_Details.CaseWorker = "";

                                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                    Search_MS_Details.Site = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                    Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                else Search_MS_Details.Site = "";

                                                string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim();
                                                if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }

                                                if (MSApp.Count > 0)
                                                {
                                                    if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
                                                    {
                                                        int DateCount = 0;

                                                        List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                        if (SelCaseact.Count > 0) DateCount = SelCaseact.Count;
                                                        //foreach (Funnel_RepEntity MSEntity in MSApp)
                                                        //{
                                                        //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))))
                                                        //    {
                                                        //        DateCount++;
                                                        //    }
                                                        //}


                                                        excelrow4 = sheet.Table.Rows.Add();
                                                        cell = excelrow4.Cells.Add(Type_Desc.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");    

                                                        if (DateCount == 0)
                                                        {
                                                            cell = excelrow4.Cells.Add("", DataType.String, "NormalLeft");
                                                        }
                                                        else
                                                        {
                                                            cell = excelrow4.Cells.Add(DateCount.ToString(), DataType.String, "NormalLeft");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        excelrow4 = sheet.Table.Rows.Add();
                                                        cell = excelrow4.Cells.Add(Type_Desc.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow4.Cells.Add(MSApp.Count.ToString(), DataType.String, "NormalLeft");
                                                    }
                                                }

                                                else
                                                {
                                                    excelrow4 = sheet.Table.Rows.Add();
                                                    cell = excelrow4.Cells.Add(Type_Desc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "NormalLeft");
                                                    cell = excelrow4.Cells.Add("", DataType.String, "NormalLeft");
                                                }
                                            }
                                        }
                                    }

                                }
                            }
                        }
                    }

                    FileStream stream = new FileStream(PdfName, FileMode.Create);

                    book.Save(stream);
                    stream.Close();
                }
                catch
                {
                    Exception ex;
                }
            }
        }
        #endregion*/


        //private void On_ExcelForm_Closed(object sender, FormClosedEventArgs e)
        //{
        //    PdfListForm form = sender as PdfListForm;
        //    if (form.DialogResult == DialogResult.OK)
        //    {
        //        string PdfName = "Pdf File";
        //        PdfName = form.GetFileName();
        //        //PdfName = strFolderPath + PdfName;
        //        PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName;
        //        try
        //        {
        //            if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
        //            { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
        //        }
        //        catch (Exception ex)
        //        {
        //            AlertBox.Show("Error", MessageBoxIcon.Error);
        //        }

        //        try
        //        {
        //            string Tmpstr = PdfName + ".xls";
        //            if (File.Exists(Tmpstr))
        //                File.Delete(Tmpstr);
        //        }
        //        catch (Exception ex)
        //        {
        //            int length = 8;
        //            string newFileName = System.Guid.NewGuid().ToString();
        //            newFileName = newFileName.Replace("-", string.Empty);

        //            Random_Filename = PdfName + newFileName.Substring(0, length) + ".xls";
        //        }

        //        if (!string.IsNullOrEmpty(Random_Filename))
        //            PdfName = Random_Filename;
        //        else
        //            PdfName += ".xls";

                
        //        ExcelDocument xlWorkSheet = new ExcelDocument();

        //        xlWorkSheet.ColumnWidth(0, 0);
        //        xlWorkSheet.ColumnWidth(1, 150);
        //        xlWorkSheet.ColumnWidth(2, 350);
        //        xlWorkSheet.ColumnWidth(3, 150);
        //        //xlWorkSheet.ColumnWidth(4, 150);
        //        //xlWorkSheet.ColumnWidth(5, 200);
        //        //xlWorkSheet.ColumnWidth(6, 200);
        //        //xlWorkSheet.ColumnWidth(7, 200);
        //        //xlWorkSheet.ColumnWidth(8, 200);

        //        int excelcolumn = 0;

                
        //        string Year_Value = string.Empty;
        //        if (CmbYear.Visible == true)
        //            Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();
        //        //else
        //        //    Year_Value = "    ";

        //        string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty;
        //        if (Agency == "**") SP_Agy = null; else SP_Agy = Agency;
        //        if (Depart == "**") SP_Dept = null; else SP_Dept = Depart;
        //        if (Program == "**") SP_Prog = null; else SP_Prog = Program;

        //        // DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
        //        string CAMSDesc = null;
        //        string SerVicePlan = null; string SP_Desc = null;
        //        bool First = true; string Branch = null, Priv_Branch = null;

        //        List<AgyCommonFillEntity> Apps = new List<AgyCommonFillEntity>();
        //        foreach (Funnel_RepEntity row in CAFunnel)
        //        {
        //            Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));
        //        }

        //        foreach (Funnel_RepEntity row in MSFunnel)
        //            Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));

        //        List<AgyCommonFillEntity> Selapps = new List<AgyCommonFillEntity>();
        //        if (dtpFrom.Checked == true && dtpTo.Checked == true)
        //            Apps = Apps.FindAll(u => Convert.ToDateTime(u.Desc) <= Convert.ToDateTime(dtpTo.Value.ToString()) && Convert.ToDateTime(u.Desc) >= Convert.ToDateTime(dtpFrom.Value.ToString()));


        //        CASESP0Entity SP_Sel_Service = new CASESP0Entity();
        //        foreach (DataGridViewRow drsp in gvSps.Rows)//for (int k = 0; k < cmbSerPlan.Items.Count; k++)
        //        {
        //            if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
        //            {
        //                SerVicePlan = drsp.Cells["SP_Code"].Value.ToString().Trim();

        //                Selapps = Apps.FindAll(u => u.Deflt.Equals(SerVicePlan));
        //                var appcount = Selapps.Select(u => u.Code).Distinct().ToList();

        //                SP_Sel_Service = SP_Services.Find(u => u.Code.Trim().Equals(SerVicePlan.Trim()));

        //                string Allow_Add_Branch = SP_Sel_Service.Allow_Add_Branch.Trim();

        //                List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == SerVicePlan.Trim()).OrderByDescending(u => u.Branch).ToList();
        //                //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(SerVicePlan, null, null, null);
        //                //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];
        //                SP_Desc = SP_Sel_Service.Desc.ToString().Trim();
        //                Priv_Branch = null;

        //                /*//Vikash added 02/10/2023-02/11/2023
        //                WorksheetCell cell;
        //                Workbook book = new Workbook();
        //                Worksheet sheet = book.Worksheets.Add("Parameters");
        //                bool Sel = true; string serv = string.Empty;
        //                foreach (DataGridViewRow row in gvSps.Rows)
        //                {
        //                    if (row.Cells["Selected"].Value.ToString().Trim() == "Y")
        //                    {
        //                        serv += row.Cells["SP_Code"].Value.ToString().Trim() + ",";
        //                        //Sel = true;
        //                    }
        //                    else if (row.Cells["Selected"].Value.ToString().Trim() == "N")
        //                        Sel = false;

        //                }

        //                string descserv = "All Service Plans";
        //                if (!Sel)
        //                //    descserv = serv.Substring(0, serv.Length - 1);
        //                */
        //                if (casesp2Data.Count > 0)
        //                {
        //                    //DataView dv = dtSP_CaseSP2.DefaultView;
        //                    //dv.Sort = "sp2_branch DESC";
        //                    //dtSP_CaseSP2 = dv.ToTable();
        //                    foreach (CASESP2Entity dr in casesp2Data)
        //                    {

        //                        Branch = dr.Branch.ToString().Trim();
        //                        if (SerVicePlan == dr.ServPlan.ToString() && Branch != Priv_Branch)
        //                        {
        //                            string Service_desc = SP_Sel_Service.BpDesc.ToString();
        //                            if (!First)
        //                            {
        //                                if (Branch.Trim() == SP_Sel_Service.B1Code.ToString().Trim())
        //                                    Service_desc = SP_Sel_Service.B1Desc.ToString();
        //                                else if (Branch.Trim() == SP_Sel_Service.B2Code.ToString().Trim())
        //                                    Service_desc = SP_Sel_Service.B2Desc.ToString();
        //                                else if (Branch.Trim() == SP_Sel_Service.B3Code.ToString().Trim())
        //                                    Service_desc = SP_Sel_Service.B3Desc.ToString();
        //                                else if (Branch.Trim() == SP_Sel_Service.B4Code.ToString().Trim())
        //                                    Service_desc = SP_Sel_Service.B4Desc.ToString();
        //                                else if (Branch.Trim() == SP_Sel_Service.B5Code.ToString().Trim())
        //                                    Service_desc = SP_Sel_Service.B5Desc.ToString();
        //                            }
        //                            /*
        //                            //#region styles
        //                            WorksheetColumn columnHead = sheet.Table.Columns.Add();
        //                            columnHead.Index = 2;
        //                            columnHead.Width = 5;
        //                            sheet.Table.Columns.Add(163);
        //                            WorksheetColumn column2Head = sheet.Table.Columns.Add();
        //                            column2Head.Width = 332;
        //                            column2Head.StyleID = "s172";
        //                            sheet.Table.Columns.Add(59);
        //                            //  s137
        //                            // -----------------------------------------------
        //                            WorksheetStyle s137 = book.Styles.Add("s137");
        //                            s137.Name = "Normal 3";
        //                            s137.Font.FontName = "Calibri";
        //                            s137.Font.Size = 11;
        //                            s137.Font.Color = "#000000";
        //                            s137.Alignment.Vertical = StyleVerticalAlignment.Bottom;
        //                            // -----------------------------------------------
        //                            //  m2611536909264
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611536909264 = book.Styles.Add("m2611536909264");
        //                            m2611536909264.Parent = "s137";
        //                            m2611536909264.Font.FontName = "Arial";
        //                            m2611536909264.Font.Color = "#9400D3";
        //                            m2611536909264.Interior.Color = "#FFFFFF";
        //                            m2611536909264.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611536909264.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611536909264.Alignment.WrapText = true;
        //                            m2611536909264.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611536909264.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611536909284
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611536909284 = book.Styles.Add("m2611536909284");
        //                            m2611536909284.Parent = "s137";
        //                            m2611536909284.Font.FontName = "Arial";
        //                            m2611536909284.Font.Color = "#9400D3";
        //                            m2611536909284.Interior.Color = "#FFFFFF";
        //                            m2611536909284.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611536909284.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611536909284.Alignment.WrapText = true;
        //                            m2611536909284.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611536909284.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611536909304
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611536909304 = book.Styles.Add("m2611536909304");
        //                            m2611536909304.Parent = "s137";
        //                            m2611536909304.Font.FontName = "Arial";
        //                            m2611536909304.Font.Color = "#9400D3";
        //                            m2611536909304.Interior.Color = "#FFFFFF";
        //                            m2611536909304.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611536909304.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611536909304.Alignment.WrapText = true;
        //                            m2611536909304.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611536909304.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611536909324
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611536909324 = book.Styles.Add("m2611536909324");
        //                            m2611536909324.Parent = "s137";
        //                            m2611536909324.Font.FontName = "Arial";
        //                            m2611536909324.Font.Color = "#9400D3";
        //                            m2611536909324.Interior.Color = "#FFFFFF";
        //                            m2611536909324.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611536909324.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611536909324.Alignment.WrapText = true;
        //                            m2611536909324.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611536909324.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611536909344
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611536909344 = book.Styles.Add("m2611536909344");
        //                            m2611536909344.Parent = "s137";
        //                            m2611536909344.Font.FontName = "Arial";
        //                            m2611536909344.Font.Color = "#9400D3";
        //                            m2611536909344.Interior.Color = "#FFFFFF";
        //                            m2611536909344.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611536909344.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611536909344.Alignment.WrapText = true;
        //                            m2611536909344.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611536909344.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549552
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549552 = book.Styles.Add("m2611540549552");
        //                            m2611540549552.Parent = "s137";
        //                            m2611540549552.Font.FontName = "Arial";
        //                            m2611540549552.Font.Color = "#9400D3";
        //                            m2611540549552.Interior.Color = "#FFFFFF";
        //                            m2611540549552.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549552.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549552.Alignment.WrapText = true;
        //                            m2611540549552.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549552.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549572
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549572 = book.Styles.Add("m2611540549572");
        //                            m2611540549572.Parent = "s137";
        //                            m2611540549572.Font.FontName = "Arial";
        //                            m2611540549572.Font.Color = "#9400D3";
        //                            m2611540549572.Interior.Color = "#FFFFFF";
        //                            m2611540549572.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549572.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549572.Alignment.WrapText = true;
        //                            m2611540549572.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549572.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
        //                            m2611540549572.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549592
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549592 = book.Styles.Add("m2611540549592");
        //                            m2611540549592.Parent = "s137";
        //                            m2611540549592.Font.FontName = "Arial";
        //                            m2611540549592.Font.Color = "#9400D3";
        //                            m2611540549592.Interior.Color = "#FFFFFF";
        //                            m2611540549592.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549592.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549592.Alignment.WrapText = true;
        //                            m2611540549592.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549592.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549612
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549612 = book.Styles.Add("m2611540549612");
        //                            m2611540549612.Parent = "s137";
        //                            m2611540549612.Font.FontName = "Arial";
        //                            m2611540549612.Font.Color = "#9400D3";
        //                            m2611540549612.Interior.Color = "#FFFFFF";
        //                            m2611540549612.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549612.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549612.Alignment.WrapText = true;
        //                            m2611540549612.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549612.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549632
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549632 = book.Styles.Add("m2611540549632");
        //                            m2611540549632.Parent = "s137";
        //                            m2611540549632.Font.FontName = "Arial";
        //                            m2611540549632.Font.Color = "#9400D3";
        //                            m2611540549632.Interior.Color = "#FFFFFF";
        //                            m2611540549632.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549632.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549632.Alignment.WrapText = true;
        //                            m2611540549632.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549632.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549652
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549652 = book.Styles.Add("m2611540549652");
        //                            m2611540549652.Parent = "s137";
        //                            m2611540549652.Font.FontName = "Arial";
        //                            m2611540549652.Font.Color = "#9400D3";
        //                            m2611540549652.Interior.Color = "#FFFFFF";
        //                            m2611540549652.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549652.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549652.Alignment.WrapText = true;
        //                            m2611540549652.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549652.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  m2611540549672
        //                            // -----------------------------------------------
        //                            WorksheetStyle m2611540549672 = book.Styles.Add("m2611540549672");
        //                            m2611540549672.Parent = "s137";
        //                            m2611540549672.Font.FontName = "Arial";
        //                            m2611540549672.Font.Color = "#9400D3";
        //                            m2611540549672.Interior.Color = "#FFFFFF";
        //                            m2611540549672.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            m2611540549672.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            m2611540549672.Alignment.WrapText = true;
        //                            m2611540549672.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            m2611540549672.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s139
        //                            // -----------------------------------------------
        //                            WorksheetStyle s139 = book.Styles.Add("s139");
        //                            s139.Parent = "s137";
        //                            s139.Font.FontName = "Calibri";
        //                            s139.Font.Size = 11;
        //                            s139.Interior.Color = "#FFFFFF";
        //                            s139.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s139.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s139.Alignment.WrapText = true;
        //                            // -----------------------------------------------
        //                            //  s140
        //                            // -----------------------------------------------
        //                            WorksheetStyle s140 = book.Styles.Add("s140");
        //                            s140.Parent = "s137";
        //                            s140.Font.FontName = "Calibri";
        //                            s140.Font.Size = 11;
        //                            s140.Interior.Color = "#FFFFFF";
        //                            s140.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s140.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s140.Alignment.WrapText = true;
        //                            s140.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
        //                            s140.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s141
        //                            // -----------------------------------------------
        //                            WorksheetStyle s141 = book.Styles.Add("s141");
        //                            s141.Parent = "s137";
        //                            s141.Font.FontName = "Calibri";
        //                            s141.Font.Size = 11;
        //                            s141.Interior.Color = "#FFFFFF";
        //                            s141.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s141.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s141.Alignment.WrapText = true;
        //                            s141.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s142
        //                            // -----------------------------------------------
        //                            WorksheetStyle s142 = book.Styles.Add("s142");
        //                            s142.Parent = "s137";
        //                            s142.Font.FontName = "Calibri";
        //                            s142.Font.Size = 11;
        //                            s142.Interior.Color = "#FFFFFF";
        //                            s142.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s142.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s142.Alignment.WrapText = true;
        //                            s142.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            s142.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s143
        //                            // -----------------------------------------------
        //                            WorksheetStyle s143 = book.Styles.Add("s143");
        //                            s143.Parent = "s137";
        //                            s143.Font.FontName = "Calibri";
        //                            s143.Font.Size = 11;
        //                            s143.Interior.Color = "#FFFFFF";
        //                            s143.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s143.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s143.Alignment.WrapText = true;
        //                            s143.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s144
        //                            // -----------------------------------------------
        //                            WorksheetStyle s144 = book.Styles.Add("s144");
        //                            s144.Parent = "s137";
        //                            s144.Font.FontName = "Arial";
        //                            s144.Font.Color = "#9400D3";
        //                            s144.Interior.Color = "#FFFFFF";
        //                            s144.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s144.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s144.Alignment.WrapText = true;
        //                            s144.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            // -----------------------------------------------
        //                            //  s145
        //                            // -----------------------------------------------
        //                            WorksheetStyle s145 = book.Styles.Add("s145");
        //                            s145.Parent = "s137";
        //                            s145.Font.FontName = "Calibri";
        //                            s145.Font.Size = 11;
        //                            s145.Interior.Color = "#FFFFFF";
        //                            s145.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s145.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s145.Alignment.WrapText = true;
        //                            s145.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s146
        //                            // -----------------------------------------------
        //                            WorksheetStyle s146 = book.Styles.Add("s146");
        //                            s146.Parent = "s137";
        //                            s146.Font.FontName = "Calibri";
        //                            s146.Font.Size = 11;
        //                            s146.Interior.Color = "#FFFFFF";
        //                            s146.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s146.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s146.Alignment.WrapText = true;
        //                            s146.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
        //                            s146.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s169
        //                            // -----------------------------------------------
        //                            WorksheetStyle s169 = book.Styles.Add("s169");
        //                            s169.Parent = "s137";
        //                            s169.Font.FontName = "Arial";
        //                            s169.Font.Color = "#9400D3";
        //                            s169.Interior.Color = "#FFFFFF";
        //                            s169.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s169.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s169.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
        //                            // -----------------------------------------------
        //                            //  s170
        //                            // -----------------------------------------------
        //                            WorksheetStyle s170 = book.Styles.Add("s170");
        //                            s170.Parent = "s137";
        //                            s170.Font.FontName = "Calibri";
        //                            s170.Font.Size = 11;
        //                            s170.Interior.Color = "#FFFFFF";
        //                            s170.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s170.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            // -----------------------------------------------
        //                            //  s171
        //                            // -----------------------------------------------
        //                            WorksheetStyle s171 = book.Styles.Add("s171");
        //                            s171.Parent = "s137";
        //                            s171.Font.FontName = "Calibri";
        //                            s171.Font.Size = 11;
        //                            s171.Interior.Color = "#FFFFFF";
        //                            s171.Interior.Pattern = StyleInteriorPattern.Solid;
        //                            s171.Alignment.Vertical = StyleVerticalAlignment.Top;
        //                            s171.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
        //                            // -----------------------------------------------
        //                            //  s172
        //                            // -----------------------------------------------
        //                            WorksheetStyle s172 = book.Styles.Add("s172");
        //                            s172.Alignment.Vertical = StyleVerticalAlignment.Bottom;
        //                            // -----------------------------------------------
        //                            #endregion
        //                            #region Parameters
        //                            WorksheetRow RowHead = sheet.Table.Rows.Add();
        //                            //WorksheetCell cell;
        //                            cell = RowHead.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = RowHead.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = RowHead.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = RowHead.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = RowHead.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row1Head = sheet.Table.Rows.Add();
        //                            Row1Head.Height = 14;
        //                            Row1Head.AutoFitHeight = false;
        //                            cell = Row1Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row1Head.Cells.Add();
        //                            cell.StyleID = "s140";
        //                            cell = Row1Head.Cells.Add();
        //                            cell.StyleID = "s141";
        //                            cell = Row1Head.Cells.Add();
        //                            cell.StyleID = "s171";
        //                            cell = Row1Head.Cells.Add();
        //                            cell.StyleID = "s142";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row2Head = sheet.Table.Rows.Add();
        //                            Row2Head.Height = 14;
        //                            Row2Head.AutoFitHeight = false;
        //                            cell = Row2Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row2Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row2Head.Cells.Add();
        //                            cell.StyleID = "m2611536909264";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row3Head = sheet.Table.Rows.Add();
        //                            Row3Head.Height = 14;
        //                            Row3Head.AutoFitHeight = false;
        //                            cell = Row3Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row3Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row3Head.Cells.Add();
        //                            cell.StyleID = "m2611536909284";
        //                            cell.Data.Type = DataType.String;
        //                            cell.Data.Text = "Selected Report Parameters";
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row4Head = sheet.Table.Rows.Add();
        //                            Row4Head.Height = 14;
        //                            Row4Head.AutoFitHeight = false;
        //                            cell = Row4Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row4Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row4Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row4Head.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row4Head.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row5Head = sheet.Table.Rows.Add();
        //                            Row5Head.Height = 14;
        //                            Row5Head.AutoFitHeight = false;
        //                            cell = Row5Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row5Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row5Head.Cells.Add();
        //                            cell.StyleID = "m2611536909304";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row6Head = sheet.Table.Rows.Add();
        //                            Row6Head.Height = 14;
        //                            Row6Head.AutoFitHeight = false;
        //                            cell = Row6Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row6Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row6Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row6Head.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row6Head.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row7Head = sheet.Table.Rows.Add();
        //                            Row7Head.Height = 14;
        //                            Row7Head.AutoFitHeight = false;
        //                            cell = Row7Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row7Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row7Head.Cells.Add();
        //                            cell.StyleID = "m2611536909324";
        //                            cell.Data.Type = DataType.String;
        //                            cell.Data.Text = "            Agency: " + Agency + " , Department : " + Depart + " , Program : " + Program;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row8 = sheet.Table.Rows.Add();
        //                            Row8.Height = 14;
        //                            Row8.AutoFitHeight = false;
        //                            cell = Row8.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row8.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row8.Cells.Add();
        //                            cell.StyleID = "m2611536909344";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row9 = sheet.Table.Rows.Add();
        //                            Row9.Height = 14;
        //                            Row9.AutoFitHeight = false;
        //                            cell = Row9.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row9.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row9.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row9.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row9.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row10 = sheet.Table.Rows.Add();
        //                            Row10.Height = 14;
        //                            Row10.AutoFitHeight = false;
        //                            cell = Row10.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row10.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row10.Cells.Add();
        //                            cell.StyleID = "m2611540549592";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row11 = sheet.Table.Rows.Add();
        //                            Row11.Height = 14;
        //                            Row11.AutoFitHeight = false;
        //                            cell = Row11.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row11.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row11.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row11.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row11.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            if (!Sel)
        //                            {
        //                                WorksheetRow RowSelSerPlan = sheet.Table.Rows.Add();
        //                                RowSelSerPlan.Height = 14;
        //                                RowSelSerPlan.AutoFitHeight = false;
        //                                cell = RowSelSerPlan.Cells.Add();
        //                                cell.StyleID = "s139";
        //                                cell = RowSelSerPlan.Cells.Add();
        //                                cell.StyleID = "s143";
        //                                RowSelSerPlan.Cells.Add("            Selected Service Plan(s)", DataType.String, "s144");
        //                                RowSelSerPlan.Cells.Add(" : " + descserv, DataType.String, "s169");
        //                                cell = RowSelSerPlan.Cells.Add();
        //                                cell.StyleID = "s145";
        //                            }
        //                            else
        //                            {
        //                                WorksheetRow RowSerPlan = sheet.Table.Rows.Add();
        //                                RowSerPlan.Height = 14;
        //                                RowSerPlan.AutoFitHeight = false;
        //                                cell = RowSerPlan.Cells.Add();
        //                                cell.StyleID = "s139";
        //                                cell = RowSerPlan.Cells.Add();
        //                                cell.StyleID = "s143";
        //                                RowSerPlan.Cells.Add("            Sevice Plan", DataType.String, "s144");
        //                                RowSerPlan.Cells.Add(" : " + descserv, DataType.String, "s169");
        //                                cell = RowSerPlan.Cells.Add();
        //                                cell.StyleID = "s145";
        //                            }
        //                            // -----------------------------------------------
        //                            WorksheetRow RowCaseW = sheet.Table.Rows.Add();
        //                            RowCaseW.Height = 14;
        //                            RowCaseW.AutoFitHeight = false;
        //                            cell = RowCaseW.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = RowCaseW.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            RowCaseW.Cells.Add("            Case Worker", DataType.String, "s144");
        //                            RowCaseW.Cells.Add(" : " + ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Text.ToString(), DataType.String, "s169");
        //                            cell = RowCaseW.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow RowSite = sheet.Table.Rows.Add();
        //                            RowSite.Height = 14;
        //                            RowSite.AutoFitHeight = false;
        //                            cell = RowSite.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = RowSite.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            RowSite.Cells.Add("            Dimension", DataType.String, "s144");
        //                            RowSite.Cells.Add(" : " + ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Text.ToString(), DataType.String, "s169");
        //                            cell = RowSite.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row12 = sheet.Table.Rows.Add();
        //                            Row12.Height = 14;
        //                            Row12.AutoFitHeight = false;
        //                            cell = Row12.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row12.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            Row12.Cells.Add("            Date Range", DataType.String, "s144");
        //                            if (dtpFrom.Checked && dtpTo.Checked)
        //                            {
        //                                Row12.Cells.Add(" : From: " +
        //                                                            CommonFunctions.ChangeDateFormat(Convert.ToDateTime(dtpFrom.Value).ToShortDateString(), Consts.DateTimeFormats.DateSaveFormat, Consts.DateTimeFormats.DateDisplayFormat)
        //                                                            + "    To: " +
        //                                                            CommonFunctions.ChangeDateFormat(Convert.ToDateTime(dtpTo.Value).ToShortDateString(), Consts.DateTimeFormats.DateSaveFormat, Consts.DateTimeFormats.DateDisplayFormat), DataType.String, "s169");

        //                            }
        //                            else
        //                                Row12.Cells.Add(" ", DataType.String, "s169");

        //                            cell = Row12.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            string EnrlProg = string.Empty;
        //                            if (rbAllApp.Checked == true) EnrlProg = rbAllApp.Text.Trim();
        //                            else if (rbEnrolApp.Checked == true) EnrlProg = rbEnrolApp.Text.Trim();
        //                            else if (rbEnrApppBY_Hie.Checked == true) EnrlProg = rbEnrApppBY_Hie.Text.Trim();

        //                            WorksheetRow ProgEnroll = sheet.Table.Rows.Add();
        //                            ProgEnroll.Height = 14;
        //                            ProgEnroll.AutoFitHeight = false;
        //                            cell = ProgEnroll.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = ProgEnroll.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            ProgEnroll.Cells.Add("            Enroll Program", DataType.String, "s144");
        //                            ProgEnroll.Cells.Add(" : " + EnrlProg, DataType.String, "s169");
        //                            cell = ProgEnroll.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            if (rbEnrApppBY_Hie.Checked == true)
        //                            {
        //                                WorksheetRow RowProgEnroll = sheet.Table.Rows.Add();
        //                                RowProgEnroll.Height = 14;
        //                                RowProgEnroll.AutoFitHeight = false;
        //                                cell = RowProgEnroll.Cells.Add();
        //                                cell.StyleID = "s139";
        //                                cell = RowProgEnroll.Cells.Add();
        //                                cell.StyleID = "s143";
        //                                RowProgEnroll.Cells.Add("            Program", DataType.String, "s144");
        //                                RowProgEnroll.Cells.Add(" : " + ((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Text.ToString(), DataType.String, "s169");
        //                                cell = RowProgEnroll.Cells.Add();
        //                                cell.StyleID = "s145";
        //                            }
        //                            // -----------------------------------------------
        //                            WorksheetRow Row24 = sheet.Table.Rows.Add();
        //                            Row24.Height = 14;
        //                            Row24.AutoFitHeight = false;
        //                            cell = Row24.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row24.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row24.Cells.Add();
        //                            cell.StyleID = "m2611540549632";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row25 = sheet.Table.Rows.Add();
        //                            Row25.Height = 14;
        //                            Row25.AutoFitHeight = false;
        //                            cell = Row25.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row25.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row25.Cells.Add();
        //                            cell.StyleID = "m2611540549652";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row26Head = sheet.Table.Rows.Add();
        //                            Row26Head.Height = 14;
        //                            Row26Head.AutoFitHeight = false;
        //                            cell = Row26Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row26Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row26Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row26Head.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row26Head.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row27Head = sheet.Table.Rows.Add();
        //                            Row27Head.Height = 14;
        //                            Row27Head.AutoFitHeight = false;
        //                            cell = Row27Head.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row27Head.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row27Head.Cells.Add();
        //                            cell.StyleID = "m2611540549672";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row28 = sheet.Table.Rows.Add();
        //                            Row28.Height = 14;
        //                            Row28.AutoFitHeight = false;
        //                            cell = Row28.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row28.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row28.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row28.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row28.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row29 = sheet.Table.Rows.Add();
        //                            Row29.Height = 14;
        //                            Row29.AutoFitHeight = false;
        //                            cell = Row29.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row29.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row29.Cells.Add();
        //                            cell.StyleID = "m2611540549552";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            WorksheetRow Row30 = sheet.Table.Rows.Add();
        //                            Row30.Height = 14;
        //                            Row30.AutoFitHeight = false;
        //                            cell = Row30.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row30.Cells.Add();
        //                            cell.StyleID = "s143";
        //                            cell = Row30.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row30.Cells.Add();
        //                            cell.StyleID = "s170";
        //                            cell = Row30.Cells.Add();
        //                            cell.StyleID = "s145";
        //                            // -----------------------------------------------
        //                            WorksheetRow Row31 = sheet.Table.Rows.Add();
        //                            Row31.Height = 14;
        //                            Row31.AutoFitHeight = false;
        //                            cell = Row31.Cells.Add();
        //                            cell.StyleID = "s139";
        //                            cell = Row31.Cells.Add();
        //                            cell.StyleID = "s146";
        //                            cell = Row31.Cells.Add();
        //                            cell.StyleID = "m2611540549572";
        //                            cell.Data.Type = DataType.String;
        //                            cell.MergeAcross = 2;
        //                            // -----------------------------------------------
        //                            //  Options
        //                            // -----------------------------------------------
        //                            sheet.Options.Selected = true;
        //                            sheet.Options.ProtectObjects = false;
        //                            sheet.Options.ProtectScenarios = false;
        //                            sheet.Options.PageSetup.Header.Margin = 0.3F;
        //                            sheet.Options.PageSetup.Footer.Margin = 0.3F;
        //                            sheet.Options.PageSetup.PageMargins.Bottom = 0.75F;
        //                            sheet.Options.PageSetup.PageMargins.Left = 0.7F;
        //                            sheet.Options.PageSetup.PageMargins.Right = 0.7F;
        //                            sheet.Options.PageSetup.PageMargins.Top = 0.75F;

        //                            sheet.Table.DefaultColumnWidth = 220.5F;
        //                            sheet.Table.Columns.Add(100);
        //                            sheet.Table.Columns.Add(100);
        //                            sheet.Table.Columns.Add(100);
        //                            sheet.Table.Columns.Add(100);
        //                            sheet.Table.Columns.Add(100);
        //                            sheet.Table.Columns.Add(200);

        //                            #endregion
        //                            */

        //                            excelcolumn = excelcolumn + 3;

        //                            xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
        //                            xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
        //                            xlWorkSheet.WriteCell(excelcolumn, 2, "Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")");

        //                            excelcolumn = excelcolumn + 1;
        //                            xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
        //                            xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
        //                            xlWorkSheet.WriteCell(excelcolumn, 2, "Branch: " + Service_desc.Trim());


        //                            excelcolumn = excelcolumn + 1;
        //                            string[] Header1 = { "Type", "Description", "Count" };
        //                            for (int i = 0; i < Header1.Length; ++i)
        //                            {

        //                                xlWorkSheet[excelcolumn, (i + 1)].Font = new System.Drawing.Font("Tahoma", 10, System.Drawing.FontStyle.Bold);
        //                                xlWorkSheet[excelcolumn, (i + 1)].Alignment = Alignment.Centered;
        //                                xlWorkSheet.WriteCell(excelcolumn, (i + 1), Header1[i]);
        //                            }

        //                            Priv_Branch = Branch;
        //                            First = false;
        //                        }

        //                        string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
        //                        if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
        //                        string Grp = dr.Orig_Grp.ToString().Trim();
        //                        if (CAMSType == "CA")
        //                        {
        //                            // DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr.CamCd.ToString().Trim(), null, null);
        //                            List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
        //                            if (dsCAMAST.Count > 0)
        //                            {
        //                                //DataRow drCAMAST = dsCAMAST.Tables[0].Rows[0];
        //                                CAMSDesc = dsCAMAST[0].Desc.ToString();

        //                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
        //                                    CA_Entity.Caseworker = "";
        //                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
        //                                    CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
        //                                else CA_Entity.Caseworker = "";

        //                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
        //                                    CA_Entity.Site = "";
        //                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
        //                                    CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
        //                                else CA_Entity.Site = "";

        //                                List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
        //                                string CAmsCode = dr.CamCd.ToString().Trim();

        //                                if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
        //                                {
        //                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }
        //                                else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
        //                                {
        //                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }
        //                                else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
        //                                {
        //                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else
        //                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }
        //                                else
        //                                {
        //                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                    else
        //                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }

                
        //                                if (CAApp.Count > 0)
        //                                {
                                            
        //                                    string Priv_Type = null, Priv_Cams_Desc = null;
        //                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
        //                                    {
        //                                        int datecnt = 0; decimal TAmount = 0;
        //                                        List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
        //                                        if (SelCaseact.Count > 0)
        //                                        {
        //                                            if (dr.SP2_COUNT_TYPE == "A")
        //                                            {
        //                                                List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
        //                                                decimal TotalCost = 0;
        //                                                if (SelRecs.Count > 0)
        //                                                {
        //                                                    TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

        //                                                    TAmount = ((TotalCost / SelRecs.Count));
        //                                                }
        //                                            }
        //                                            else if (dr.SP2_COUNT_TYPE == "S")
        //                                            {
        //                                                List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");

        //                                                if (SelRecs.Count > 0)
        //                                                {
        //                                                    TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

        //                                                    //TAmount = ((TotalCost / SelRecs.Count) * 100);
        //                                                }
        //                                            }
        //                                            else if (dr.SP2_COUNT_TYPE == "E")
        //                                            {
        //                                                List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
        //                                                if (SelRecs.Count > 0)
        //                                                {
        //                                                    SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
        //                                                    TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
        //                                                }
        //                                            }
        //                                            else
        //                                                datecnt = SelCaseact.Count;
        //                                        }
        //                                        //foreach (Funnel_RepEntity ActEntity in CAApp)
        //                                        //{
        //                                        //    if (!string.IsNullOrEmpty(ActEntity.ACT_DATE.Trim()))
        //                                        //    {
        //                                        //        //if (Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))))
        //                                        //        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE.Trim()))))
        //                                        //        {
        //                                        //            datecnt++;
        //                                        //        }
        //                                        //    }
        //                                        //}

        //                                        excelcolumn = excelcolumn + 1;

        //                                        xlWorkSheet.WriteCell(excelcolumn, 1, CAMSTypeDesc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());

        //                                        if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
        //                                        {
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, TAmount.ToString("0.00").Trim());
        //                                        }
        //                                        else if (datecnt == 0)
        //                                        {
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                        }
        //                                        else
        //                                        {
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, datecnt.ToString().Trim());
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        excelcolumn = excelcolumn + 1;
        //                                        xlWorkSheet.WriteCell(excelcolumn, 1, CAMSTypeDesc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());

        //                                        Priv_Type = CAMSTypeDesc.Trim();

        //                                        Priv_Cams_Desc = CAMSDesc.Trim();

        //                                        decimal TAmount = 0;
        //                                        if (dr.SP2_COUNT_TYPE == "A")
        //                                        {
        //                                            List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
        //                                            decimal TotalCost = 0;
        //                                            if (SelRecs.Count > 0)
        //                                            {
        //                                                TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

        //                                                TAmount = ((TotalCost / SelRecs.Count) );
        //                                            }
        //                                        }
        //                                        else if (dr.SP2_COUNT_TYPE == "S")
        //                                        {
        //                                            List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");

        //                                            if (SelRecs.Count > 0)
        //                                            {
        //                                                TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

        //                                                //TAmount = ((TotalCost / SelRecs.Count) * 100);
        //                                            }
        //                                        }
        //                                        else if (dr.SP2_COUNT_TYPE == "E")
        //                                        {
        //                                            List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
        //                                            if (SelRecs.Count > 0)
        //                                            {
        //                                                SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
        //                                                TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
        //                                            }
        //                                        }

        //                                        if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, TAmount.ToString("0.00").Trim());
        //                                        else
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, CAApp.Count.ToString().Trim());

        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    excelcolumn = excelcolumn + 1;
        //                                    xlWorkSheet.WriteCell(excelcolumn, 1, CAMSTypeDesc.Trim());
        //                                    xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                    xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                }
        //                            }
        //                        }
        //                        else
        //                        {
        //                            //DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr.CamCd.ToString().Trim(), null, null, null);
        //                            List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
        //                            if (MSMast.Count > 0)
        //                            {
        //                                List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
        //                                // DataRow drMSMast = MSMast.Tables[0].Rows[0];

        //                                CAMSDesc = MSMast[0].Desc.ToString();
        //                                string MSType = MSMast[0].Type1.ToString();
        //                                string Type_Desc = string.Empty;
        //                                //if (MSType == "M")
        //                                    Type_Desc = "Outcome";
        //                                //else Type_Desc = "Outcome";

        //                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
        //                                    Search_MS_Details.CaseWorker = "";
        //                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
        //                                    Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
        //                                else Search_MS_Details.CaseWorker = "";

        //                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
        //                                    Search_MS_Details.Site = "";
        //                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
        //                                    Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
        //                                else Search_MS_Details.Site = "";

        //                                string CAmsCode = dr.CamCd.ToString().Trim();
        //                                if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
        //                                {
        //                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }
        //                                else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
        //                                {
        //                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }
        //                                else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
        //                                {
        //                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else
        //                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }
        //                                else
        //                                {
        //                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                    else
        //                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
        //                                }

                                        
        //                                if (MSApp.Count > 0)
        //                                {
        //                                    if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
        //                                    {
        //                                        int DateCount = 0;
        //                                        List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
        //                                        if (SelCaseact.Count > 0) DateCount = SelCaseact.Count;
        //                                        //foreach (Funnel_RepEntity MSEntity in MSApp)
        //                                        //{
        //                                        //    if (!string.IsNullOrEmpty(MSEntity.ACT_DATE.Trim()))
        //                                        //    {
        //                                        //        //if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))))
        //                                        //        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE.Trim()))))
        //                                        //        {
        //                                        //            DateCount++;
        //                                        //        }
        //                                        //    }
        //                                        //}

        //                                        excelcolumn = excelcolumn + 1;

        //                                        xlWorkSheet.WriteCell(excelcolumn, 1, Type_Desc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());

        //                                        if (DateCount == 0)
        //                                        {
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                        }
        //                                        else
        //                                        {
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, DateCount.ToString());
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        excelcolumn = excelcolumn + 1;
        //                                        xlWorkSheet.WriteCell(excelcolumn, 1, Type_Desc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 3, MSApp.Count.ToString());

        //                                    }
        //                                }
        //                                else
        //                                {
        //                                    excelcolumn = excelcolumn + 1;
        //                                    xlWorkSheet.WriteCell(excelcolumn, 1, Type_Desc.Trim());
        //                                    xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                    xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                }

        //                            }
        //                        }

        //                    }
        //                }

        //                if (Allow_Add_Branch == "Y")
        //                {
        //                    DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(SP_Agy, SP_Dept, SP_Prog, Year_Value, SerVicePlan);
        //                    DataTable dtAdd = ds.Tables[0];

        //                    if (dtAdd.Rows.Count > 0)
        //                    {

        //                        excelcolumn = excelcolumn + 3;

        //                        xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
        //                        xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
        //                        xlWorkSheet.WriteCell(excelcolumn, 2, "Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")");


        //                        excelcolumn = excelcolumn + 1;
        //                        xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
        //                        xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
        //                        xlWorkSheet.WriteCell(excelcolumn, 2, "Branch: " + "Additional Branch".Trim());


        //                        excelcolumn = excelcolumn + 1;
        //                        string[] Header1 = { "Type", "Description", "Count" };
        //                        for (int i = 0; i < Header1.Length; ++i)
        //                        {
        //                            xlWorkSheet[excelcolumn, (i + 1)].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
        //                            xlWorkSheet[excelcolumn, (i + 1)].Alignment = Alignment.Centered;
        //                            xlWorkSheet.WriteCell(excelcolumn, (i + 1), Header1[i]);
        //                        }

        //                        foreach (DataRow dr in dtAdd.Rows)
        //                        {
        //                            string CAMSType = dr["SPM2_TYPE"].ToString();
        //                            string CAMSTypeDesc = string.Empty;
        //                            if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";

        //                            if (CAMSType == "CA")
        //                            {
        //                                //DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr["SPM2_CAMS_CODE"].ToString().Trim(), null, null);
        //                                List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
        //                                if (dsCAMAST.Count > 0)
        //                                {
        //                                    // DataRow drCAMAST = dsCAMAST.Tables[0].Rows[0];
        //                                    CAMSDesc = dsCAMAST[0].Desc.ToString();

        //                                    if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
        //                                        CA_Entity.Caseworker = "";
        //                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
        //                                        CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
        //                                    else CA_Entity.Caseworker = "";

        //                                    if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
        //                                        CA_Entity.Site = "";
        //                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
        //                                        CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
        //                                    else CA_Entity.Site = "";

        //                                    List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
        //                                    string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim(); //string Grp = dr["sp2_orig_grp"].ToString().Trim();
        //                                    if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
        //                                    {
        //                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
        //                                    }
        //                                    else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
        //                                    {
        //                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
        //                                    }
        //                                    else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
        //                                    {
        //                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else
        //                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
        //                                    }
        //                                    else
        //                                    {
        //                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
        //                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
        //                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
        //                                        else
        //                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
        //                                    }

                                            

        //                                    if (CAApp.Count > 0)
        //                                    {
                                                
        //                                        string Priv_Type = null, Priv_Cams_Desc = null;
        //                                        if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
        //                                        {
        //                                            int datecnt = 0;
        //                                            List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
        //                                            if (SelCaseact.Count > 0) datecnt = SelCaseact.Count;
        //                                            //foreach (Funnel_RepEntity ActEntity in CAApp)
        //                                            //{
        //                                            //    if (!string.IsNullOrEmpty(ActEntity.ACT_DATE.Trim()))
        //                                            //    {
        //                                            //        if (Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((ActEntity.ACT_DATE))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))))
        //                                            //        {
        //                                            //            datecnt++;
        //                                            //        }
        //                                            //    }
        //                                            //}

        //                                            excelcolumn = excelcolumn + 1;
        //                                            xlWorkSheet.WriteCell(excelcolumn, 1, CAMSTypeDesc/*CAMSType*/.Trim());
        //                                            xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());

        //                                            Priv_Type = CAMSTypeDesc.Trim();


        //                                            if (datecnt == 0)
        //                                            {
        //                                                xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                            }
        //                                            else
        //                                            {
        //                                                xlWorkSheet.WriteCell(excelcolumn, 3, datecnt.ToString());
        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            excelcolumn = excelcolumn + 1;
        //                                            xlWorkSheet.WriteCell(excelcolumn, 1, CAMSTypeDesc.Trim());
        //                                            xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());

        //                                            Priv_Type = CAMSTypeDesc.Trim();

        //                                            Priv_Cams_Desc = CAMSDesc.Trim();

        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, CAApp.Count.ToString());

        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        excelcolumn = excelcolumn + 1;
        //                                        xlWorkSheet.WriteCell(excelcolumn, 1, CAMSTypeDesc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                    }
        //                                }
        //                            }
        //                            else
        //                            {
        //                                // DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr["SPM2_CAMS_CODE"].ToString().Trim(), null, null, null);
        //                                List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
        //                                if (MSMast.Count > 0)
        //                                {
        //                                    List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
        //                                    // DataRow drMSMast = MSMast.Tables[0].Rows[0];

        //                                    CAMSDesc = MSMast[0].Desc.ToString();
        //                                    string MSType = MSMast[0].Type1.ToString();
        //                                    string Type_Desc = string.Empty;
        //                                    //if (MSType == "M")
        //                                        Type_Desc = "Outcome";
        //                                    //else Type_Desc = "Outcome";

        //                                    if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
        //                                        Search_MS_Details.CaseWorker = "";
        //                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
        //                                        Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
        //                                    else Search_MS_Details.CaseWorker = "";

        //                                    if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
        //                                        Search_MS_Details.Site = "";
        //                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
        //                                        Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
        //                                    else Search_MS_Details.Site = "";

        //                                    string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim();
        //                                    if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
        //                                    {
        //                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
        //                                    }
        //                                    else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
        //                                    {
        //                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
        //                                    }
        //                                    else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
        //                                    {
        //                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else
        //                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
        //                                    }
        //                                    else
        //                                    {
        //                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
        //                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
        //                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
        //                                        else
        //                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
        //                                    }

                                            
        //                                    if (MSApp.Count > 0)
        //                                    {
                                                
        //                                        if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
        //                                        {
        //                                            int DateCount = 0;

        //                                            List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
        //                                            if (SelCaseact.Count > 0) DateCount = SelCaseact.Count;
        //                                            //foreach (Funnel_RepEntity MSEntity in MSApp)
        //                                            //{
        //                                            //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((MSEntity.ACT_DATE))))
        //                                            //    {
        //                                            //        DateCount++;
        //                                            //    }
        //                                            //}

        //                                            excelcolumn = excelcolumn + 1;

        //                                            xlWorkSheet.WriteCell(excelcolumn, 1, Type_Desc.Trim());
        //                                            xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                            if (DateCount == 0)
        //                                            {
        //                                                xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                            }
        //                                            else
        //                                            {
        //                                                xlWorkSheet.WriteCell(excelcolumn, 3, DateCount.ToString());
        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            excelcolumn = excelcolumn + 1;
        //                                            xlWorkSheet.WriteCell(excelcolumn, 1, Type_Desc.Trim());
        //                                            xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                            xlWorkSheet.WriteCell(excelcolumn, 3, MSApp.Count.ToString());
        //                                        }
        //                                    }
        //                                    else
        //                                    {
        //                                        excelcolumn = excelcolumn + 1;
        //                                        xlWorkSheet.WriteCell(excelcolumn, 1, Type_Desc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
        //                                        xlWorkSheet.WriteCell(excelcolumn, 3, "");
        //                                    }

        //                                }
        //                            }
        //                        }
        //                    }
        //                }

        //            }
        //        }

        //        FileStream stream = new FileStream(PdfName, FileMode.Create);

        //        xlWorkSheet.Save(stream);
        //        stream.Close();
                
        //    }
        //}
        
        #region Converted to Carlos by Vikash on 08/04/2023 for adding Params page

        private void On_SaveAPP_Excel(object sender, FormClosedEventArgs e)
        {

            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                string PdfName = "Pdf File";
                PdfName = form.GetFileName();
                //PdfName = strFolderPath + PdfName + "-Details";
                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName + "_AUDIT";
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
                }
                catch (Exception ex)
                {
                    AlertBox.Show("Error", MessageBoxIcon.Error);
                }

                try
                {
                    string Tmpstr = PdfName + ".xls";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = PdfName + newFileName.Substring(0, length) + ".xls";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    PdfName = Random_Filename;
                else
                    PdfName += ".xls";

                WorksheetRow excelrowSpace; WorksheetRow excelrowSpace1; WorksheetCell cell;
                WorksheetRow excelrow1; WorksheetRow excelrow2; WorksheetRow excelrow3; WorksheetRow excelrow4; WorksheetRow excelrow5; WorksheetRow excelrow6; WorksheetRow excelrow7; WorksheetRow excelrow8;
                WorksheetRow excelrow9; WorksheetRow excelrow10; WorksheetRow excelrow11; WorksheetRow excelrow12; WorksheetRow excelrow13; WorksheetRow excelrow14; WorksheetRow excelrow15; 
                
                Workbook book = new Workbook();

                //**Worksheet sheet = book.Worksheets.Add("Parameters");

                #region Header Page
                //WorksheetColumn columnHead = sheet.Table.Columns.Add();
                //columnHead.Index = 2;
                //columnHead.Width = 5;
                //sheet.Table.Columns.Add(163);
                //WorksheetColumn column2Head = sheet.Table.Columns.Add();
                //column2Head.Width = 370;//332;
                //column2Head.StyleID = "s172";
                //sheet.Table.Columns.Add(100);//(59);
                //                             //  s137
                //                             // -----------------------------------------------
                //WorksheetStyle s137 = book.Styles.Add("s137");
                //s137.Name = "Normal 3";
                //s137.Font.FontName = "Calibri";
                //s137.Font.Size = 11;
                //s137.Font.Color = "#000000";
                //s137.Alignment.Vertical = StyleVerticalAlignment.Bottom;
                //// -----------------------------------------------
                ////  m2611536909264
                //// -----------------------------------------------
                //WorksheetStyle m2611536909264 = book.Styles.Add("m2611536909264");
                //m2611536909264.Parent = "s137";
                //m2611536909264.Font.FontName = "Arial";
                //m2611536909264.Font.Color = "#9400D3";
                //m2611536909264.Interior.Color = "#FFFFFF";
                //m2611536909264.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909264.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909264.Alignment.WrapText = true;
                //m2611536909264.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909264.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909284
                //// -----------------------------------------------
                //WorksheetStyle m2611536909284 = book.Styles.Add("m2611536909284");
                //m2611536909284.Parent = "s137";
                //m2611536909284.Font.FontName = "Arial";
                //m2611536909284.Font.Color = "#9400D3";
                //m2611536909284.Interior.Color = "#FFFFFF";
                //m2611536909284.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909284.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909284.Alignment.WrapText = true;
                //m2611536909284.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909284.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909304
                //// -----------------------------------------------
                //WorksheetStyle m2611536909304 = book.Styles.Add("m2611536909304");
                //m2611536909304.Parent = "s137";
                //m2611536909304.Font.FontName = "Arial";
                //m2611536909304.Font.Color = "#9400D3";
                //m2611536909304.Interior.Color = "#FFFFFF";
                //m2611536909304.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909304.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909304.Alignment.WrapText = true;
                //m2611536909304.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909304.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909324
                //// -----------------------------------------------
                //WorksheetStyle m2611536909324 = book.Styles.Add("m2611536909324");
                //m2611536909324.Parent = "s137";
                //m2611536909324.Font.FontName = "Arial";
                //m2611536909324.Font.Color = "#9400D3";
                //m2611536909324.Interior.Color = "#FFFFFF";
                //m2611536909324.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909324.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909324.Alignment.WrapText = true;
                //m2611536909324.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909324.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611536909344
                //// -----------------------------------------------
                //WorksheetStyle m2611536909344 = book.Styles.Add("m2611536909344");
                //m2611536909344.Parent = "s137";
                //m2611536909344.Font.FontName = "Arial";
                //m2611536909344.Font.Color = "#9400D3";
                //m2611536909344.Interior.Color = "#FFFFFF";
                //m2611536909344.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611536909344.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611536909344.Alignment.WrapText = true;
                //m2611536909344.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611536909344.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549552
                //// -----------------------------------------------
                //WorksheetStyle m2611540549552 = book.Styles.Add("m2611540549552");
                //m2611540549552.Parent = "s137";
                //m2611540549552.Font.FontName = "Arial";
                //m2611540549552.Font.Color = "#9400D3";
                //m2611540549552.Interior.Color = "#FFFFFF";
                //m2611540549552.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549552.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549552.Alignment.WrapText = true;
                //m2611540549552.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549552.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549572
                //// -----------------------------------------------
                //WorksheetStyle m2611540549572 = book.Styles.Add("m2611540549572");
                //m2611540549572.Parent = "s137";
                //m2611540549572.Font.FontName = "Arial";
                //m2611540549572.Font.Color = "#9400D3";
                //m2611540549572.Interior.Color = "#FFFFFF";
                //m2611540549572.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549572.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549572.Alignment.WrapText = true;
                //m2611540549572.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549572.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
                //m2611540549572.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549592
                //// -----------------------------------------------
                //WorksheetStyle m2611540549592 = book.Styles.Add("m2611540549592");
                //m2611540549592.Parent = "s137";
                //m2611540549592.Font.FontName = "Arial";
                //m2611540549592.Font.Color = "#9400D3";
                //m2611540549592.Interior.Color = "#FFFFFF";
                //m2611540549592.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549592.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549592.Alignment.WrapText = true;
                //m2611540549592.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549592.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549612
                //// -----------------------------------------------
                //WorksheetStyle m2611540549612 = book.Styles.Add("m2611540549612");
                //m2611540549612.Parent = "s137";
                //m2611540549612.Font.FontName = "Arial";
                //m2611540549612.Font.Color = "#9400D3";
                //m2611540549612.Interior.Color = "#FFFFFF";
                //m2611540549612.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549612.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549612.Alignment.WrapText = true;
                //m2611540549612.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549612.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549632
                //// -----------------------------------------------
                //WorksheetStyle m2611540549632 = book.Styles.Add("m2611540549632");
                //m2611540549632.Parent = "s137";
                //m2611540549632.Font.FontName = "Arial";
                //m2611540549632.Font.Color = "#9400D3";
                //m2611540549632.Interior.Color = "#FFFFFF";
                //m2611540549632.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549632.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549632.Alignment.WrapText = true;
                //m2611540549632.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549632.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549652
                //// -----------------------------------------------
                //WorksheetStyle m2611540549652 = book.Styles.Add("m2611540549652");
                //m2611540549652.Parent = "s137";
                //m2611540549652.Font.FontName = "Arial";
                //m2611540549652.Font.Color = "#9400D3";
                //m2611540549652.Interior.Color = "#FFFFFF";
                //m2611540549652.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549652.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549652.Alignment.WrapText = true;
                //m2611540549652.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549652.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  m2611540549672
                //// -----------------------------------------------
                //WorksheetStyle m2611540549672 = book.Styles.Add("m2611540549672");
                //m2611540549672.Parent = "s137";
                //m2611540549672.Font.FontName = "Arial";
                //m2611540549672.Font.Color = "#9400D3";
                //m2611540549672.Interior.Color = "#FFFFFF";
                //m2611540549672.Interior.Pattern = StyleInteriorPattern.Solid;
                //m2611540549672.Alignment.Vertical = StyleVerticalAlignment.Top;
                //m2611540549672.Alignment.WrapText = true;
                //m2611540549672.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //m2611540549672.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s139
                //// -----------------------------------------------
                //WorksheetStyle s139 = book.Styles.Add("s139");
                //s139.Parent = "s137";
                //s139.Font.FontName = "Calibri";
                //s139.Font.Size = 11;
                //s139.Interior.Color = "#FFFFFF";
                //s139.Interior.Pattern = StyleInteriorPattern.Solid;
                //s139.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s139.Alignment.WrapText = true;
                //// -----------------------------------------------
                ////  s140
                //// -----------------------------------------------
                //WorksheetStyle s140 = book.Styles.Add("s140");
                //s140.Parent = "s137";
                //s140.Font.FontName = "Calibri";
                //s140.Font.Size = 11;
                //s140.Interior.Color = "#FFFFFF";
                //s140.Interior.Pattern = StyleInteriorPattern.Solid;
                //s140.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s140.Alignment.WrapText = true;
                //s140.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
                //s140.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s141
                //// -----------------------------------------------
                //WorksheetStyle s141 = book.Styles.Add("s141");
                //s141.Parent = "s137";
                //s141.Font.FontName = "Calibri";
                //s141.Font.Size = 11;
                //s141.Interior.Color = "#FFFFFF";
                //s141.Interior.Pattern = StyleInteriorPattern.Solid;
                //s141.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s141.Alignment.WrapText = true;
                //s141.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s142
                //// -----------------------------------------------
                //WorksheetStyle s142 = book.Styles.Add("s142");
                //s142.Parent = "s137";
                //s142.Font.FontName = "Calibri";
                //s142.Font.Size = 11;
                //s142.Interior.Color = "#FFFFFF";
                //s142.Interior.Pattern = StyleInteriorPattern.Solid;
                //s142.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s142.Alignment.WrapText = true;
                //s142.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //s142.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s143
                //// -----------------------------------------------
                //WorksheetStyle s143 = book.Styles.Add("s143");
                //s143.Parent = "s137";
                //s143.Font.FontName = "Calibri";
                //s143.Font.Size = 11;
                //s143.Interior.Color = "#FFFFFF";
                //s143.Interior.Pattern = StyleInteriorPattern.Solid;
                //s143.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s143.Alignment.WrapText = true;
                //s143.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s144
                //// -----------------------------------------------
                //WorksheetStyle s144 = book.Styles.Add("s144");
                //s144.Parent = "s137";
                //s144.Font.FontName = "Arial";
                //s144.Font.Color = "#9400D3";
                //s144.Interior.Color = "#FFFFFF";
                //s144.Interior.Pattern = StyleInteriorPattern.Solid;
                //s144.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s144.Alignment.WrapText = true;
                //s144.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //// -----------------------------------------------
                ////  s145
                //// -----------------------------------------------
                //WorksheetStyle s145 = book.Styles.Add("s145");
                //s145.Parent = "s137";
                //s145.Font.FontName = "Calibri";
                //s145.Font.Size = 11;
                //s145.Interior.Color = "#FFFFFF";
                //s145.Interior.Pattern = StyleInteriorPattern.Solid;
                //s145.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s145.Alignment.WrapText = true;
                //s145.Borders.Add(StylePosition.Right, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s146
                //// -----------------------------------------------
                //WorksheetStyle s146 = book.Styles.Add("s146");
                //s146.Parent = "s137";
                //s146.Font.FontName = "Calibri";
                //s146.Font.Size = 11;
                //s146.Interior.Color = "#FFFFFF";
                //s146.Interior.Pattern = StyleInteriorPattern.Solid;
                //s146.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s146.Alignment.WrapText = true;
                //s146.Borders.Add(StylePosition.Bottom, LineStyleOption.Continuous, 1, "#000000");
                //s146.Borders.Add(StylePosition.Left, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s169
                //// -----------------------------------------------
                //WorksheetStyle s169 = book.Styles.Add("s169");
                //s169.Parent = "s137";
                //s169.Font.FontName = "Arial";
                //s169.Font.Color = "#9400D3";
                //s169.Interior.Color = "#FFFFFF";
                //s169.Interior.Pattern = StyleInteriorPattern.Solid;
                //s169.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s169.Alignment.ReadingOrder = StyleReadingOrder.LeftToRight;
                //// -----------------------------------------------
                ////  s170
                //// -----------------------------------------------
                //WorksheetStyle s170 = book.Styles.Add("s170");
                //s170.Parent = "s137";
                //s170.Font.FontName = "Calibri";
                //s170.Font.Size = 11;
                //s170.Interior.Color = "#FFFFFF";
                //s170.Interior.Pattern = StyleInteriorPattern.Solid;
                //s170.Alignment.Vertical = StyleVerticalAlignment.Top;
                //// -----------------------------------------------
                ////  s171
                //// -----------------------------------------------
                //WorksheetStyle s171 = book.Styles.Add("s171");
                //s171.Parent = "s137";
                //s171.Font.FontName = "Calibri";
                //s171.Font.Size = 11;
                //s171.Interior.Color = "#FFFFFF";
                //s171.Interior.Pattern = StyleInteriorPattern.Solid;
                //s171.Alignment.Vertical = StyleVerticalAlignment.Top;
                //s171.Borders.Add(StylePosition.Top, LineStyleOption.Continuous, 1, "#000000");
                //// -----------------------------------------------
                ////  s172
                //// -----------------------------------------------
                //WorksheetStyle s172 = book.Styles.Add("s172");
                //s172.Alignment.Vertical = StyleVerticalAlignment.Bottom;

                //// -----------------------------------------------
                //WorksheetRow RowHead = sheet.Table.Rows.Add();
                ////WorksheetCell cell;
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s170";
                //cell = RowHead.Cells.Add();
                //cell.StyleID = "s139";
                //// -----------------------------------------------
                //WorksheetRow Row1Head = sheet.Table.Rows.Add();
                //Row1Head.Height = 14;
                //Row1Head.AutoFitHeight = false;
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s140";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s141";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s171";
                //cell = Row1Head.Cells.Add();
                //cell.StyleID = "s142";
                //// -----------------------------------------------
                //WorksheetRow Row2Head = sheet.Table.Rows.Add();
                //Row2Head.Height = 14;
                //Row2Head.AutoFitHeight = false;
                //cell = Row2Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row2Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row2Head.Cells.Add();
                //cell.StyleID = "m2611536909264";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row7Head = sheet.Table.Rows.Add();
                //Row7Head.Height = 14;
                //Row7Head.AutoFitHeight = false;
                //cell = Row7Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row7Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row7Head.Cells.Add();
                //cell.StyleID = "m2611536909324";
                //cell.Data.Type = DataType.String;
                //cell.Data.Text = Privileges.Program + " - " + Privileges.PrivilegeName;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row101 = sheet.Table.Rows.Add();
                //Row101.Height = 14;
                //Row101.AutoFitHeight = false;
                //cell = Row101.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row101.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row101.Cells.Add();
                //cell.StyleID = "m2611540549592";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row88Head = sheet.Table.Rows.Add();
                //Row88Head.Height = 14;
                //Row88Head.AutoFitHeight = false;
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row88Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row3Head = sheet.Table.Rows.Add();
                //Row3Head.Height = 14;
                //Row3Head.AutoFitHeight = false;
                //cell = Row3Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row3Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row3Head.Cells.Add();
                //cell.StyleID = "m2611536909284";
                //cell.Data.Type = DataType.String;
                //cell.Data.Text = "Selected Report Parameters";
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row4Head = sheet.Table.Rows.Add();
                //Row4Head.Height = 14;
                //Row4Head.AutoFitHeight = false;
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row4Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row5Head = sheet.Table.Rows.Add();
                //Row5Head.Height = 14;
                //Row5Head.AutoFitHeight = false;
                //cell = Row5Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row5Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row5Head.Cells.Add();
                //cell.StyleID = "m2611536909304";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row6Head = sheet.Table.Rows.Add();
                //Row6Head.Height = 14;
                //Row6Head.AutoFitHeight = false;
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row6Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //string Header_year = string.Empty;

                //if (CmbYear.Visible == true)
                //    Header_year = "Year: " + ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();

                //WorksheetRow Row78Head = sheet.Table.Rows.Add();
                //Row78Head.Height = 14;
                //Row78Head.AutoFitHeight = false;
                //cell = Row78Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row78Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row78Head.Cells.Add();
                //cell.StyleID = "m2611536909324";
                //cell.Data.Type = DataType.String;
                //cell.Data.Text = "            Hierarchy: " + Txt_HieDesc.Text.Trim() + "   " + Header_year;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row10 = sheet.Table.Rows.Add();
                //Row10.Height = 14;
                //Row10.AutoFitHeight = false;
                //cell = Row10.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row10.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row10.Cells.Add();
                //cell.StyleID = "m2611540549592";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row11 = sheet.Table.Rows.Add();
                //Row11.Height = 14;
                //Row11.AutoFitHeight = false;
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row11.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //string Report_Type = string.Empty;
                //if (Rb_Act.Checked == true) Report_Type = Rb_Act.Text.Trim();
                //else if (Rb_Weekly1.Checked == true) Report_Type = Rb_Weekly1.Text.Trim();
                //else if (Rb_Weekly2.Checked == true) Report_Type = Rb_Weekly2.Text.Trim();

                //WorksheetRow ReportType = sheet.Table.Rows.Add();
                //ReportType.Height = 14;
                //ReportType.AutoFitHeight = false;
                //cell = ReportType.Cells.Add();
                //cell.StyleID = "s139";
                //cell = ReportType.Cells.Add();
                //cell.StyleID = "s143";
                //ReportType.Cells.Add("           Report Type", DataType.String, "s144");
                //ReportType.Cells.Add(Report_Type, DataType.String, "s169");
                //cell = ReportType.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row13 = sheet.Table.Rows.Add();
                //Row13.Height = 14;
                //Row13.AutoFitHeight = false;
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row13.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow AppType = sheet.Table.Rows.Add();
                //AppType.Height = 14;
                //AppType.AutoFitHeight = false;
                //cell = AppType.Cells.Add();
                //cell.StyleID = "s139";
                //cell = AppType.Cells.Add();
                //cell.StyleID = "s143";
                //AppType.Cells.Add("            Application Type", DataType.String, "s144");
                //AppType.Cells.Add(((Captain.Common.Utilities.ListItem)Cmb_Applications.SelectedItem).Text.Trim(), DataType.String, "s169");
                //cell = AppType.Cells.Add();
                //cell.StyleID = "s145";

                //// -----------------------------------------------
                //WorksheetRow Row133 = sheet.Table.Rows.Add();
                //Row133.Height = 14;
                //Row133.AutoFitHeight = false;
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row133.Cells.Add();
                //cell.StyleID = "s145";

                //// -----------------------------------------------
                //if (Intake_From_Date.Checked == true && Intake_To_Date.Checked == true)
                //{

                //    WorksheetRow IntDte = sheet.Table.Rows.Add();
                //    IntDte.Height = 14;
                //    IntDte.AutoFitHeight = false;
                //    cell = IntDte.Cells.Add();
                //    cell.StyleID = "s139";
                //    cell = IntDte.Cells.Add();
                //    cell.StyleID = "s143";
                //    IntDte.Cells.Add("           Intake From Date: ", DataType.String, "s144");
                //    IntDte.Cells.Add(CommonFunctions.ChangeDateFormat(Convert.ToDateTime(Intake_From_Date.Value).ToShortDateString(), Consts.DateTimeFormats.DateSaveFormat, Consts.DateTimeFormats.DateDisplayFormat)
                //        + "   To: " + CommonFunctions.ChangeDateFormat(Convert.ToDateTime(Intake_To_Date.Value).ToShortDateString(), Consts.DateTimeFormats.DateSaveFormat, Consts.DateTimeFormats.DateDisplayFormat));
                //    cell = IntDte.Cells.Add();
                //    cell.StyleID = "s145";
                //    // -----------------------------------------------
                //    WorksheetRow Row135 = sheet.Table.Rows.Add();
                //    Row135.Height = 14;
                //    Row135.AutoFitHeight = false;
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s139";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s143";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s139";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s170";
                //    cell = Row135.Cells.Add();
                //    cell.StyleID = "s145";
                //}
                //// -----------------------------------------------
                //WorksheetRow Row24 = sheet.Table.Rows.Add();
                //Row24.Height = 14;
                //Row24.AutoFitHeight = false;
                //cell = Row24.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row24.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row24.Cells.Add();
                //cell.StyleID = "m2611540549632";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row25 = sheet.Table.Rows.Add();
                //Row25.Height = 14;
                //Row25.AutoFitHeight = false;
                //cell = Row25.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row25.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row25.Cells.Add();
                //cell.StyleID = "m2611540549652";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row26Head = sheet.Table.Rows.Add();
                //Row26Head.Height = 14;
                //Row26Head.AutoFitHeight = false;
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row26Head.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row27Head = sheet.Table.Rows.Add();
                //Row27Head.Height = 14;
                //Row27Head.AutoFitHeight = false;
                //cell = Row27Head.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row27Head.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row27Head.Cells.Add();
                //cell.StyleID = "m2611540549672";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row28 = sheet.Table.Rows.Add();
                //Row28.Height = 14;
                //Row28.AutoFitHeight = false;
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row28.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row29 = sheet.Table.Rows.Add();
                //Row29.Height = 14;
                //Row29.AutoFitHeight = false;
                //cell = Row29.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row29.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row29.Cells.Add();
                //cell.StyleID = "m2611540549552";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                //WorksheetRow Row30 = sheet.Table.Rows.Add();
                //Row30.Height = 14;
                //Row30.AutoFitHeight = false;
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s143";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s170";
                //cell = Row30.Cells.Add();
                //cell.StyleID = "s145";
                //// -----------------------------------------------
                //WorksheetRow Row31 = sheet.Table.Rows.Add();
                //Row31.Height = 14;
                //Row31.AutoFitHeight = false;
                //cell = Row31.Cells.Add();
                //cell.StyleID = "s139";
                //cell = Row31.Cells.Add();
                //cell.StyleID = "s146";
                //cell = Row31.Cells.Add();
                //cell.StyleID = "m2611540549572";
                //cell.Data.Type = DataType.String;
                //cell.MergeAcross = 2;
                //// -----------------------------------------------
                ////  Options
                //// -----------------------------------------------
                //sheet.Options.Selected = true;
                //sheet.Options.ProtectObjects = false;
                //sheet.Options.ProtectScenarios = false;
                //sheet.Options.PageSetup.Header.Margin = 0.3F;
                //sheet.Options.PageSetup.Footer.Margin = 0.3F;
                //sheet.Options.PageSetup.PageMargins.Bottom = 0.75F;
                //sheet.Options.PageSetup.PageMargins.Left = 0.7F;
                //sheet.Options.PageSetup.PageMargins.Right = 0.7F;
                //sheet.Options.PageSetup.PageMargins.Top = 0.75F;

                #endregion
                #region Styles
                WorksheetStyle mainstyle = book.Styles.Add("MainHeaderStyles");
                mainstyle.Font.FontName = "Tahoma";
                mainstyle.Font.Size = 12;
                mainstyle.Font.Bold = true;
                mainstyle.Font.Color = "#FFFFFF";
                mainstyle.Interior.Color = "#0070c0";
                mainstyle.Interior.Pattern = StyleInteriorPattern.Solid;
                mainstyle.Alignment.Horizontal = StyleHorizontalAlignment.Center;
                mainstyle.Alignment.Vertical = StyleVerticalAlignment.Center;


                WorksheetStyle style1 = book.Styles.Add("Normal");
                style1.Font.FontName = "Tahoma";
                style1.Font.Size = 10;
                style1.Alignment.Horizontal = StyleHorizontalAlignment.Center;
                style1.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle stylecenter = book.Styles.Add("Normalcenter");
                stylecenter.Font.FontName = "Tahoma";
                stylecenter.Font.Bold = true;
                stylecenter.Font.Size = 11;
                stylecenter.Interior.Pattern = StyleInteriorPattern.Solid;
                stylecenter.Interior.Color = "#BDD6ED";
                stylecenter.Alignment.Horizontal = StyleHorizontalAlignment.Center;
                stylecenter.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style3 = book.Styles.Add("NormalLeft");
                style3.Font.FontName = "Tahoma";
                style3.Font.Size = 10;
                style3.Interior.Color = "#f2f2f2";
                style3.Alignment.WrapText = true;
                style3.Alignment.Horizontal = StyleHorizontalAlignment.Left;
                style3.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style4 = book.Styles.Add("NormalRight");
                style4.Font.FontName = "Tahoma";
                style4.Font.Size = 10;
                style4.Interior.Color = "#f2f2f2";
                style4.Alignment.Horizontal = StyleHorizontalAlignment.Right;
                style4.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style44 = book.Styles.Add("NormalRightBold");
                style44.Font.FontName = "Tahoma";
                style44.Font.Size = 10;
                style44.Font.Bold = true;
                style44.Interior.Color = "#f2f2f2";
                style44.Alignment.Horizontal = StyleHorizontalAlignment.Right;
                style44.Alignment.Vertical = StyleVerticalAlignment.Center;

                WorksheetStyle style15 = book.Styles.Add("NormalBold");
                style15.Font.FontName = "Tahoma";
                style15.Font.Size = 11;
                style15.Font.Bold = true;
                style15.Interior.Pattern = StyleInteriorPattern.Solid;
                style15.Interior.Color = "#BDD6ED";
                style15.Alignment.Horizontal = StyleHorizontalAlignment.Left;
                style15.Alignment.Vertical = StyleVerticalAlignment.Center;
                style15.Alignment.WrapText = true;

                WorksheetStyle style16 = book.Styles.Add("NormalRedBold");
                style16.Font.FontName = "Tahoma";
                style16.Font.Size = 10;
                style16.Font.Bold = true;
                style16.Alignment.Horizontal = StyleHorizontalAlignment.Left;
                style16.Alignment.Vertical = StyleVerticalAlignment.Center;
                style16.Alignment.WrapText = true;

                #endregion


                /*Worksheet*/
                Worksheet sheet = book.Worksheets.Add("Audit");
                sheet.Table.DefaultRowHeight = 14.25F;

                sheet.Table.DefaultColumnWidth = 220.5F;
                sheet.Table.Columns.Add(100);
                sheet.Table.Columns.Add(300);
                sheet.Table.Columns.Add(100);
                sheet.Table.Columns.Add(150);
                sheet.Table.Columns.Add(150);
                sheet.Table.Columns.Add(100);
                sheet.Table.Columns.Add(250);
                sheet.Table.Columns.Add(250);

                string N_Agy = string.Empty, N_Dept = string.Empty, N_prog = string.Empty, N_Year = string.Empty;
                if (Agency == "**") N_Agy = null; else N_Agy = Agency;
                if (Depart == "**") N_Dept = null; else N_Dept = Depart;
                if (Program == "**") N_prog = null; else N_prog = Program;
                if (CmbYear.Visible == true)
                    N_Year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.Trim(); //else N_Year = null;



                string data = string.Empty; //DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                bool First = true;
                string Service_Plan = string.Empty, Branch_cd = string.Empty, SP_Desc = string.Empty, Priv_Branch = string.Empty;
                string CaDate = string.Empty, Branch = string.Empty, Service_desc = string.Empty, CAMSDesc = string.Empty;
                string F_Seq = string.Empty, Note_Worker = string.Empty, Note_site = string.Empty;

                try
                {
                    foreach (DataGridViewRow drsp in gvSps.Rows)
                    {
                        if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                        {
                            Service_Plan = drsp.Cells["SP_Code"].Value.ToString().Trim(); bool CAFirst = true;
                            CASESP0Entity SP0_data = _model.SPAdminData.Browse_CASESP0(Service_Plan, null, null, null, null, null, null, null, null);
                            if (!string.IsNullOrEmpty(SP0_data.BpCode.Trim())) Branch_cd = SP0_data.BpCode.Trim();
                            if (!string.IsNullOrEmpty(SP0_data.B1Code.Trim())) Branch_cd += SP0_data.B1Code.Trim();
                            if (!string.IsNullOrEmpty(SP0_data.B2Code.Trim())) Branch_cd += SP0_data.B2Code.Trim();
                            if (!string.IsNullOrEmpty(SP0_data.B3Code.Trim())) Branch_cd += SP0_data.B3Code.Trim();
                            if (!string.IsNullOrEmpty(SP0_data.B4Code.Trim())) Branch_cd += SP0_data.B4Code.Trim();
                            if (!string.IsNullOrEmpty(SP0_data.B5Code.Trim())) Branch_cd += SP0_data.B5Code.Trim();

                            SP_Desc = SP0_data.Desc.Trim();
                            string Allow_Add_Branch = SP0_data.Allow_Add_Branch.Trim();

                            List<Funnel_RepEntity> dsCount = new List<Funnel_RepEntity>(); List<Funnel_RepEntity> dsMSCount = new List<Funnel_RepEntity>();

                            if (N_Agy != null && N_Dept != null && N_prog != null)
                            {
                                dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                                dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                            }
                            else if (N_Agy != null && N_Dept != null && N_prog == null)
                            {
                                dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                                dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                            }
                            else if (N_Agy != null && N_Dept == null && N_prog == null)
                            {
                                dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                                dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                            }
                            else
                            {
                                dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                                dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                            }

                            if (dsMSCount.Count > 0 || dsCount.Count > 0)
                            {
                                if (Branch_cd.Length > 0)
                                {
                                    for (int i = 0; i < Branch_cd.Length;)
                                    {
                                        string Temp_Branch = Branch_cd.Substring(i, 1);
                                        List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == Service_Plan.Trim()).OrderByDescending(u => u.Branch).ToList();
                                        //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(Service_Plan, Temp_Branch, null, null);
                                        //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];

                                        Priv_Branch = null;
                                        if (casesp2Data.Count > 0)
                                        {
                                            //DataView dv = dtSP_CaseSP2.DefaultView;
                                            //dv.Sort = "sp2_branch DESC";
                                            //dtSP_CaseSP2 = dv.ToTable();

                                            foreach (CASESP2Entity dr in casesp2Data)
                                            {
                                                CAFirst = true;
                                                CaDate = null;
                                                Branch = dr.Branch.ToString().Trim();
                                                if (Service_Plan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                                {
                                                    Service_desc = SP0_data.BpDesc.Trim();
                                                    if (!First)
                                                    {
                                                        if (Branch.Trim() == SP0_data.B1Code.Trim())
                                                            Service_desc = SP0_data.B1Desc.Trim();
                                                        else if (Branch.Trim() == SP0_data.B2Code.Trim())
                                                            Service_desc = SP0_data.B2Desc.Trim();
                                                        else if (Branch.Trim() == SP0_data.B3Code.Trim())
                                                            Service_desc = SP0_data.B3Desc.Trim();
                                                        else if (Branch.Trim() == SP0_data.B4Code.Trim())
                                                            Service_desc = SP0_data.B4Desc.Trim();
                                                        else if (Branch.Trim() == SP0_data.B5Code.Trim())
                                                            Service_desc = SP0_data.B5Desc.Trim();
                                                    }

                                                    excelrowSpace = sheet.Table.Rows.Add();
                                                    cell = excelrowSpace.Cells.Add("", DataType.String, "NormalLeft");
                                                    cell.MergeAcross = 7;

                                                    excelrowSpace1 = sheet.Table.Rows.Add();
                                                    cell = excelrowSpace1.Cells.Add("", DataType.String, "NormalLeft");
                                                    cell.MergeAcross = 7;

                                                    excelrow1 = sheet.Table.Rows.Add();
                                                    cell = excelrow1.Cells.Add("Service: " + SP_Desc.Trim(), DataType.String, "Normal");
                                                    cell.MergeAcross = 7;

                                                    excelrow2 = sheet.Table.Rows.Add();
                                                    cell = excelrow2.Cells.Add("Branch: " + Service_desc.Trim(), DataType.String, "Normal");
                                                    cell.MergeAcross = 7;

                                                    excelrow3 = sheet.Table.Rows.Add();
                                                    cell = excelrow3.Cells.Add("App No", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Applicant Name", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Date", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Case Worker", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Site", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Amount", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Enroll Program", DataType.String, "NormalBold");
                                                    cell = excelrow3.Cells.Add("Enroll Dates", DataType.String, "NormalBold");

                                                    Priv_Branch = Branch;
                                                    First = false;
                                                }
                                                string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
                                                if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
                                                string Grp = dr.Orig_Grp.ToString().Trim();
                                                string Search_Caseworker = string.Empty;
                                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                    Search_Caseworker = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                    Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                else Search_Caseworker = "";

                                                string Search_Site = string.Empty;
                                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                    Search_Site = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                    Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                else Search_Site = "";

                                                List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                                if (CAMSType == "CA")
                                                {
                                                    if (N_Agy != null && N_Dept != null && N_prog != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                    else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                    else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                }
                                                else if (CAMSType == "MS")
                                                {
                                                    if (N_Agy != null && N_Dept != null && N_prog != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                    else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                    else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_GROUP.Equals(Grp) && u.CASEACT_BRANCH.Equals(Branch));
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                    }
                                                }
                                                if (RepEntity.Count > 0)
                                                {
                                                    if (dtpFrom.Checked && dtpTo.Checked)
                                                        RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                }

                                                if (RepEntity.Count > 0)
                                                {
                                                    if (CAMSType == "CA")
                                                    {
                                                        CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                        if (CaEntity != null)
                                                        {
                                                            CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                        }

                                                        //foreach (CAMASTEntity CaEntity in CAList)
                                                        //{
                                                        //    if (CaEntity.Code.Trim() == dr.CamCd.ToString().Trim())
                                                        //    {
                                                        //        CAMSDesc = "Critical Activity : " + CaEntity.Desc.Trim(); break;
                                                        //    }
                                                        //}
                                                    }
                                                    else
                                                    {
                                                        MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                        if (MSEntity != null)
                                                        {
                                                            CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                        }

                                                        //foreach (MSMASTEntity MSEntity in MSList)
                                                        //{
                                                        //    if (MSEntity.Code == dr.CamCd.ToString().Trim())
                                                        //    {
                                                        //        CAMSDesc = "Milestone : " + MSEntity.Desc.Trim();
                                                        //        break;
                                                        //    }
                                                        //}
                                                    }
                                                    if (dtpFrom.Checked.Equals(false))
                                                    {
                                                        excelrow4 = sheet.Table.Rows.Add();
                                                        cell = excelrow4.Cells.Add(CAMSDesc.Trim(), DataType.String, "Normalcenter");
                                                        cell.MergeAcross = 6;
                                                    }

                                                    foreach (Funnel_RepEntity drApp in RepEntity)
                                                    {
                                                        CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                        Note_Worker = string.Empty;
                                                        HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                        if (hiedata != null)
                                                        {
                                                            Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                        }

                                                        Note_site = string.Empty;
                                                        if (propCaseAllSiteEntity.Count > 0)
                                                        {
                                                            if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                            {
                                                                CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                                if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                                //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                                //if (Note_site == null) Note_site = string.Empty;
                                                            }
                                                        }
                                                        //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                        //{
                                                        //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                        //    {
                                                        //   Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                        //        break;
                                                        //    }
                                                        //}
                                                        DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                        string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                        string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                        if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                        {
                                                            if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                            {
                                                                for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                {
                                                                    Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                    //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                    //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                    Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                }
                                                            }
                                                            else
                                                            {
                                                                for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                {
                                                                    CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                    if (casehieName != null)
                                                                        Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                    //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                    //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                    Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                }
                                                            }
                                                            if (Enroll_Prog.Trim().Length > 0)
                                                                Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                            if (Enroll_Date.Trim().Length > 0)
                                                                Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                        }

                                                        if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                        {
                                                            if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))

                                                            {
                                                                if (CAFirst)
                                                                {
                                                                    excelrow5 = sheet.Table.Rows.Add();
                                                                    cell = excelrow5.Cells.Add(CAMSDesc.Trim(), DataType.String, "Normalcenter");
                                                                    cell.MergeAcross = 6;
                                                                    CAFirst = false;
                                                                }

                                                                excelrow6 = sheet.Table.Rows.Add();
                                                                cell = excelrow6.Cells.Add(drApp.SNP_APP.ToString().Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(drApp.App_Name.ToString().Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(CaDate.Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(Note_Worker.Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(Note_site.Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(drApp.Cost.Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(Enroll_Prog.Trim(), DataType.String, "NormalLeft");
                                                                cell = excelrow6.Cells.Add(Enroll_Date.Trim(), DataType.String, "NormalLeft");
                                                            }
                                                        }
                                                        else
                                                        {
                                                            excelrow6 = sheet.Table.Rows.Add();
                                                            cell = excelrow6.Cells.Add(drApp.SNP_APP.ToString().Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(drApp.App_Name.ToString().Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(CaDate.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(Note_Worker.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(Note_site.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(drApp.Cost.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(Enroll_Prog.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow6.Cells.Add(Enroll_Date.Trim(), DataType.String, "NormalLeft");
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        i++;
                                    }
                                }

                                if (Allow_Add_Branch == "Y")
                                {
                                    DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(N_Agy, N_Dept, N_prog, N_Year, drsp.Cells["SP_Code"].Value.ToString().Trim());
                                    DataTable dt = ds.Tables[0];

                                    if (dt.Rows.Count > 0)
                                    {
                                        excelrow7 = sheet.Table.Rows.Add();
                                        cell = excelrow7.Cells.Add("", DataType.String, "NormalLeft");
                                        cell.MergeAcross = 7;

                                        excelrow8 = sheet.Table.Rows.Add();
                                        cell = excelrow8.Cells.Add("", DataType.String, "NormalLeft");
                                        cell.MergeAcross = 7;

                                        excelrow9 = sheet.Table.Rows.Add();
                                        cell = excelrow9.Cells.Add("Service: " + SP_Desc.Trim(), DataType.String, "Normalcenter");
                                        cell.MergeAcross = 7;

                                        excelrow10 = sheet.Table.Rows.Add();
                                        cell = excelrow10.Cells.Add("Branch: " + Service_desc.Trim(), DataType.String, "Normalcenter");
                                        cell.MergeAcross = 7;

                                        excelrow11 = sheet.Table.Rows.Add();
                                        cell = excelrow11.Cells.Add("App No", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Applicant Name", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Date", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Case Worker", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Site", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Amount", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Enroll Program", DataType.String, "NormalBold");
                                        cell = excelrow11.Cells.Add("Enroll Dates", DataType.String, "NormalBold");

                                        foreach (DataRow dr in dt.Rows)
                                        {
                                            CAFirst = true;
                                            string CAMSType = dr["SPM2_TYPE"].ToString();
                                            string Search_Caseworker = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                Search_Caseworker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else Search_Caseworker = "";

                                            string Search_Site = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                Search_Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else Search_Site = "";

                                            List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                            if (CAMSType == "CA")
                                            {
                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                            }

                                            else if (CAMSType == "MS")
                                            {

                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                            }

                                            if (RepEntity.Count > 0)
                                            {
                                                if (dtpFrom.Checked && dtpTo.Checked)
                                                    RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                            }

                                            if (RepEntity.Count > 0)
                                            {
                                                if (CAMSType == "CA")
                                                {

                                                    CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                    if (CaEntity != null)
                                                    {
                                                        CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                    }

                                                    //foreach (CAMASTEntity CaEntity in CAList)
                                                    //{
                                                    //    if (CaEntity.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim())
                                                    //    {
                                                    //        CAMSDesc = "Critical Activity : " + CaEntity.Desc.Trim(); break;
                                                    //    }
                                                    //}
                                                }
                                                else
                                                {

                                                    MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                    if (MSEntity != null)
                                                    {
                                                        CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                    }

                                                    //foreach (MSMASTEntity MSEntity in MSList)
                                                    //{
                                                    //    if (MSEntity.Code == dr["SPM2_CAMS_CODE"].ToString().Trim())
                                                    //    {
                                                    //        CAMSDesc = "Milestone : " + MSEntity.Desc.Trim();
                                                    //        break;
                                                    //    }
                                                    //}
                                                }
                                                if (dtpFrom.Checked.Equals(false))
                                                {
                                                    excelrow12 = sheet.Table.Rows.Add();
                                                    cell = excelrow12.Cells.Add(CAMSDesc.Trim(), DataType.String, "Normalcenter");
                                                    cell.MergeAcross = 6;
                                                }
                                                //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                                //DataTable dtVerifier = dsVerifier.Tables[0];

                                                foreach (Funnel_RepEntity drApp in RepEntity)
                                                {
                                                    CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                    Note_Worker = string.Empty;
                                                    HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                    if (hiedata != null)
                                                    {
                                                        Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                    }

                                                    Note_site = string.Empty;
                                                    if (propCaseAllSiteEntity.Count > 0)
                                                    {
                                                        if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                        {
                                                            CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                            if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                            //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                            //if (Note_site == null) Note_site = string.Empty;
                                                        }
                                                    }
                                                    //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                    //{
                                                    //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                    //    {
                                                    //        Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                    //        break;
                                                    //    }
                                                    //}

                                                    DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                    string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                    string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                    if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                    {
                                                        if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        else
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                if (casehieName != null)
                                                                    Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        if (Enroll_Prog.Trim().Length > 0)
                                                            Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                        if (Enroll_Date.Trim().Length > 0)
                                                            Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                    }

                                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                    {
                                                        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                        {
                                                            if (CAFirst)
                                                            {
                                                                excelrow13 = sheet.Table.Rows.Add();
                                                                cell = excelrow13.Cells.Add(CAMSDesc.Trim(), DataType.String, "Normalcenter");
                                                                cell.MergeAcross = 6;
                                                                CAFirst = false;
                                                            }

                                                            excelrow14 = sheet.Table.Rows.Add();
                                                            cell = excelrow14.Cells.Add(drApp.SNP_APP.ToString().Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(drApp.App_Name.ToString().Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(CaDate.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(Note_Worker.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(Note_site.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(drApp.Cost.ToString().Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(Enroll_Prog.Trim(), DataType.String, "NormalLeft");
                                                            cell = excelrow14.Cells.Add(Enroll_Date.Trim(), DataType.String, "NormalLeft");
                                                        }
                                                    }
                                                    else
                                                    {
                                                        excelrow15 = sheet.Table.Rows.Add();
                                                        cell = excelrow15.Cells.Add(drApp.SNP_APP.ToString().Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(drApp.App_Name.ToString().Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(CaDate.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(Note_Worker.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(Note_site.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(drApp.Cost.ToString().Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(Enroll_Prog.Trim(), DataType.String, "NormalLeft");
                                                        cell = excelrow15.Cells.Add(Enroll_Date.Trim(), DataType.String, "NormalLeft");

                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    FileStream stream1 = new FileStream(PdfName, FileMode.Create);
                    book.Save(stream1);
                    stream1.Close();
                }
                catch { Exception ex; }

            }
        }
        #endregion*/


       /* private void On_SaveAPP_Excel(object sender, FormClosedEventArgs e)
        {
            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                string PdfName = "Pdf File";
                PdfName = form.GetFileName();
                //PdfName = strFolderPath + PdfName + "-Details";
                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName + "_AUDIT";
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
                }
                catch (Exception ex)
                {
                    AlertBox.Show("Error", MessageBoxIcon.Error);
                }

                try
                {
                    string Tmpstr = PdfName + ".xls";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = PdfName + newFileName.Substring(0, length) + ".xls";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    PdfName = Random_Filename;
                else
                    PdfName += ".xls";

                //FileStream fs = new FileStream(PdfName, FileMode.Create);

                //Document document = new Document(PageSize.A4, 25, 25, 30, 30);
                //PdfWriter writer = PdfWriter.GetInstance(document, fs);
                //document.Open();
                //BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1250, false);
                //BaseFont bf_Times = BaseFont.CreateFont(BaseFont.TIMES_BOLD, BaseFont.CP1250, false);
                //iTextSharp.text.Font fc = new iTextSharp.text.Font(bfTimes, 10, 2);
                //iTextSharp.text.Font fc1 = new iTextSharp.text.Font(bf_Times, 10, 2, BaseColor.BLUE);
                //iTextSharp.text.Font TableFont = new iTextSharp.text.Font(bfTimes, 9);
                //iTextSharp.text.Font TblFontBold = new iTextSharp.text.Font(bf_Times, 10);
                ExcelDocument xlWorkSheet = new ExcelDocument();

                xlWorkSheet.ColumnWidth(0, 0);
                xlWorkSheet.ColumnWidth(1, 120);
                xlWorkSheet.ColumnWidth(2, 350);
                xlWorkSheet.ColumnWidth(3, 150);
                xlWorkSheet.ColumnWidth(4, 200);
                xlWorkSheet.ColumnWidth(5, 200);
                xlWorkSheet.ColumnWidth(6, 250);
                xlWorkSheet.ColumnWidth(7, 250);
                //xlWorkSheet.ColumnWidth(7, 150);

                int excelcolumn = 0;

                //PdfPTable table = new PdfPTable(6);
                //table.TotalWidth = 550f;
                //table.WidthPercentage = 100;
                //table.LockedWidth = true;
                //float[] widths = new float[] { 18f, 55f, 18f, 50f, 50f, 23f };
                //table.SetWidths(widths);
                //table.HorizontalAlignment = Element.ALIGN_CENTER;

                //List<CAMASTEntity> CAList = propCAList; //_model.SPAdminData.Browse_CAMAST(null, null, null, null);
                //List<MSMASTEntity> MSList = propMSList; //_model.SPAdminData.Browse_MSMAST(null, null, null, null, null);

                string N_Agy = string.Empty, N_Dept = string.Empty, N_prog = string.Empty, N_Year = string.Empty;
                if (Agency == "**") N_Agy = null; else N_Agy = Agency;
                if (Depart == "**") N_Dept = null; else N_Dept = Depart;
                if (Program == "**") N_prog = null; else N_prog = Program;
                if (CmbYear.Visible == true)
                    N_Year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.Trim(); //else N_Year = null;



                string data = string.Empty; //DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                bool First = true;
                string Service_Plan = string.Empty, Branch_cd = string.Empty, SP_Desc = string.Empty, Priv_Branch = string.Empty;
                string CaDate = string.Empty, Branch = string.Empty, Service_desc = string.Empty, CAMSDesc = string.Empty;
                string F_Seq = string.Empty, Note_Worker = string.Empty, Note_site=string.Empty;

                foreach (DataGridViewRow drsp in gvSps.Rows)
                {
                    if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        Service_Plan = drsp.Cells["SP_Code"].Value.ToString().Trim(); bool CAFirst = true;
                        CASESP0Entity SP0_data = _model.SPAdminData.Browse_CASESP0(Service_Plan, null, null, null, null, null, null, null, null);
                        if (!string.IsNullOrEmpty(SP0_data.BpCode.Trim())) Branch_cd = SP0_data.BpCode.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B1Code.Trim())) Branch_cd += SP0_data.B1Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B2Code.Trim())) Branch_cd += SP0_data.B2Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B3Code.Trim())) Branch_cd += SP0_data.B3Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B4Code.Trim())) Branch_cd += SP0_data.B4Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B5Code.Trim())) Branch_cd += SP0_data.B5Code.Trim();

                        SP_Desc = SP0_data.Desc.Trim();
                        string Allow_Add_Branch = SP0_data.Allow_Add_Branch.Trim();

                        List<Funnel_RepEntity> dsCount = new List<Funnel_RepEntity>(); List<Funnel_RepEntity> dsMSCount = new List<Funnel_RepEntity>();

                        if (N_Agy != null && N_Dept != null && N_prog != null)
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                        }
                        else if (N_Agy != null && N_Dept != null && N_prog == null)
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                        }
                        else if (N_Agy != null && N_Dept == null && N_prog == null)
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                        }
                        else
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                        }
                        if (dsMSCount.Count > 0 || dsCount.Count > 0)
                        {
                            if (Branch_cd.Length > 0)
                            {
                                for (int i = 0; i < Branch_cd.Length; )
                                {
                                    string Temp_Branch = Branch_cd.Substring(i, 1);
                                    List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == Service_Plan.Trim()).OrderByDescending(u => u.Branch).ToList();
                                    //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(Service_Plan, Temp_Branch, null, null);
                                    //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];

                                    Priv_Branch = null;
                                    if (casesp2Data.Count > 0)
                                    {
                                        //DataView dv = dtSP_CaseSP2.DefaultView;
                                        //dv.Sort = "sp2_branch DESC";
                                        //dtSP_CaseSP2 = dv.ToTable();

                                        foreach (CASESP2Entity dr in casesp2Data)
                                        {
                                            CAFirst = true;
                                            CaDate = null;
                                            Branch = dr.Branch.ToString().Trim();
                                            if (Service_Plan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                            {
                                                Service_desc = SP0_data.BpDesc.Trim();
                                                if (!First)
                                                {
                                                    if (Branch.Trim() == SP0_data.B1Code.Trim())
                                                        Service_desc = SP0_data.B1Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B2Code.Trim())
                                                        Service_desc = SP0_data.B2Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B3Code.Trim())
                                                        Service_desc = SP0_data.B3Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B4Code.Trim())
                                                        Service_desc = SP0_data.B4Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B5Code.Trim())
                                                        Service_desc = SP0_data.B5Desc.Trim();
                                                }

                                                excelcolumn = excelcolumn + 2;

                                                xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                                xlWorkSheet.WriteCell(excelcolumn, 2, "Service: " + SP_Desc.Trim());

                                                excelcolumn = excelcolumn + 1;

                                                xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                                xlWorkSheet.WriteCell(excelcolumn, 2, "Branch: " + Service_desc.Trim());

                                                excelcolumn = excelcolumn + 1;
                                                string[] Header = { "App No", "Applicant Name", "Date", "Case Worker","Site", "Enroll Program", "Enroll Dates" };
                                                for (int j = 0; j < Header.Length; ++j)
                                                {
                                                    xlWorkSheet[excelcolumn, (j + 1)].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                    xlWorkSheet[excelcolumn, (j + 1)].BackColor = ExcelColor.Yellow; //new ExcelColor("#0B4775"); //"#0B4775";
                                                    xlWorkSheet[excelcolumn, (j + 1)].Alignment = Alignment.Centered;
                                                    xlWorkSheet.WriteCell(excelcolumn, (j + 1), Header[j]);
                                                }


                                                //PdfPCell Headercell1 = new PdfPCell(new Phrase("App No", TblFontBold));
                                                //Headercell1.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //Headercell1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //Headercell1.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                //table.AddCell(Headercell1);

                                                //PdfPCell Headercell2 = new PdfPCell(new Phrase("Applicant Name", TblFontBold));
                                                //Headercell2.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //Headercell2.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //Headercell2.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                //table.AddCell(Headercell2);

                                                //PdfPCell Headercell3 = new PdfPCell(new Phrase("Date", TblFontBold));
                                                //Headercell3.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //Headercell3.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //Headercell3.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                //table.AddCell(Headercell3);

                                                //PdfPCell Headercell4 = new PdfPCell(new Phrase("Case Worker", TblFontBold));
                                                //Headercell4.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //Headercell4.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //Headercell4.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                //table.AddCell(Headercell4);

                                                //PdfPCell enrl4 = new PdfPCell(new Phrase("Enroll Program", TblFontBold));
                                                //enrl4.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //enrl4.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrl4.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                //table.AddCell(enrl4);

                                                //PdfPCell enrld = new PdfPCell(new Phrase("Enroll Dates", TblFontBold));
                                                //enrld.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                //table.AddCell(enrld);

                                                Priv_Branch = Branch;
                                                First = false;
                                            }
                                            string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
                                            if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
                                            string Grp = dr.Orig_Grp.ToString().Trim();
                                            string Search_Caseworker = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                Search_Caseworker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else Search_Caseworker = "";

                                            string Search_Site = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                Search_Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else Search_Site = "";

                                            List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                            if (CAMSType == "CA")
                                            {
                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                            }
                                            else if (CAMSType == "MS")
                                            {

                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_GROUP.Equals(Grp) && u.CASEACT_BRANCH.Equals(Branch));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }

                                            }

                                            if(RepEntity.Count>0)
                                            {
                                                if (dtpFrom.Checked && dtpTo.Checked)
                                                    RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                            }


                                            if (RepEntity.Count > 0)
                                            {
                                                if (CAMSType == "CA")
                                                {
                                                    CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                    if (CaEntity != null)
                                                    {
                                                        CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                    }

                                                    //foreach (CAMASTEntity CaEntity in CAList)
                                                    //{
                                                    //    if (CaEntity.Code.Trim() == dr.CamCd.ToString().Trim())
                                                    //    {
                                                    //        CAMSDesc = "Critical Activity : " + CaEntity.Desc.Trim(); break;
                                                    //    }
                                                    //}
                                                }
                                                else
                                                {
                                                    MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                    if (MSEntity != null)
                                                    {
                                                        CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                    }

                                                    //foreach (MSMASTEntity MSEntity in MSList)
                                                    //{
                                                    //    if (MSEntity.Code == dr.CamCd.ToString().Trim())
                                                    //    {
                                                    //        CAMSDesc = "Milestone : " + MSEntity.Desc.Trim();
                                                    //        break;
                                                    //    }
                                                    //}
                                                }
                                                if (dtpFrom.Checked.Equals(false))
                                                {
                                                    excelcolumn = excelcolumn + 1;
                                                    xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                    xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                                    xlWorkSheet[excelcolumn, 2].BackColor = new ExcelColor(Color.AliceBlue, 5);
                                                    xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
                                                    //PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), fc1));
                                                    //CAMS.HorizontalAlignment = Element.ALIGN_CENTER;
                                                    //CAMS.Colspan = 6;
                                                    //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                    //table.AddCell(CAMS);
                                                }
                                                //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                                //DataTable dtVerifier = dsVerifier.Tables[0];

                                                foreach (Funnel_RepEntity drApp in RepEntity)
                                                {
                                                    CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                    Note_Worker = string.Empty; 
                                                    HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                    if (hiedata != null)
                                                    {
                                                        Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                    }

                                                    Note_site = string.Empty;
                                                    if (propCaseAllSiteEntity.Count>0)
                                                    {
                                                        if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                        {
                                                            CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                            if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                            //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                            //if (Note_site == null) Note_site = string.Empty;
                                                        }
                                                    }
                                                    //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                    //{
                                                    //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                    //    {
                                                    //   Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                    //        break;
                                                    //    }
                                                    //}
                                                    DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                    string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                    string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                    if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                    {
                                                        if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        else
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                if (casehieName != null)
                                                                    Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        if (Enroll_Prog.Trim().Length > 0)
                                                            Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                        if (Enroll_Date.Trim().Length > 0)
                                                            Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                    }

                                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                    {
                                                        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                        {

                                                            if (CAFirst)
                                                            {
                                                                excelcolumn = excelcolumn + 1;
                                                                xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                                xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                                                xlWorkSheet[excelcolumn, 1].BackColor = new ExcelColor(Color.AliceBlue, 0);
                                                                xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
                                                                //PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), fc1));
                                                                //CAMS.HorizontalAlignment = Element.ALIGN_CENTER;
                                                                //CAMS.Colspan = 6;
                                                                //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                                //table.AddCell(CAMS);
                                                                CAFirst = false;
                                                            }

                                                            excelcolumn = excelcolumn + 1;
                                                            xlWorkSheet.WriteCell(excelcolumn, 1, drApp.SNP_APP.ToString().Trim());
                                                            xlWorkSheet.WriteCell(excelcolumn, 2, drApp.App_Name.ToString().Trim());
                                                            xlWorkSheet.WriteCell(excelcolumn, 3, CaDate.Trim());
                                                            xlWorkSheet.WriteCell(excelcolumn, 4, Note_Worker.Trim());
                                                            xlWorkSheet.WriteCell(excelcolumn, 5, Note_site.Trim());
                                                            xlWorkSheet.WriteCell(excelcolumn, 6, Enroll_Prog.Trim());
                                                            xlWorkSheet.WriteCell(excelcolumn, 7, Enroll_Date.Trim());
                                                        }
                                                    }
                                                    else
                                                    {
                                                        excelcolumn = excelcolumn + 1;
                                                        xlWorkSheet.WriteCell(excelcolumn, 1, drApp.SNP_APP.ToString().Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 2, drApp.App_Name.ToString().Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 3, CaDate.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 4, Note_Worker.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 5, Note_site.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 6, Enroll_Prog.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 7, Enroll_Date.Trim());

                                                        
                                                    }

                                                }
                                            }
                                        }
                                    }
                                    i++;
                                }
                            }

                            if (Allow_Add_Branch == "Y")
                            {
                                DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(N_Agy, N_Dept, N_prog, N_Year, drsp.Cells["SP_Code"].Value.ToString().Trim());
                                DataTable dt = ds.Tables[0];

                                if (dt.Rows.Count > 0)
                                {

                                    excelcolumn = excelcolumn + 2;

                                    xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                    xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                    xlWorkSheet.WriteCell(excelcolumn, 2, "Service: " + SP_Desc.Trim());

                                    excelcolumn = excelcolumn + 1;

                                    xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                    xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                    xlWorkSheet.WriteCell(excelcolumn, 2, "Branch: " + Service_desc.Trim());

                                    excelcolumn = excelcolumn + 1;
                                    string[] Header = { "App No", "Applicant Name", "Date", "Case Worker", "Site", "Enroll Program", "Enroll Dates" };
                                    for (int j = 0; j < Header.Length; ++j)
                                    {
                                        xlWorkSheet[excelcolumn, (j + 1)].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                        xlWorkSheet[excelcolumn, (j + 1)].Alignment = Alignment.Left;
                                        xlWorkSheet.WriteCell(excelcolumn, (j + 1), Header[j]);
                                    }

                                    
                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        CAFirst = true;
                                        string CAMSType = dr["SPM2_TYPE"].ToString();
                                        string Search_Caseworker = string.Empty;
                                        if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                            Search_Caseworker = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                            Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                        else Search_Caseworker = "";

                                        string Search_Site = string.Empty;
                                        if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                            Search_Site = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                            Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                        else Search_Site = "";

                                        List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                        if (CAMSType == "CA")
                                        {
                                            if (N_Agy != null && N_Dept != null && N_prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept != null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept == null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                        }
                                        else if (CAMSType == "MS")
                                        {

                                            if (N_Agy != null && N_Dept != null && N_prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept != null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept == null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                        }

                                        if (RepEntity.Count > 0)
                                        {
                                            if (dtpFrom.Checked && dtpTo.Checked)
                                                RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                        }


                                        if (RepEntity.Count > 0)
                                        {
                                            if (CAMSType == "CA")
                                            {

                                                CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                if (CaEntity != null)
                                                {
                                                    CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                }

                                                //foreach (CAMASTEntity CaEntity in CAList)
                                                //{
                                                //    if (CaEntity.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim())
                                                //    {
                                                //        CAMSDesc = "Critical Activity : " + CaEntity.Desc.Trim(); break;
                                                //    }
                                                //}
                                            }
                                            else
                                            {

                                                MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                if (MSEntity != null)
                                                {
                                                    CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                }

                                                //foreach (MSMASTEntity MSEntity in MSList)
                                                //{
                                                //    if (MSEntity.Code == dr["SPM2_CAMS_CODE"].ToString().Trim())
                                                //    {
                                                //        CAMSDesc = "Milestone : " + MSEntity.Desc.Trim();
                                                //        break;
                                                //    }
                                                //}
                                            }
                                            if (dtpFrom.Checked.Equals(false))
                                            {
                                                excelcolumn = excelcolumn + 1;
                                                xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                                xlWorkSheet[excelcolumn, 1].BackColor = new ExcelColor(Color.AliceBlue, 0);
                                                xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
                                                //PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), fc1));
                                                //CAMS.HorizontalAlignment = Element.ALIGN_CENTER;
                                                //CAMS.Colspan = 6;
                                                //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                //table.AddCell(CAMS);
                                            }
                                            //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                            //DataTable dtVerifier = dsVerifier.Tables[0];

                                            foreach (Funnel_RepEntity drApp in RepEntity)
                                            {
                                                CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                Note_Worker = string.Empty;
                                                HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                if (hiedata != null)
                                                {
                                                    Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                }

                                                Note_site = string.Empty;
                                                if (propCaseAllSiteEntity.Count > 0)
                                                {
                                                    if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                    {
                                                        CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                        if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                        //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                        //if (Note_site == null) Note_site = string.Empty;
                                                    }
                                                }
                                                //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                //{
                                                //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                //    {
                                                //        Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                //        break;
                                                //    }
                                                //}

                                                DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                {
                                                    if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                    {
                                                        for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                        {
                                                            Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                            //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                            //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                            Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                        {
                                                            CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                            if (casehieName != null)
                                                                Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                            //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                            //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                            Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                        }
                                                    }
                                                    if (Enroll_Prog.Trim().Length > 0)
                                                        Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                    if (Enroll_Date.Trim().Length > 0)
                                                        Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                }

                                                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                {
                                                    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                    {
                                                        if (CAFirst)
                                                        {
                                                            excelcolumn = excelcolumn + 1;
                                                            xlWorkSheet[excelcolumn, 1].Font = new System.Drawing.Font("Calibri", 10, System.Drawing.FontStyle.Bold);
                                                            xlWorkSheet[excelcolumn, 1].Alignment = Alignment.Centered;
                                                            xlWorkSheet[excelcolumn, 1].BackColor = new ExcelColor(Color.AliceBlue, 0);
                                                            xlWorkSheet.WriteCell(excelcolumn, 2, CAMSDesc.Trim());
                                                            //PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), fc1));
                                                            //CAMS.HorizontalAlignment = Element.ALIGN_CENTER;
                                                            //CAMS.Colspan = 6;
                                                            //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                            //table.AddCell(CAMS);
                                                            CAFirst = false;
                                                        }

                                                        excelcolumn = excelcolumn + 1;
                                                        xlWorkSheet.WriteCell(excelcolumn, 1, drApp.SNP_APP.ToString().Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 2, drApp.App_Name.ToString().Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 3, CaDate.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 4, Note_Worker.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 5, Note_site.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 6, Enroll_Prog.Trim());
                                                        xlWorkSheet.WriteCell(excelcolumn, 7, Enroll_Date.Trim());

                                         
                                                    }
                                                }
                                                else
                                                {
                                                    excelcolumn = excelcolumn + 1;
                                                    xlWorkSheet.WriteCell(excelcolumn, 1, drApp.SNP_APP.ToString().Trim());
                                                    xlWorkSheet.WriteCell(excelcolumn, 2, drApp.App_Name.ToString().Trim());
                                                    xlWorkSheet.WriteCell(excelcolumn, 3, CaDate.Trim());
                                                    xlWorkSheet.WriteCell(excelcolumn, 4, Note_Worker.Trim());
                                                    xlWorkSheet.WriteCell(excelcolumn, 5, Note_site.Trim());
                                                    xlWorkSheet.WriteCell(excelcolumn, 6, Enroll_Prog.Trim());
                                                    xlWorkSheet.WriteCell(excelcolumn, 7, Enroll_Date.Trim());
                                         
                                                }

                                            }
                                        }

                                    }
                                }




                            }


                        }
                    }
                }
                FileStream stream = new FileStream(PdfName, FileMode.Create);

                xlWorkSheet.Save(stream);
                stream.Close();
            }
        }
        */

        //private void On_NotePadForm_Closed(object sender, FormClosedEventArgs e)
        //{
        //    PdfListForm form = sender as PdfListForm;
        //    if (form.DialogResult == DialogResult.OK)
        //    {
        //        string PdfName = "Pdf File";
        //        PdfName = form.GetFileName();
        //        //PdfName = strFolderPath + PdfName;
        //        PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName;
        //        try
        //        {
        //            if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
        //            { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
        //        }
        //        catch (Exception ex)
        //        {
        //            CommonFunctions.MessageBoxDisplay("Error");
        //        }

        //        try
        //        {
        //            string Tmpstr = PdfName + ".txt";
        //            if (File.Exists(Tmpstr))
        //                File.Delete(Tmpstr);
        //        }
        //        catch (Exception ex)
        //        {
        //            int length = 8;
        //            string newFileName = System.Guid.NewGuid().ToString();
        //            newFileName = newFileName.Replace("-", string.Empty);

        //            Random_Filename = PdfName + newFileName.Substring(0, length) + ".txt";
        //        }

        //        if (!string.IsNullOrEmpty(Random_Filename))
        //            PdfName = Random_Filename;
        //        else
        //            PdfName += ".txt";

        //        FileStream fs = null;

        //        string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty,SP_Year=string.Empty;
        //        if (Agency == "**") SP_Agy = null; else SP_Agy = Agency;
        //        if (Depart == "**") SP_Dept = null; else SP_Dept = Depart;
        //        if (Program == "**") SP_Prog = null; else SP_Prog = Program;
        //        if (CmbYear.Visible == true)
        //            Search_CaseSPM_Entity.year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();
        //        Search_CaseSPM_Entity.agency = SP_Agy; Search_CaseSPM_Entity.dept = SP_Dept; Search_CaseSPM_Entity.program = SP_Prog;
        //        Search_CaseSPM_Entity.app_no = null; Search_Entity.Def_Program = Search_Entity.Bulk_Post = null;
        //        CaseSPM_List = _model.SPAdminData.Browse_CASESPM(Search_CaseSPM_Entity, "Browse");
        //       // DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
        //        string CAMSDesc = null; string CaDate = null;
        //        string SerVicePlan = null, Priv_ServicePlan = null; string SP_Desc = null;
        //        bool First = true; string Branch = null, Priv_Branch = null;


        //        if (!File.Exists(PdfName))
        //        {
        //            using (fs = File.Create(PdfName))
        //            {

        //            }
        //            string data = string.Empty;
        //            using (StreamWriter sw = new StreamWriter(PdfName))
        //            {
        //                if (CaseSPM_List.Count > 0)
        //                {
        //                    data = "Service Plan    |Critical Activity/MileStone |App#    |Applicant Name  |Date    |Case Worker |Enroll Programs |Date";
        //                    sw.WriteLine(data);

        //                    foreach(DataGridViewRow drsp in gvSps.Rows)//for (int k = 0; k < cmbSerPlan.Items.Count; k++)
        //                    {
        //                        if(drsp.Cells["Selected"].Value.ToString().Trim()=="Y")
        //                        {
        //                            SerVicePlan = drsp.Cells["SP_Code"].Value.ToString().Trim();//((Captain.Common.Utilities.ListItem)cmbSerPlan.Items[k]).Value.ToString().Trim();
        //                            foreach (CASESPMEntity SPMEntity in CaseSPM_List)
        //                            {

        //                                if (SerVicePlan != Priv_ServicePlan && SerVicePlan == SPMEntity.service_plan)
        //                                {
        //                                    SerVicePlan = SPMEntity.service_plan.ToString().Trim();
        //                                    string Branch_SPM = SPMEntity.sel_branches.ToString().Trim();
        //                                    int length = SPMEntity.sel_branches.Length;
        //                                    DataSet dsSP_Services = DatabaseLayer.SPAdminDB.Browse_CASESP0(SerVicePlan, null, null, null, null, null, null, null, null);
        //                                    DataRow drSP_Services = dsSP_Services.Tables[0].Rows[0];
        //                                    string Service_desc = string.Empty;
        //                                    for (int i = 0; i < length; )
        //                                    {
        //                                        string Temp_Branch = SPMEntity.sel_branches.Substring(i, 1);
        //                                        List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == SerVicePlan.Trim()).OrderByDescending(u => u.Branch).ToList();
        //                                        dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(SerVicePlan, Temp_Branch, null, null);
        //                                        dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];
        //                                        SP_Desc = drSP_Services["sp0_description"].ToString().Trim();
        //                                        Priv_Branch = null;

        //                                        if (dtSP_CaseSP2.Rows.Count > 0)
        //                                        {
        //                                            DataView dv = dtSP_CaseSP2.DefaultView;
        //                                            dv.Sort = "sp2_branch DESC";
        //                                            dtSP_CaseSP2 = dv.ToTable();
        //                                            foreach (DataRow dr in dtSP_CaseSP2.Rows)
        //                                            {
        //                                                CaDate = null; 
        //                                                Branch = dr.Branch.ToString().Trim();
        //                                                if (SerVicePlan == dr.ServPlan.ToString() && Branch != Priv_Branch)
        //                                                {
        //                                                    Service_desc = drSP_Services["sp0_pbranch_desc"].ToString();
        //                                                    if (!First)
        //                                                    {
        //                                                        if (Branch.Trim() == drSP_Services["sp0_branch1_code"].ToString().Trim())
        //                                                            Service_desc = drSP_Services["sp0_branch1_desc"].ToString();
        //                                                        else if (Branch.Trim() == drSP_Services["sp0_branch2_code"].ToString().Trim())
        //                                                            Service_desc = drSP_Services["sp0_branch2_desc"].ToString();
        //                                                        else if (Branch.Trim() == drSP_Services["sp0_branch3_code"].ToString().Trim())
        //                                                            Service_desc = drSP_Services["sp0_branch3_desc"].ToString();
        //                                                        else if (Branch.Trim() == drSP_Services["sp0_branch4_code"].ToString().Trim())
        //                                                            Service_desc = drSP_Services["sp0_branch4_desc"].ToString();
        //                                                        else if (Branch.Trim() == drSP_Services["sp0_branch5_code"].ToString().Trim())
        //                                                            Service_desc = drSP_Services["sp0_branch5_desc"].ToString();
        //                                                    }
        //                                                    Priv_Branch = Branch;
        //                                                    First = false;

        //                                                }

        //                                                string CAMSType = dr["sp2_type"].ToString();

        //                                                if (CAMSType == "CA")
        //                                                {
        //                                                    DataSet dsCAMAST = DatabaseLayer.SPAdminDB.Browse_CAMAST(null, dr.CamCd.ToString().Trim(), null, null);
        //                                                    if (dsCAMAST.Tables[0].Rows.Count > 0)
        //                                                    {
        //                                                        DataRow drCAMAST = dsCAMAST.Tables[0].Rows[0];

        //                                                        CAMSDesc = drCAMAST["CA_DESC"].ToString();

        //                                                        CA_Entity.Agency = SPMEntity.agency;
        //                                                        CA_Entity.Dept = SPMEntity.dept;
        //                                                        CA_Entity.Program = SPMEntity.program;
        //                                                        //CA_Pass_Entity.Year = Year;                        
        //                                                        CA_Entity.Year = null;                             // Year will be always Four-Spaces in CASEACT
        //                                                        CA_Entity.App_no = null;
        //                                                        CA_Entity.ACT_Code = dr.CamCd.ToString().Trim();
        //                                                        CA_Entity.Service_plan = SPMEntity.service_plan; ;
        //                                                        CA_Entity.Branch = Branch.Trim(); CA_Entity.Group = dr["sp2_orig_grp"].ToString().Trim();
        //                                                        if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
        //                                                            CA_Entity.Caseworker = null;
        //                                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
        //                                                            CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
        //                                                        else CA_Entity.Caseworker = null; CA_Entity.Bulk = CA_Entity.Act_PROG = CA_Entity.Units = CA_Entity.UOM = CA_Entity.Curr_Grp = null;

        //                                                        CaseAct_Details = _model.SPAdminData.Browse_CASEACT(CA_Entity, "Browse");
        //                                                        if (CaseAct_Details.Count > 0)
        //                                                        {
        //                                                            foreach (CASEACTEntity entity in CaseAct_Details)
        //                                                            {
        //                                                                string NSR_Plan = string.Empty; string NCA_MS = string.Empty; string NApp_No = string.Empty, NApp_Name = string.Empty;
        //                                                                string N_CAMS_Date = string.Empty; string N_Worker = string.Empty; string N_ENR_PROG = string.Empty;
        //                                                                string ENRL_Date = string.Empty;
        //                                                                string Note_Name = string.Empty; string F_Serq = string.Empty;
        //                                                                List<CaseMstEntity> MSTEntity = _model.CaseMstData.GetCaseMstadpyn(entity.Agency, entity.Dept, entity.Program, entity.Year, entity.App_no);
        //                                                                if (MSTEntity.Count > 0)
        //                                                                    F_Serq = MSTEntity[0].FamilySeq;
        //                                                                List<CaseSnpEntity> SNP_Entity = _model.CaseMstData.GetCaseSnpadpyn(entity.Agency, entity.Dept, entity.Program, entity.Year, entity.App_no);
        //                                                                if (SNP_Entity.Count > 0)
        //                                                                {
        //                                                                    foreach (CaseSnpEntity SNP_Rec in SNP_Entity)
        //                                                                    {
        //                                                                        if (SNP_Rec.FamilySeq == MSTEntity[0].FamilySeq)
        //                                                                        {
        //                                                                            Note_Name = SNP_Rec.NameixLast + " " + SNP_Rec.NameixFi;
        //                                                                            break;
        //                                                                        }
        //                                                                    }
        //                                                                }

        //                                                                DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", entity.Agency, entity.Dept, entity.Program);
        //                                                                DataTable dtVerifier = dsVerifier.Tables[0];

        //                                                                foreach (DataRow drVerifier in dtVerifier.Rows)
        //                                                                {
        //                                                                    if (entity.Caseworker == drVerifier["PWH_CASEWORKER"].ToString().Trim())
        //                                                                    {
        //                                                                        N_Worker = drVerifier["NAME"].ToString().Trim();
        //                                                                        break;
        //                                                                    }
        //                                                                }

        //                                                                CaDate = LookupDataAccess.Getdate(entity.ACT_Date).ToString().Trim();
        //                                                                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
        //                                                                {
        //                                                                    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((entity.ACT_Date))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((entity.ACT_Date))))
        //                                                                    {

        //                                                                        data = Service_desc.Trim()+ "|" +CAMSDesc.Trim() + "|"+ entity.App_no.Trim()+"|"+ Note_Name.Trim()+ "  |"+ CaDate.Trim()+"|"+N_Worker.Trim()+" |"+ "Enroll Programs |Date";
        //                                                                        //String.Format("{0,-10}", dr["CA_CODE"].ToString().Trim()) + String.Format("{0,8}", " - " + dr["CA_DESC"].ToString());
        //                                                                        sw.WriteLine(data);
        //                                                                    }
        //                                                                }
        //                                                                else
        //                                                                {
        //                                                                    data = Service_desc.Trim() + "|" + CAMSDesc.Trim() + "|" + entity.App_no.Trim() + "|" + Note_Name.Trim() + "  |" + CaDate.Trim() + "|" + N_Worker.Trim() + " |" + "Enroll Programs |Date";
        //                                                                    sw.WriteLine(data);
        //                                                                }

        //                                                            }

        //                                                        }

        //                                                    }
        //                                                }
        //                                                else
        //                                                {
        //                                                    DataSet MSMast = DatabaseLayer.SPAdminDB.Browse_MSMAST(null, dr.CamCd.ToString().Trim(), null, null, null);
        //                                                    if (MSMast.Tables[0].Rows.Count > 0)
        //                                                    {
        //                                                        DataRow drMSMast = MSMast.Tables[0].Rows[0];

        //                                                        CAMSDesc = drMSMast["MS_DESC"].ToString();
        //                                                        string MSType = drMSMast["MS_TYPE"].ToString();
        //                                                        string Type_Desc = string.Empty;
        //                                                        if (MSType == "M")
        //                                                            Type_Desc = "Milestone";
        //                                                        else Type_Desc = "Outcome";

        //                                                        Search_MS_Details.Agency = SPMEntity.agency;
        //                                                        Search_MS_Details.Dept = SPMEntity.dept;
        //                                                        Search_MS_Details.Program = SPMEntity.program;
        //                                                        //Search_MS_Details.Year = Year; 
        //                                                        Search_MS_Details.Year = null;                              // Year will be always Four-Spaces in CASEMS
        //                                                        Search_MS_Details.App_no = null;
        //                                                        Search_MS_Details.MS_Code = dr.CamCd.ToString().Trim();
        //                                                        Search_MS_Details.Service_plan = SPMEntity.service_plan;
        //                                                        Search_MS_Details.Branch = Branch.Trim(); Search_MS_Details.Group = dr["sp2_orig_grp"].ToString().Trim();
        //                                                        if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
        //                                                            Search_MS_Details.CaseWorker = null;
        //                                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
        //                                                            Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
        //                                                        else Search_MS_Details.CaseWorker = null;
        //                                                        Search_MS_Details.Bulk = Search_MS_Details.Acty_PROG = Search_MS_Details.Curr_Grp = null;

        //                                                        CaseMS_Details = _model.SPAdminData.Browse_CASEMS(Search_MS_Details, "Browse");
        //                                                        if (CaseMS_Details.Count > 0)
        //                                                        {

        //                                                            foreach (CASEMSEntity entity in CaseMS_Details)
        //                                                            {
        //                                                                CaDate = LookupDataAccess.Getdate(entity.Date);
        //                                                                string NSR_Plan = string.Empty; string NCA_MS = string.Empty; string NApp_No = string.Empty, NApp_Name = string.Empty;
        //                                                                string N_CAMS_Date = string.Empty; string N_Worker = string.Empty; string N_ENR_PROG = string.Empty;
        //                                                                string ENRL_Date = string.Empty;
        //                                                                string Note_Name = string.Empty; string F_Serq = string.Empty;
        //                                                                List<CaseMstEntity> MSTEntity = _model.CaseMstData.GetCaseMstadpyn(entity.Agency, entity.Dept, entity.Program, entity.Year, entity.App_no);
        //                                                                if (MSTEntity.Count > 0)
        //                                                                    F_Serq = MSTEntity[0].FamilySeq;
        //                                                                List<CaseSnpEntity> SNP_Entity = _model.CaseMstData.GetCaseSnpadpyn(entity.Agency, entity.Dept, entity.Program, entity.Year, entity.App_no);
        //                                                                if (SNP_Entity.Count > 0)
        //                                                                {
        //                                                                    foreach (CaseSnpEntity SNP_Rec in SNP_Entity)
        //                                                                    {
        //                                                                        if (SNP_Rec.FamilySeq == MSTEntity[0].FamilySeq)
        //                                                                        {
        //                                                                            Note_Name = SNP_Rec.NameixLast + " " + SNP_Rec.NameixFi;
        //                                                                            break;
        //                                                                        }
        //                                                                    }
        //                                                                }

        //                                                                DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", entity.Agency, entity.Dept, entity.Program);
        //                                                                DataTable dtVerifier = dsVerifier.Tables[0];

        //                                                                foreach (DataRow drVerifier in dtVerifier.Rows)
        //                                                                {
        //                                                                    if (entity.CaseWorker == drVerifier["PWH_CASEWORKER"].ToString().Trim())
        //                                                                    {
        //                                                                        N_Worker = drVerifier["NAME"].ToString().Trim();
        //                                                                        break;
        //                                                                    }
        //                                                                }

        //                                                                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
        //                                                                {
        //                                                                    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((entity.Date))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((entity.Date))))
        //                                                                    {

        //                                                                        data = Service_desc.Trim()+ "|" +CAMSDesc.Trim() + "|"+ entity.App_no.Trim()+"|"+ Note_Name.Trim()+ "  |"+ CaDate.Trim()+"|"+N_Worker.Trim()+" |"+ "Enroll Programs |Date";
        //                                                                        //String.Format("{0,-10}", dr["CA_CODE"].ToString().Trim()) + String.Format("{0,8}", " - " + dr["CA_DESC"].ToString());
        //                                                                        sw.WriteLine(data);
        //                                                                    }
        //                                                                }
        //                                                                else
        //                                                                {
        //                                                                    data = Service_desc.Trim() + "|" + CAMSDesc.Trim() + "|" + entity.App_no.Trim() + "|" + Note_Name.Trim() + "  |" + CaDate.Trim() + "|" + N_Worker.Trim() + " |" + "Enroll Programs |Date";
        //                                                                    sw.WriteLine(data);
        //                                                                }

        //                                                            }

        //                                                            }
        //                                                    }
        //                                                }

        //                                            }
        //                                        }
        //                                        else
        //                                        {
        //                                            First = false;
        //                                        }
        //                                        i++;
        //                                    }
        //                                    Priv_ServicePlan = SerVicePlan;
        //                                }
        //                            }
        //                        }
        //                    }

        //                }
        //            }

        //        }

        //    }
        //}


        private void On_NotePadForm1_Closed(object sender, FormClosedEventArgs e)
        {
            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                string PdfName = "Pdf File";
                PdfName = form.GetFileName();
                //PdfName = strFolderPath + PdfName;

                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName + "-CSV-Details";
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
                }
                catch (Exception ex)
                {
                    AlertBox.Show("Error", MessageBoxIcon.Error);
                }

                try
                {
                    string Tmpstr = PdfName + ".txt";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = PdfName + newFileName.Substring(0, length) + ".txt";
                }


                if (!string.IsNullOrEmpty(Random_Filename))
                    PdfName = Random_Filename;
                else
                    PdfName += ".txt";

                FileStream fs = null;

                //List<CAMASTEntity> CAList = _model.SPAdminData.Browse_CAMAST(null, null, null, null);
                //List<MSMASTEntity> MSList = _model.SPAdminData.Browse_MSMAST(null, null, null, null, null);
                //string Year_Value = string.Empty;
                //if (CmbYear.Visible == true)
                //    Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();
                //else
                //    Year_Value = null;


                if (!File.Exists(PdfName))
                {
                    using (fs = File.Create(PdfName))
                    {

                    }
                    string N_Agy = string.Empty, N_Dept = string.Empty, N_prog = string.Empty, N_Year = string.Empty;
                    if (Agency == "**") N_Agy = null; else N_Agy = Agency;
                    if (Depart == "**") N_Dept = null; else N_Dept = Depart;
                    if (Program == "**") N_prog = null; else N_prog = Program;
                    if (CmbYear.Visible == true)
                        N_Year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.Trim(); //else N_Year = null;


                    string data = string.Empty;// DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                    bool First = true;
                    string Service_Plan = string.Empty, Branch_cd = string.Empty, SP_Desc = string.Empty, Priv_Branch = string.Empty;
                    string CaDate = string.Empty, Branch = string.Empty, Service_desc = string.Empty, CAMSDesc = string.Empty;
                    string F_Seq = string.Empty, Note_Worker = string.Empty, Note_site = string.Empty;
                    //string Status = "A"; if (rbEnrApppBY_Hie.Checked == true) Status = "H"; if (rbEnrolApp.Checked == true) Status = "E";
                    //string Enrl_hie = null; if (rbEnrApppBY_Hie.Checked == true) Enrl_hie = ((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Value.ToString().Trim();

                    using (StreamWriter sw = new StreamWriter(PdfName))
                    {
                        foreach (DataGridViewRow drsp in gvSps.Rows) //for (int k = 0; k < cmbSerPlan.Items.Count; k++)
                        {
                            if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                            {
                                Service_Plan = drsp.Cells["SP_Code"].Value.ToString().Trim(); //((Captain.Common.Utilities.ListItem)cmbSerPlan.Items[k]).Value.ToString();

                                CASESP0Entity SP0_data = _model.SPAdminData.Browse_CASESP0(Service_Plan, null, null, null, null, null, null, null, null);
                                if (!string.IsNullOrEmpty(SP0_data.BpCode.Trim())) Branch_cd = SP0_data.BpCode.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B1Code.Trim())) Branch_cd += SP0_data.B1Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B2Code.Trim())) Branch_cd += SP0_data.B2Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B3Code.Trim())) Branch_cd += SP0_data.B3Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B4Code.Trim())) Branch_cd += SP0_data.B4Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B5Code.Trim())) Branch_cd += SP0_data.B5Code.Trim();

                                SP_Desc = SP0_data.Desc.Trim();
                                string Allow_Add_Branch = SP0_data.Allow_Add_Branch.Trim();

                                //data = "Service Plan    |Critical Activity/MileStone |App#    |Applicant Name  |Date    |Case Worker |Site    |Enroll Programs |Date";
                                data = "Service Plan    |Service/Outcome |App#    |Applicant Name  |Date    |Case Worker |Site    |Enroll Programs |Date";
                                sw.WriteLine(data);

                                List<Funnel_RepEntity> dsCount = new List<Funnel_RepEntity>(); List<Funnel_RepEntity> dsMSCount = new List<Funnel_RepEntity>();

                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year));
                                }
                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                                }
                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                                }
                                else
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                                }
                                //DataSet dsCount = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel("CA", N_Agy, N_Dept, N_prog, N_Year, Service_Plan, null, null, null, null, Status,Enrl_hie);
                                //DataSet dsMSCount = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel("MS", N_Agy, N_Dept, N_prog, N_Year, Service_Plan, null, null, null, null, Status, Enrl_hie);
                                if (dsMSCount.Count > 0 || dsCount.Count > 0)
                                {
                                    if (Branch_cd.Length > 0)
                                    {
                                        for (int i = 0; i < Branch_cd.Length; )
                                        {
                                            string Temp_Branch = Branch_cd.Substring(i, 1);
                                            List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == Service_Plan.Trim()).OrderByDescending(u => u.Branch).ToList();
                                            //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(Service_Plan, Temp_Branch, null, null);
                                            //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];

                                            Priv_Branch = null;
                                            if (casesp2Data.Count > 0)
                                            {


                                                foreach (CASESP2Entity dr in casesp2Data)
                                                {
                                                    CaDate = null;
                                                    Branch = dr.Branch.ToString().Trim();
                                                    if (Service_Plan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                                    {
                                                        Service_desc = SP0_data.BpDesc.Trim();
                                                        if (!First)
                                                        {
                                                            if (Branch.Trim() == SP0_data.B1Code.Trim())
                                                                Service_desc = SP0_data.B1Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B2Code.Trim())
                                                                Service_desc = SP0_data.B2Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B3Code.Trim())
                                                                Service_desc = SP0_data.B3Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B4Code.Trim())
                                                                Service_desc = SP0_data.B4Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B5Code.Trim())
                                                                Service_desc = SP0_data.B5Desc.Trim();
                                                        }
                                                        Priv_Branch = Branch;
                                                        First = false;
                                                    }
                                                    string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
                                                    if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
                                                    string Grp = dr.Orig_Grp.ToString().Trim();

                                                    string Search_Caseworker = string.Empty;
                                                    if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                        Search_Caseworker = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                        Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                    else Search_Caseworker = "";

                                                    string Search_Site = string.Empty;
                                                    if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                        Search_Site = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                        Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                    else Search_Site = "";

                                                    List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                                    if (CAMSType == "CA")
                                                    {
                                                        if (N_Agy != null && N_Dept != null && N_prog != null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                    }
                                                    else if (CAMSType == "MS")
                                                    {

                                                        if (N_Agy != null && N_Dept != null && N_prog != null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_GROUP.Equals(Grp) && u.CASEACT_BRANCH.Equals(Branch));
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }

                                                    }
                                                    //DataSet ds = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel(CAMSType, N_Agy, N_Dept, N_prog, N_Year, Service_Plan, dr.CamCd.ToString().Trim(), Search_Caseworker,Branch,null,Status,Enrl_hie);
                                                    //DataTable dt = ds.Tables[0];

                                                    if (RepEntity.Count > 0)
                                                    {
                                                        if (dtpFrom.Checked && dtpTo.Checked)
                                                            RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                    }

                                                    if (RepEntity.Count > 0)
                                                    {
                                                        if (CAMSType == "CA")
                                                        {
                                                            CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                            if (CaEntity != null)
                                                            {
                                                                CAMSDesc = CaEntity.Desc.Trim();
                                                            }
                                                            //foreach (CAMASTEntity CaEntity in CAList)
                                                            //{
                                                            //    if (CaEntity.Code.Trim() == dr.CamCd.ToString().Trim())
                                                            //    {
                                                            //        CAMSDesc = CaEntity.Desc.Trim(); break;
                                                            //    }
                                                            //}
                                                        }
                                                        else
                                                        {
                                                            MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                            if (MSEntity != null)
                                                            {
                                                                CAMSDesc = MSEntity.Desc.Trim();
                                                            }
                                                            //foreach (MSMASTEntity MSEntity in MSList)
                                                            //{
                                                            //    if (MSEntity.Code == dr.CamCd.ToString().Trim())
                                                            //    {
                                                            //        CAMSDesc = MSEntity.Desc.Trim();
                                                            //        break;
                                                            //    }
                                                            //}
                                                        }

                                                        //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                                        //DataTable dtVerifier = dsVerifier.Tables[0];
                                                        foreach (Funnel_RepEntity drApp in RepEntity)
                                                        {
                                                            CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                            Note_Worker = string.Empty;
                                                            HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                            if (hiedata != null)
                                                            {
                                                                Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                            }

                                                            Note_site = string.Empty;
                                                            if (propCaseAllSiteEntity.Count > 0)
                                                            {
                                                                if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                                {
                                                                    CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                                    if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                                    //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                                    //if (Note_site == null) Note_site = string.Empty;
                                                                }
                                                            }

                                                            //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                            //{
                                                            //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                            //    {
                                                            //        Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                            //        break;
                                                            //    }
                                                            //}
                                                            DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                            string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                            string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                            if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                            {
                                                                if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                                {
                                                                    for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                    {
                                                                        Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                        //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                        //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                        Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                    {
                                                                        CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                        if (casehieName != null)
                                                                            Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                        //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                        //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                        Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                    }
                                                                }
                                                                if (Enroll_Prog.Trim().Length > 0)
                                                                    Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                                if (Enroll_Date.Trim().Length > 0)
                                                                    Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                            }
                                                            //if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                            //{
                                                            //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                            //    {
                                                            //        data = Service_desc.Trim() + "|" + CAMSDesc.Trim() + "|" + drApp.SNP_APP.ToString().Trim() + "|" + drApp.App_Name.ToString().Trim() + "  |" + CaDate.Trim() + "|" + Note_Worker.Trim() + "|" + Note_site.Trim() + " |" + Enroll_Prog + "|" + Enroll_Date;
                                                            //        sw.WriteLine(data);
                                                            //    }
                                                            //}
                                                            //else
                                                            //{
                                                                data = Service_desc.Trim() + "|" + CAMSDesc.Trim() + "|" + drApp.SNP_APP.ToString().Trim() + "|" + drApp.App_Name.ToString().Trim() + "  |" + CaDate.Trim() + "|" + Note_Worker.Trim() + "|" + Note_site.Trim() + " |" + Enroll_Prog + "|" + Enroll_Date;
                                                                sw.WriteLine(data);
                                                            //}

                                                        }
                                                    }
                                                }
                                            }
                                            i++;
                                        }

                                    }
                                }

                                if (Allow_Add_Branch == "Y")
                                {
                                    DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(N_Agy, N_Dept, N_prog, N_Year, drsp.Cells["SP_Code"].Value.ToString().Trim());
                                    DataTable dt = ds.Tables[0];

                                    if (dt.Rows.Count > 0)
                                    {
                                        foreach (DataRow dr in dt.Rows)
                                        {
                                            string CAMSType = dr["SPM2_TYPE"].ToString();
                                            string Search_Caseworker = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                Search_Caseworker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else Search_Caseworker = "";

                                            string Search_Site = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                Search_Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else Search_Site = "";

                                            List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                            if (CAMSType == "CA")
                                            {
                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                            }
                                            else if (CAMSType == "MS")
                                            {

                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                }
                                            }

                                            if (RepEntity.Count > 0)
                                            {
                                                if (dtpFrom.Checked && dtpTo.Checked)
                                                    RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                            }

                                            if (RepEntity.Count > 0)
                                            {
                                                if (CAMSType == "CA")
                                                {
                                                    CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                    if (CaEntity != null)
                                                    {
                                                        CAMSDesc = CaEntity.Desc.Trim();
                                                    }

                                                }
                                                else
                                                {

                                                    MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                    if (MSEntity != null)
                                                    {
                                                        CAMSDesc = MSEntity.Desc.Trim();
                                                    }

                                                }

                                                //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                                //DataTable dtVerifier = dsVerifier.Tables[0];
                                                foreach (Funnel_RepEntity drApp in RepEntity)
                                                {
                                                    CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                    Note_Worker = string.Empty;
                                                    HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                    if (hiedata != null)
                                                    {
                                                        Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                    }

                                                    Note_site = string.Empty;
                                                    if (propCaseAllSiteEntity.Count > 0)
                                                    {
                                                        if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                        {
                                                            CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                            if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                            //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                            //if (Note_site == null) Note_site = string.Empty;
                                                        }
                                                    }
                                                    //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                    //{
                                                    //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                    //    {
                                                    //        Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                    //        break;
                                                    //    }
                                                    //}
                                                    DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                    string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                    string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                    if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                    {
                                                        if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        else
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                var varcasehie = propCaseHieNameEntity.Select(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim()).ToList();
                                                                // if(varcasehie!=null)
                                                                //Enroll_Prog += varcasehie.HierarchyName.ToString().Trim() + ", ";
                                                                CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                if (casehieName != null)
                                                                    Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        if (Enroll_Prog.Trim().Length > 0)
                                                            Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                        if (Enroll_Date.Trim().Length > 0)
                                                            Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                    }
                                                    //if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                    //{
                                                    //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                    //    {
                                                    //        data = "Additional Branch" + "|" + CAMSDesc.Trim() + "|" + drApp.SNP_APP.ToString().Trim() + "|" + drApp.App_Name.ToString().Trim() + "  |" + CaDate.Trim() + "|" + Note_Worker.Trim() + "|" + Note_site.Trim() + " |" + Enroll_Prog + "|" + Enroll_Date;
                                                    //        sw.WriteLine(data);
                                                    //    }
                                                    //}
                                                    //else
                                                    //{
                                                        data = "Additional Branch" + "|" + CAMSDesc.Trim() + "|" + drApp.SNP_APP.ToString().Trim() + "|" + drApp.App_Name.ToString().Trim() + "  |" + CaDate.Trim() + "|" + Note_Worker.Trim() + "|" + Note_site.Trim() + " |" + Enroll_Prog + "|" + Enroll_Date;
                                                        sw.WriteLine(data);
                                                    //}

                                                }
                                            }
                                        }
                                    }
                                }



                            }
                        }
                    }
                }
            }
        }


        private void BtnGenPdf_Click(object sender, EventArgs e)
        {
            if (ValidateForm())
            {
                string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty; strServicePlans = string.Empty;
                if (Agency == "**") SP_Agy = null; else SP_Agy = Agency;
                if (Depart == "**") SP_Dept = null; else SP_Dept = Depart;
                if (Program == "**") SP_Prog = null; else SP_Prog = Program;

                string Year_Value = string.Empty; string casetype = string.Empty;
                if (CmbYear.Visible == true)
                    Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();
                //else 
                //Year_Value = "    ";

                foreach (DataGridViewRow drSps in gvSps.Rows)
                {
                    if (drSps.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        if (!strServicePlans.Equals(string.Empty)) strServicePlans += ",";
                        strServicePlans += drSps.Cells["SP_Code"].Value.ToString().Trim();
                    }
                }

                string Status = "A"; if (rbEnrApppBY_Hie.Checked == true) Status = "H"; if (rbEnrolApp.Checked == true) Status = "E";
                string Enrl_hie = null; if (rbEnrApppBY_Hie.Checked == true) Enrl_hie = ((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Value.ToString().Trim();

                string Search_Caseworker = string.Empty;
                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                    Search_Caseworker = "";
                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                    Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                else Search_Caseworker = "";

                string Search_Site = string.Empty;
                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                    Search_Site = "";
                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                    Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                else Search_Site = "";

                string strreportSw = string.Empty;
                if (chkbDet.Checked.Equals(true))
                    strreportSw = "A";
                if (gvFunnel.Rows.Count > 0)
                {
                }
                else
                {
                    if (((Captain.Common.Utilities.ListItem)cmbCaseType.SelectedItem).Value.ToString() != "**")
                        casetype = ((Captain.Common.Utilities.ListItem)cmbCaseType.SelectedItem).Value.ToString();
                    CAFunnel = _model.SPAdminData.Browse_FunnelReport("CA", SP_Agy, SP_Dept, SP_Prog, Year_Value, strServicePlans, null, Search_Caseworker, null, null, Status, Enrl_hie, Fund_SW, strreportSw, BaseForm.UserID, casetype);
                    MSFunnel = _model.SPAdminData.Browse_FunnelReport("MS", SP_Agy, SP_Dept, SP_Prog, Year_Value, strServicePlans, null, Search_Caseworker, null, null, Status, Enrl_hie, Fund_SW, strreportSw, BaseForm.UserID, casetype);
                }
                if (chkbDet.Checked.Equals(true))
                {
                    if (rbPDF.Checked.Equals(true))
                    {
                        PdfListForm pdfListForm = new PdfListForm(BaseForm, Privileges, false, propReportPath, "PDF");
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveForm_Closed);
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveAPP_Pdf);
                        if (chkbExcel.Checked)
                        {
                            pdfListForm.FormClosed += new FormClosedEventHandler(On_ExcelForm_Closed_DevExpress);//(On_ExcelForm_Closed);
                            pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveAPP_Excel_DevExpress);//(On_SaveAPP_Excel);
                        }
                        pdfListForm.StartPosition = FormStartPosition.CenterScreen;
                        pdfListForm.ShowDialog();
                    }
                    else if (rbCSV.Checked.Equals(true))
                    {
                        PdfListForm pdfListForm = new PdfListForm(BaseForm, Privileges, false, propReportPath, "TXT");
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveForm_Closed);
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_NotePadForm1_Closed);
                        if (chkbExcel.Checked)
                        {
                            pdfListForm.FormClosed += new FormClosedEventHandler(On_ExcelForm_Closed_DevExpress);//(On_ExcelForm_Closed);
                            pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveAPP_Excel_DevExpress);//(On_SaveAPP_Excel);
                        }
                        pdfListForm.StartPosition = FormStartPosition.CenterScreen;
                        pdfListForm.ShowDialog();
                    }
                    else
                    {
                        PdfListForm pdfListForm = new PdfListForm(BaseForm, Privileges, false, propReportPath, "PDF");
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveForm_Closed);
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_NotePadForm1_Closed);
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveAPP_Pdf);
                        if (chkbExcel.Checked)
                        {
                            pdfListForm.FormClosed += new FormClosedEventHandler(On_ExcelForm_Closed_DevExpress);//(On_ExcelForm_Closed);
                            pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveAPP_Excel_DevExpress);//(On_SaveAPP_Excel);
                        }
                        pdfListForm.StartPosition = FormStartPosition.CenterScreen;
                        pdfListForm.ShowDialog();
                    }
                }
                else
                {
                    PdfListForm pdfListForm = new PdfListForm(BaseForm, Privileges, false, propReportPath, "PDF");
                    pdfListForm.FormClosed += new FormClosedEventHandler(On_SaveForm_Closed);
                    if (chkbExcel.Checked)
                    {
                        pdfListForm.FormClosed += new FormClosedEventHandler(On_ExcelForm_Closed_DevExpress);//(On_ExcelForm_Closed);
                        //pdfListForm.FormClosed += new Form.FormClosedEventHandler(On_SaveAPP_Excel);
                    }
                    pdfListForm.StartPosition = FormStartPosition.CenterScreen;
                    pdfListForm.ShowDialog();
                }
            }
            else AlertBox.Show("No Records Found", MessageBoxIcon.Warning);
        }

        private void BtnPdfPrev_Click(object sender, EventArgs e)
        {
            PdfListForm pdfListForm = new PdfListForm(BaseForm, Privileges, true, propReportPath);
            pdfListForm.StartPosition = FormStartPosition.CenterScreen;
            pdfListForm.ShowDialog();
        }

        List<Funnel_RepEntity> totCAFunnel = new List<Funnel_RepEntity>();
        List<Funnel_RepEntity> totMSFunnel = new List<Funnel_RepEntity>();
        List<Funnel_RepEntity> CAFunnel = new List<Funnel_RepEntity>();
        List<Funnel_RepEntity> MSFunnel = new List<Funnel_RepEntity>();
        List<CASESP0Entity> SP_Services = new List<CASESP0Entity>();
        string strServicePlans = string.Empty;
        private void btnGneGrid_Click(object sender, EventArgs e)
        {
            if (ValidateForm())
            {
                gvFunnel.Rows.Clear();


                string Year_Value = string.Empty; strServicePlans = string.Empty;string casetype = string.Empty;
                if (CmbYear.Visible == true)
                    Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();
                //else
                //    Year_Value = "    ";

                string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty, SP_Year = string.Empty;
                if (Agency == "**") SP_Agy = null; else SP_Agy = Agency;
                if (Depart == "**") SP_Dept = null; else SP_Dept = Depart;
                if (Program == "**") SP_Prog = null; else SP_Prog = Program;

                foreach (DataGridViewRow drSps in gvSps.Rows)
                {
                    if (drSps.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        if (!strServicePlans.Equals(string.Empty)) strServicePlans += ",";
                        strServicePlans += drSps.Cells["SP_Code"].Value.ToString().Trim();
                    }
                }

                //if (CmbYear.Visible == true)
                //    Search_CaseSPM_Entity.year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();
                //else
                //    Search_CaseSPM_Entity.year = null;
                //Search_CaseSPM_Entity.agency = SP_Agy; Search_CaseSPM_Entity.dept = SP_Dept; Search_CaseSPM_Entity.program = SP_Prog;
                //Search_CaseSPM_Entity.app_no = null;
                //CaseSPM_List = _model.SPAdminData.Browse_CASESPM(Search_CaseSPM_Entity, "Browse");

                string Search_Caseworker = string.Empty;
                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                    Search_Caseworker = "";
                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                    Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                else Search_Caseworker = "";

                string Search_Site = string.Empty;
                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                    Search_Site = "";
                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                    Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                else Search_Site = "";

                string Status = "A"; if (rbEnrApppBY_Hie.Checked == true) Status = "H"; if (rbEnrolApp.Checked == true) Status = "E";
                string Enrl_hie = null; if (rbEnrApppBY_Hie.Checked == true) Enrl_hie = ((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Value.ToString().Trim();
                
                if (((Captain.Common.Utilities.ListItem)cmbCaseType.SelectedItem).Value.ToString() != "**") //Vikash added
                    casetype = ((Captain.Common.Utilities.ListItem)cmbCaseType.SelectedItem).Value.ToString();
                CAFunnel = _model.SPAdminData.Browse_FunnelReport("CA", SP_Agy, SP_Dept, SP_Prog, Year_Value, strServicePlans, null, Search_Caseworker, null, null, Status, Enrl_hie, Fund_SW, string.Empty, BaseForm.UserID, casetype);
                MSFunnel = _model.SPAdminData.Browse_FunnelReport("MS", SP_Agy, SP_Dept, SP_Prog, Year_Value, strServicePlans, null, Search_Caseworker, null, null, Status, Enrl_hie, Fund_SW, string.Empty, BaseForm.UserID, casetype);

                //string gv_Agy = string.Empty, gv_Dept = string.Empty, gv_Prog = string.Empty, gv_Year = string.Empty;
                //if (SP_Agy == null) gv_Agy = "  "; else gv_Agy = SP_Agy; if (SP_Dept == null) gv_Dept = "  "; else 

                //DataTable dtSP_Services = dsSP_Services.Tables[0];

                // DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                string CAMSDesc = null;
                string SerVicePlan = null, Priv_ServicePlan = null; string SP_Desc = null;
                bool First = true; string Branch = null, Priv_Branch = null;
                int rowIndex = 0; int rowBranch = 0; string Allow_Add_Branch = string.Empty;
                CASESP0Entity Sp_Sel_service = new CASESP0Entity();
                foreach (DataGridViewRow drSp in gvSps.Rows)
                {
                    if (drSp.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        SerVicePlan = drSp.Cells["SP_Code"].Value.ToString().Trim();
                        if (SP_Services.Count > 0)
                        {
                            Sp_Sel_service = SP_Services.Find(u => u.Code.Trim().Equals(SerVicePlan.Trim()));
                            if (Sp_Sel_service != null)
                            {
                                SP_Desc = Sp_Sel_service.Desc.Trim();
                                Allow_Add_Branch = Sp_Sel_service.Allow_Add_Branch.Trim();
                            }
                        }
                        List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == SerVicePlan.Trim()).OrderByDescending(u => u.Branch).ToList();
                        // dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(SerVicePlan, null, null, null);
                        // dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];
                        Priv_Branch = null;
                        string Service_desc = string.Empty;
                        if (casesp2Data.Count > 0)
                        {
                            //DataView dv = dtSP_CaseSP2.DefaultView;
                            //dv.Sort = "sp2_branch DESC";
                            //dtSP_CaseSP2 = dv.ToTable();

                            foreach (CASESP2Entity dr in casesp2Data)
                            {
                                Branch = dr.Branch.ToString().Trim();
                                if (SerVicePlan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                {
                                    Service_desc = Sp_Sel_service.BpDesc.ToString().Trim();
                                    if (!First)
                                    {
                                        if (Branch.Trim() == Sp_Sel_service.B1Code.ToString().Trim())
                                            Service_desc = Sp_Sel_service.B1Desc.ToString();
                                        else if (Branch.Trim() == Sp_Sel_service.B2Code.ToString().Trim())
                                            Service_desc = Sp_Sel_service.B2Desc.ToString();
                                        else if (Branch.Trim() == Sp_Sel_service.B3Code.ToString().Trim())
                                            Service_desc = Sp_Sel_service.B3Desc.ToString();
                                        else if (Branch.Trim() == Sp_Sel_service.B4Code.ToString().Trim())
                                            Service_desc = Sp_Sel_service.B4Desc.ToString();
                                        else if (Branch.Trim() == Sp_Sel_service.B5Code.ToString().Trim())
                                            Service_desc = Sp_Sel_service.B5Desc.ToString();
                                    }
                                    if (SerVicePlan != Priv_ServicePlan)
                                    {
                                        rowIndex = gvFunnel.Rows.Add("", "Service: " + SP_Desc.Trim(), "", "", "", "", "", "", "", "", "");
                                        gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Black;
                                        //gvFunnel.Rows[rowIndex].DefaultCellStyle.BackColor = Color.DarkBlue;
                                        gvFunnel.Rows[rowIndex].DefaultCellStyle.Font = new System.Drawing.Font(/*"Microsoft Sans Serif"*/"Calibri", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                        gvFunnel.Rows[rowIndex].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;
                                    }

                                    rowBranch = gvFunnel.Rows.Add("", "Branch: " + Service_desc.Trim(), "", "", "", "", "", "", "", "", "");
                                    gvFunnel.Rows[rowBranch].DefaultCellStyle.ForeColor = Color.Black;
                                    //gvFunnel.Rows[rowBranch].DefaultCellStyle.BackColor = Color.DarkBlue;
                                    gvFunnel.Rows[rowBranch].DefaultCellStyle.Font = new System.Drawing.Font(/*"Microsoft Sans Serif"*/"Calibri", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                    gvFunnel.Rows[rowBranch].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;

                                    Priv_Branch = Branch; Priv_ServicePlan = SerVicePlan;
                                    First = false;
                                }

                                string CAMSType = dr.Type1.ToString();
                                string CAMSTypeDesc = string.Empty;
                                if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";


                                string Grp = dr.Orig_Grp.ToString().Trim();
                                //DataSet ds = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel(CAMSType, SPMEntity.agency, SPMEntity.dept, SPMEntity.program, SPMEntity.year, SPMEntity.service_plan, dr.CamCd.ToString().Trim(), Search_Caseworker, Branch, dr["sp2_orig_grp"].ToString().Trim(),Status,Enrl_hie);
                                //DataTable dt = ds.Tables[0];
                                List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();
                                if (CAMSType == "CA")
                                {
                                    string CAmsCode = dr.CamCd.ToString().Trim();

                                    if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim().Equals(dr.CamCd.ToString().Trim()));
                                    if (CaEntity != null)
                                        CAMSDesc = CaEntity.Desc.Trim(); //break;

                                }
                                else
                                {
                                    string CAmsCode = dr.CamCd.ToString().Trim();

                                    if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(Search_Site.Trim()) && !string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                        else
                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                    }
                                    MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim().Equals(dr.CamCd.ToString().Trim()));
                                    if (MSEntity != null)
                                        CAMSDesc = MSEntity.Desc.Trim();

                                }

                                string SP2_CountType = string.Empty;
                                if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                    SP2_CountType = dr.SP2_COUNT_TYPE.Trim();

                                if (CAApp.Count > 0 || MSApp.Count > 0)
                                {
                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                    {
                                        int datecnt = 0; decimal TAmount = 0;
                                        if (CAMSType == "CA")
                                        {
                                            List<Funnel_RepEntity> SelCaseAct = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                            if (SelCaseAct.Count > 0)
                                            {
                                                if (dr.SP2_COUNT_TYPE == "A")
                                                {
                                                    List<Funnel_RepEntity> SelRecs = SelCaseAct.FindAll(u => u.Cost != "");
                                                    decimal TotalCost = 0;
                                                    if (SelRecs.Count > 0)
                                                    {
                                                        TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                        TAmount = ((TotalCost / SelRecs.Count));
                                                    }
                                                }
                                                else if (dr.SP2_COUNT_TYPE == "S")
                                                {
                                                    List<Funnel_RepEntity> SelRecs = SelCaseAct.FindAll(u => u.Cost != "");

                                                    if (SelRecs.Count > 0)
                                                    {
                                                        TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                        //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                    }
                                                }
                                                else if (dr.SP2_COUNT_TYPE == "E")
                                                {
                                                    List<Funnel_RepEntity> SelRecs = SelCaseAct.FindAll(u => u.Cost != "");
                                                    if (SelRecs.Count > 0)
                                                    {
                                                        SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                        TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                    }
                                                }
                                                else
                                                    datecnt = SelCaseAct.Count;
                                            }
                                            //foreach (Funnel_RepEntity drApp in CAApp)
                                            //{
                                            //    string CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                            //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                            //    {
                                            //        datecnt++;
                                            //    }

                                            //}
                                        }
                                        else if (CAMSType == "MS")
                                        {
                                            List<Funnel_RepEntity> SelCaseMS = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                            if (SelCaseMS.Count > 0)
                                            {
                                                if (dr.SP2_COUNT_TYPE == "A")
                                                {
                                                    List<Funnel_RepEntity> SelRecs = SelCaseMS.FindAll(u => u.Cost != "");
                                                    decimal TotalCost = 0;
                                                    if (SelRecs.Count > 0)
                                                    {
                                                        TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                        TAmount = ((TotalCost / SelRecs.Count));
                                                    }
                                                }
                                                else if (dr.SP2_COUNT_TYPE == "S")
                                                {
                                                    List<Funnel_RepEntity> SelRecs = SelCaseMS.FindAll(u => u.Cost != "");

                                                    if (SelRecs.Count > 0)
                                                    {
                                                        TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                        //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                    }
                                                }
                                                else if (dr.SP2_COUNT_TYPE == "E")
                                                {
                                                    List<Funnel_RepEntity> SelRecs = SelCaseMS.FindAll(u => u.Cost != "");
                                                    if (SelRecs.Count > 0)
                                                    {
                                                        SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                        TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                    }
                                                }
                                                else
                                                    datecnt = SelCaseMS.Count;
                                            }




                                            //if (SelCaseMS.Count > 0)
                                            //    datecnt = SelCaseMS.Count;
                                            //foreach (Funnel_RepEntity drApp in MSApp)
                                            //{
                                            //    string CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                            //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                            //    {
                                            //        datecnt++;
                                            //    }
                                            //}
                                        }

                                        if (SP2_CountType=="A" || SP2_CountType == "E" || SP2_CountType == "S")
                                        {
                                            rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), TAmount == 0 ? "" : TAmount.ToString("0.00"), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                            //if (dr.SP2_CAMS_Active == "I")
                                            //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                        }
                                        else if (datecnt == 0)
                                        {
                                            rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), " ", SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                            //if (dr.SP2_CAMS_Active == "I")
                                            //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                        }
                                        else
                                        {
                                            rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), datecnt.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                            //if (dr.SP2_CAMS_Active == "I")
                                            //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                        }
                                    }
                                    else
                                    {
                                        if (CAMSType == "CA")
                                        {
                                            decimal TAmount = 0;
                                            if (dr.SP2_COUNT_TYPE == "A")
                                            {
                                                List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                decimal TotalCost = 0;
                                                if (SelRecs.Count > 0)
                                                {
                                                    TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                    TAmount = ((TotalCost / SelRecs.Count));
                                                }
                                            }
                                            else if (dr.SP2_COUNT_TYPE == "S")
                                            {
                                                List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");

                                                if (SelRecs.Count > 0)
                                                {
                                                    TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                    //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                }
                                            }
                                            else if (dr.SP2_COUNT_TYPE == "E")
                                            {
                                                List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                if (SelRecs.Count > 0)
                                                {
                                                    SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                    TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                }
                                            }

                                            if (SP2_CountType == "A" || SP2_CountType == "E" || SP2_CountType == "S")
                                            {
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), TAmount == 0 ? "" : TAmount.ToString("0.00"), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                                //if (dr.SP2_CAMS_Active == "I")
                                                //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                            }
                                            else
                                            {
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), CAApp.Count.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                                //if (dr.SP2_CAMS_Active == "I")
                                                //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                            }
                                        }
                                        else if (CAMSType == "MS")
                                        {
                                            decimal TAmount = 0;
                                            if (dr.SP2_COUNT_TYPE == "A")
                                            {
                                                List<Funnel_RepEntity> SelRecs = MSApp.FindAll(u => u.Cost != "");
                                                decimal TotalCost = 0;
                                                if (SelRecs.Count > 0)
                                                {
                                                    TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                    TAmount = ((TotalCost / SelRecs.Count));
                                                }
                                            }
                                            else if (dr.SP2_COUNT_TYPE == "S")
                                            {
                                                List<Funnel_RepEntity> SelRecs = MSApp.FindAll(u => u.Cost != "");

                                                if (SelRecs.Count > 0)
                                                {
                                                    TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                    //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                }
                                            }
                                            else if (dr.SP2_COUNT_TYPE == "E")
                                            {
                                                List<Funnel_RepEntity> SelRecs = MSApp.FindAll(u => u.Cost != "");
                                                if (SelRecs.Count > 0)
                                                {
                                                    SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                    TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                }
                                            }

                                            if (SP2_CountType == "A" || SP2_CountType == "E" || SP2_CountType == "S")
                                            {
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), TAmount == 0 ? "" : TAmount.ToString("0.00"), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                                //if (dr.SP2_CAMS_Active == "I")
                                                //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                            }
                                            else
                                            {
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), MSApp.Count.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                                //if (dr.SP2_CAMS_Active == "I")
                                                //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                            }



                                            //rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), MSApp.Count.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                            ////if (dr.SP2_CAMS_Active == "I")
                                            ////    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                        }
                                    }
                                }
                                else
                                {
                                    rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), "", SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr.CamCd.ToString().Trim(), Branch.Trim(), dr.Orig_Grp.ToString().Trim());
                                    //if (dr.SP2_CAMS_Active == "I")
                                    //    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;
                                }
                                if (dr.SP2_CAMS_Active == "I")
                                    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Red;

                            }

                        }

                        if (Allow_Add_Branch == "Y")
                        {
                            DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(SP_Agy, SP_Dept, SP_Prog, Year_Value, drSp.Cells["SP_Code"].Value.ToString().Trim());
                            DataTable dt = ds.Tables[0];

                            if (dt.Rows.Count > 0)
                            {

                                if (SerVicePlan != Priv_ServicePlan)
                                {
                                    rowIndex = gvFunnel.Rows.Add("", "Service: " + SP_Desc.Trim(), "", "", "", "", "", "", "", "", "");
                                    gvFunnel.Rows[rowIndex].DefaultCellStyle.ForeColor = Color.Black;
                                    //gvFunnel.Rows[rowIndex].DefaultCellStyle.BackColor = Color.DarkBlue;
                                    gvFunnel.Rows[rowIndex].DefaultCellStyle.Font = new System.Drawing.Font(/*"Microsoft Sans Serif"*/"Calibri", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                    gvFunnel.Rows[rowIndex].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;

                                    Priv_ServicePlan = drSp.Cells["SP_Code"].Value.ToString().Trim();
                                }

                                rowBranch = gvFunnel.Rows.Add("", "Branch: " + "Additional Branch", "", "", "", "", "", "", "", "", "");
                                gvFunnel.Rows[rowBranch].DefaultCellStyle.ForeColor = Color.Black;
                                //gvFunnel.Rows[rowBranch].DefaultCellStyle.BackColor = Color.DarkBlue;
                                gvFunnel.Rows[rowBranch].DefaultCellStyle.Font = new System.Drawing.Font(/*"Microsoft Sans Serif"*/"Calibri", 12F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                gvFunnel.Rows[rowBranch].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;

                                foreach (DataRow dr in dt.Rows)
                                {
                                    string CAMSType = dr["SPM2_TYPE"].ToString();
                                    string CAMSTypeDesc = string.Empty;
                                    if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";

                                    //string Search_Caseworker = string.Empty;
                                    //if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                    //    Search_Caseworker = "";
                                    //else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                    //    Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                    //else Search_Caseworker = "";

                                    //string Search_Site = string.Empty;
                                    //if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                    //    Search_Site = "";
                                    //else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                    //    Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                    //else Search_Site = "";


                                    //DataSet ds = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel(CAMSType, SPMEntity.agency, SPMEntity.dept, SPMEntity.program, SPMEntity.year, SPMEntity.service_plan, dr.CamCd.ToString().Trim(), Search_Caseworker, Branch, dr["sp2_orig_grp"].ToString().Trim(),Status,Enrl_hie);
                                    //DataTable dt = ds.Tables[0];
                                    List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                    List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();

                                    if (dr["SPM2_TYPE"].ToString().Trim() == "CA")
                                    {
                                        string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim(); //string Grp = dr["sp2_orig_grp"].ToString().Trim();

                                        if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()));
                                        if (CaEntity != null)
                                            CAMSDesc = CaEntity.Desc.Trim(); //break;
                                    }
                                    else
                                    {
                                        string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim();

                                        if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        else
                                        {
                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                            else
                                                MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Sp_Sel_service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                        }
                                        MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()));
                                        if (MSEntity != null)
                                            CAMSDesc = MSEntity.Desc.Trim();
                                    }

                                    if (CAApp.Count > 0 || MSApp.Count > 0)
                                    {
                                        if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                        {
                                            int datecnt = 0;
                                            if (CAMSType == "CA")
                                            {
                                                List<Funnel_RepEntity> SelCaseAct = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                if (SelCaseAct.Count > 0)
                                                    datecnt = SelCaseAct.Count;

                                                //foreach (Funnel_RepEntity drApp in CAApp)
                                                //{
                                                //    string CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                //    {
                                                //        datecnt++;
                                                //    }

                                                //}
                                            }
                                            else if (CAMSType == "MS")
                                            {
                                                List<Funnel_RepEntity> SelCaseMS = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                if (SelCaseMS.Count > 0)
                                                    datecnt = SelCaseMS.Count;

                                                //foreach (Funnel_RepEntity drApp in MSApp)
                                                //{
                                                //    string CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                //    {
                                                //        datecnt++;
                                                //    }
                                                //}
                                            }

                                            if (datecnt == 0)
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), " ", SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr["SPM2_CAMS_CODE"].ToString().Trim(), "9", "");
                                            else
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), datecnt.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr["SPM2_CAMS_CODE"].ToString().Trim(), "9", "");
                                        }
                                        else
                                        {
                                            if (CAMSType == "CA")
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), CAApp.Count.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr["SPM2_CAMS_CODE"].ToString().Trim(), "9", "");
                                            else if (CAMSType == "MS")
                                                rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), MSApp.Count.ToString(), SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr["SPM2_CAMS_CODE"].ToString().Trim(), "9", "");
                                        }
                                    }
                                    else
                                        rowIndex = gvFunnel.Rows.Add(CAMSTypeDesc.Trim(), CAMSDesc.Trim(), "", SP_Agy, SP_Dept, SP_Prog, Year_Value, Sp_Sel_service.Code, dr["SPM2_CAMS_CODE"].ToString().Trim(), "9", "");

                                    //if (dr.SP2_CAMS_Active = "I")
                                    //    gvFunnel.Rows[rowBranch].DefaultCellStyle.ForeColor = Color.Red;
                                }
                            }
                        }




                    }
                }
                if (gvFunnel.Rows.Count > 0)
                {
                    gvFunnel.CurrentCell = gvFunnel.Rows[0].Cells[1];
                    chbSerOutOnly_CheckedChanged(sender, e);
                }
                else
                    gvApp.Rows.Clear();
                //    }

            }

        }

        private bool ValidateForm()
        {
            bool isValid = true;

            if (gvSps.Rows.Count > 0)
            {
                foreach (DataGridViewRow drSp in gvSps.Rows)
                {
                    if (drSp.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        isValid = true; break;
                    }
                    else isValid = false;
                }
            }
            else
                isValid = false;

            if (!isValid)
            {
                if (gvSps.Rows.Count > 0)
                {
                    gvFunnel.Rows.Clear();
                    AlertBox.Show("At least select One Service Plan", MessageBoxIcon.Warning);
                }
                else
                    AlertBox.Show("No Service Plans to Print", MessageBoxIcon.Warning);
            }


            if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(false)) || (dtpFrom.Checked.Equals(false) && dtpTo.Checked.Equals(true)))
            {
                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(false))
                {
                    _errorProvider.SetError(dtpTo, string.Format(Consts.Messages.BlankIsRequired.GetMessage(), lblTo.Text + " date".Replace(Consts.Common.Colon, string.Empty)));
                    isValid = false;
                    _errorProvider.SetError(dtpFrom, null);
                }
                else
                {
                    _errorProvider.SetError(dtpFrom, string.Format(Consts.Messages.BlankIsRequired.GetMessage(), "From date".Replace(Consts.Common.Colon, string.Empty)));
                    isValid = false;
                    _errorProvider.SetError(dtpTo, null);
                }
            }
            else
            {
                _errorProvider.SetError(dtpTo, null);
                _errorProvider.SetError(dtpFrom, null);
            }

            if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
            {
                if (!string.IsNullOrEmpty(dtpFrom.Text) && (!string.IsNullOrEmpty(dtpTo.Text)))
                {
                    if (Convert.ToDateTime(dtpFrom.Text) > Convert.ToDateTime(dtpTo.Text))
                    {
                        _errorProvider.SetError(dtpFrom, "Start Date should be less than or equal to End Date".Replace(Consts.Common.Colon, string.Empty));
                        isValid = false;
                    }
                    else
                    {
                        _errorProvider.SetError(dtpTo, null);
                    }
                }
                else
                {
                    if (string.IsNullOrWhiteSpace(dtpTo.Text))
                    {
                        _errorProvider.SetError(dtpTo, string.Format(Consts.Messages.BlankIsRequired.GetMessage(), "Date Range " + lblTo.Text.Replace(Consts.Common.Colon, string.Empty)));
                        isValid = false;
                    }
                    else
                    {
                        _errorProvider.SetError(dtpTo, null);
                    }
                    if (string.IsNullOrWhiteSpace(dtpFrom.Text))
                    {
                        _errorProvider.SetError(dtpFrom, string.Format(Consts.Messages.BlankIsRequired.GetMessage(), lblDateRangeFrom.Text.Replace(Consts.Common.Colon, string.Empty)));
                        isValid = false;
                    }
                    else
                    {
                        _errorProvider.SetError(dtpFrom, null);
                    }

                }
            }
          

            if (rbEnrApppBY_Hie.Checked == true)
            {
                if (string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Value.ToString().Trim()))
                {
                    _errorProvider.SetError(cmbSelProg, string.Format(Consts.Messages.BlankIsRequired.GetMessage(), rbEnrApppBY_Hie.Text.Replace(Consts.Common.Colon, string.Empty)));
                    isValid = false;
                }
                else
                    _errorProvider.SetError(cmbSelProg, null);
            }

            IsSaveValid = isValid;
            return (isValid);
        }

        private void FillgvApp()
        {
            string Type_Mode = string.Empty; string Worker = string.Empty;string Site = string.Empty;
            //string Status = "A"; if (rbEnrApppBY_Hie.Checked == true) Status = "H"; if (rbEnrolApp.Checked == true) Status = "E";
            //string Enrl_hie = null; if (rbEnrApppBY_Hie.Checked == true) Enrl_hie = ((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Value.ToString().Trim();

            gvApp.Rows.Clear();
            if (gvFunnel.Rows.Count > 0)
            {
                //if (gvFunnel.CurrentRow.Cells["Type"].Value.ToString().Trim() == "CA")
                //    Type_Mode = "CA";
                //else
                //    Type_Mode = "MS";

                if (gvFunnel.CurrentRow.Cells["Type"].Value.ToString().Trim() == "Service")
                    Type_Mode = "CA";
                else
                    Type_Mode = "MS";

                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                    Worker = "";
                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                    Worker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                else Worker = "";
                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                    Site = "";
                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                    Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                else Site = "";

                List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                if (!string.IsNullOrEmpty(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()))
                {
                    if (Type_Mode == "CA")
                    {
                        //if(!string.IsNullOrEmpty(Worker.Trim()))
                        //    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                        //else
                        //    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));

                        if (gvFunnel.CurrentRow.Cells["gvAgency"].Value != null && gvFunnel.CurrentRow.Cells["gvDept"].Value != null && gvFunnel.CurrentRow.Cells["gvProg"].Value != null)
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }
                        else if (gvFunnel.CurrentRow.Cells["gvAgency"].Value != null && gvFunnel.CurrentRow.Cells["gvDept"].Value != null && gvFunnel.CurrentRow.Cells["gvProg"].Value == null)
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                            }
                        }
                        else if (gvFunnel.CurrentRow.Cells["gvAgency"].Value != null && gvFunnel.CurrentRow.Cells["gvDept"].Value == null && gvFunnel.CurrentRow.Cells["gvProg"].Value == null)
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }
                    }
                    else if (Type_Mode == "MS")
                    {
                        //if (!string.IsNullOrEmpty(Worker.Trim()))
                        //    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                        //else
                        //    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()));


                        if (gvFunnel.CurrentRow.Cells["gvAgency"].Value != null && gvFunnel.CurrentRow.Cells["gvDept"].Value != null && gvFunnel.CurrentRow.Cells["gvProg"].Value != null)
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.Prog.Equals(gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim()) && u.Year.Trim().Equals(gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }
                        else if (gvFunnel.CurrentRow.Cells["gvAgency"].Value != null && gvFunnel.CurrentRow.Cells["gvDept"].Value != null && gvFunnel.CurrentRow.Cells["gvProg"].Value == null)
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.dept.Equals(gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }
                        else if (gvFunnel.CurrentRow.Cells["gvAgency"].Value != null && gvFunnel.CurrentRow.Cells["gvDept"].Value == null && gvFunnel.CurrentRow.Cells["gvProg"].Value == null)
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim()) && u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }
                        else
                        {
                            if (!string.IsNullOrEmpty(Worker.Trim()) && !string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Worker.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Worker.Trim().Equals(Worker.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()));
                            }
                            else if (!string.IsNullOrEmpty(Site.Trim()))
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.Site.Trim().Equals(Site.Trim()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.Worker.Trim().Equals(Worker.Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()) && u.Site.Trim().Equals(Site.Trim()));
                            }
                            else
                            {
                                if (gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString() == "9")
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()));
                                else
                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim()) && u.CAMS_CODE.Trim().Equals(gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString()) && u.CASEACT_GROUP.Trim().Equals(gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim()));
                            }
                        }

                    }
                    //DataSet ds = DatabaseLayer.SPAdminDB.GetAppforFunnel(Type_Mode, gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim(), gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim(), gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim(), gvFunnel.CurrentRow.Cells["gvYear"].Value.ToString(), gvFunnel.CurrentRow.Cells["gvService"].Value.ToString().Trim(), gvFunnel.CurrentRow.Cells["gvCaMsCode"].Value.ToString().Trim(), Worker, gvFunnel.CurrentRow.Cells["gvBranch"].Value.ToString(), gvFunnel.CurrentRow.Cells["gvGroup"].Value.ToString().Trim(), Status, Enrl_hie);
                    //DataTable dt = ds.Tables[0];

                    if(RepEntity.Count>0)
                    {
                        if(dtpFrom.Checked && dtpTo.Checked)
                        {
                            RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))));
                        }
                    }

                    if (RepEntity.Count > 0)
                    {
                        DataSet dsVerifier = new DataSet(); DataTable dtVerifier = new DataTable();
                        if (Agency != "**" && Depart != "**" && Program != "**")
                        {
                            dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", gvFunnel.CurrentRow.Cells["gvAgency"].Value.ToString().Trim(), gvFunnel.CurrentRow.Cells["gvDept"].Value.ToString().Trim(), gvFunnel.CurrentRow.Cells["gvProg"].Value.ToString().Trim());
                            dtVerifier = dsVerifier.Tables[0];
                        }
                        string privAgy = string.Empty, privDept = string.Empty, privProg = string.Empty;
                        foreach (Funnel_RepEntity dr in RepEntity)
                        {
                            if (Agency == "**" || Depart == "**" || Program == "**")
                            {
                                if (privAgy != dr.agency.Trim() && privDept != dr.dept.Trim() && privProg != dr.Prog.Trim())
                                {
                                    dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", dr.agency.Trim(), dr.dept.Trim(), dr.Prog.Trim());
                                    dtVerifier = dsVerifier.Tables[0];

                                    privAgy = dr.agency.Trim(); privDept = dr.dept.Trim(); privProg = dr.Prog.Trim();
                                }
                            }

                            if (dtVerifier.Rows.Count > 0)
                            {
                                string Wrkr_Name = string.Empty;
                                if (!string.IsNullOrEmpty(dr.Worker.ToString().Trim()))
                                {
                                    foreach (DataRow drVerifier in dtVerifier.Rows)
                                    {
                                        if (dr.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                        {
                                            Wrkr_Name = drVerifier["NAME"].ToString().Trim();
                                            break;
                                        }
                                    }
                                }

                                string SiteName = string.Empty;
                                if(propCaseAllSiteEntity.Count>0)
                                {
                                    if (!string.IsNullOrEmpty(dr.Site.Trim()))
                                    {
                                        CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(dr.Site.Trim()));
                                        if (SelSite != null) SiteName = SelSite.SiteNAME.Trim(); else SiteName = string.Empty;
                                        //SiteName = propCaseAllSiteEntity.Find(u => u.SiteAGENCY.Equals(dr.agency.Trim()) && u.SiteNUMBER.Trim().Equals(dr.Site.Trim())).SiteNAME.Trim();
                                    }
                                }


                                //if (dtpFrom.Checked.Equals(true) && dtpFrom.Checked.Equals(true))
                                //{
                                //    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((dr.ACT_DATE.ToString().Trim()))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((dr.ACT_DATE.ToString().Trim()))))
                                //        gvApp.Rows.Add(dr.SNP_APP.ToString().Trim(), dr.App_Name.ToString().Trim(), LookupDataAccess.Getdate(dr.ACT_DATE.ToString().Trim()), Wrkr_Name, SiteName);
                                //}
                                //if (dtpFrom.Checked.Equals(false) && dtpFrom.Checked.Equals(false))
                                    gvApp.Rows.Add(dr.SNP_APP.ToString().Trim(), dr.App_Name.ToString().Trim(), LookupDataAccess.Getdate(dr.ACT_DATE.ToString().Trim()), Wrkr_Name,SiteName,dr.Cost.ToString());
                            }
                        }
                    }
                }
            }
            if (gvApp.Rows.Count > 0)
                gvApp.Rows[0].Selected = true;
        }

        private void gvFunnel_SelectionChanged(object sender, EventArgs e)
        {
            if (chkbDet.Checked.Equals(true))
            {
                this.pnlgvFunnel.Size = new Size(940, 230);
                pnlgvApp.Visible = true;
                FillgvApp();
            }
            else
            {
                pnlgvApp.Visible = false;
                this.pnlgvFunnel.Size = new Size(940, 455);
            }
        }

        private void gvSps_CellClick(object sender, DataGridViewCellEventArgs e)
        {

            if (gvSps.Rows.Count > 0)
            {
                if (e.RowIndex > -1)
                {
                    if (e.ColumnIndex == 0)
                    {
                        if (gvSps.CurrentRow.Cells["Selected"].Value.ToString() == "Y")
                        {
                            gvSps.CurrentRow.Cells["SP_Sel"].Value = false;//Img_Blank;
                            gvSps.CurrentRow.Cells["Selected"].Value = "N";
                        }
                        else
                        {
                            gvSps.CurrentRow.Cells["SP_Sel"].Value = true;//Img_Tick;
                            gvSps.CurrentRow.Cells["Selected"].Value = "Y";
                        }
                    }
                }
            }
        }

        private void chkbDet_CheckedChanged(object sender, EventArgs e)
        {
            if (chkbDet.Checked.Equals(true))
            {
                pnlShowDetailrdb.Visible = true;
                if (gvFunnel.Rows.Count > 0)
                {
                    this.pnlgvFunnel.Size = new Size(940, 230);
                    pnlgvApp.Visible = true;
                    FillgvApp();
                }
            }
            else
            {
                pnlShowDetailrdb.Visible = false;
                pnlgvApp.Visible = false;
                this.pnlgvFunnel.Size = new Size(940, 455);
            }
        }


        private void On_SaveAPP_Pdf(object sender, FormClosedEventArgs e)
        {
            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                string PdfName = "Pdf File";
                PdfName = form.GetFileName();
                //PdfName = strFolderPath + PdfName + "-Details";
                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName + "_AUDIT";
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    { DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim()); }
                }
                catch (Exception ex)
                {
                    AlertBox.Show("Error", MessageBoxIcon.Error);
                }

                try
                {
                    string Tmpstr = PdfName + ".pdf";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = PdfName + newFileName.Substring(0, length) + ".pdf";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    PdfName = Random_Filename;
                else
                    PdfName += ".pdf";

                FileStream fs = new FileStream(PdfName, FileMode.Create);

                Document document = new Document(PageSize.A4, 25, 25, 30, 30);
                PdfWriter writer = PdfWriter.GetInstance(document, fs);
                document.Open();
                BaseFont bf_Calibri1 = BaseFont.CreateFont("c:/windows/fonts/calibri.ttf", BaseFont.WINANSI, BaseFont.EMBEDDED);
                iTextSharp.text.Font Calibri = new iTextSharp.text.Font(bf_Calibri1, 10);
                iTextSharp.text.Font TableFont1 = new iTextSharp.text.Font(bf_Calibri1, 8);
                iTextSharp.text.Font SubHeadFont = new iTextSharp.text.Font(bf_Calibri1, 8, iTextSharp.text.Font.NORMAL, BaseColor.BLACK);
                iTextSharp.text.Font TableFontBoldItalic = new iTextSharp.text.Font(bf_Calibri1, 9, 3);
                iTextSharp.text.Font TblFontBold1 = new iTextSharp.text.Font(bf_Calibri1, 8, iTextSharp.text.Font.BOLD, BaseColor.WHITE);
                iTextSharp.text.Font TblFontItalic = new iTextSharp.text.Font(bf_Calibri1, 9, 2);
                iTextSharp.text.Font Timesline = new iTextSharp.text.Font(bf_Calibri1, 9, 4);
                iTextSharp.text.Font TblFontBoldColor = new iTextSharp.text.Font(bf_Calibri1, 9, 1, BaseColor.BLACK);

                //BaseFont bfTimes = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1250, false);
                //BaseFont bf_Times = BaseFont.CreateFont(BaseFont.TIMES_BOLD, BaseFont.CP1250, false);
                //iTextSharp.text.Font fc = new iTextSharp.text.Font(bfTimes, 10, 2);
                //iTextSharp.text.Font fc1 = new iTextSharp.text.Font(bf_Times, 10, 2, BaseColor.BLUE);
                //iTextSharp.text.Font TableFont = new iTextSharp.text.Font(bfTimes, 9);
                //iTextSharp.text.Font TblFontBold = new iTextSharp.text.Font(bf_Times, 10);

                PdfPTable table = new PdfPTable(8);
                table.TotalWidth = 560f;
                table.WidthPercentage = 100;
                table.LockedWidth = true;
                float[] widths = new float[] { 18f, 55f, 20f, 40f, 35f,18f, 35f, 23f };
                table.SetWidths(widths);
                table.HorizontalAlignment = Element.ALIGN_CENTER;

                //List<CAMASTEntity> CAList = _model.SPAdminData.Browse_CAMAST(null, null, null, null);
                //List<MSMASTEntity> MSList = _model.SPAdminData.Browse_MSMAST(null, null, null, null, null);

                string N_Agy = string.Empty, N_Dept = string.Empty, N_prog = string.Empty, N_Year = string.Empty;
                if (Agency == "**") N_Agy = null; else N_Agy = Agency;
                if (Depart == "**") N_Dept = null; else N_Dept = Depart;
                if (Program == "**") N_prog = null; else N_prog = Program;
                if (CmbYear.Visible == true)
                    N_Year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.Trim(); //else N_Year = null;



                string data = string.Empty; //DataSet dsSP_CaseSP2 = new DataSet(); DataTable dtSP_CaseSP2 = new DataTable();
                bool First = true;
                string Service_Plan = string.Empty, Branch_cd = string.Empty, SP_Desc = string.Empty, Priv_Branch = string.Empty;
                string CaDate = string.Empty, Branch = string.Empty, Service_desc = string.Empty, CAMSDesc = string.Empty;
                string F_Seq = string.Empty, Note_Worker = string.Empty, Note_site = string.Empty;

                foreach (DataGridViewRow drsp in gvSps.Rows)
                {
                    if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                    {
                        Service_Plan = drsp.Cells["SP_Code"].Value.ToString().Trim(); bool CAFirst = true;
                        CASESP0Entity SP0_data = _model.SPAdminData.Browse_CASESP0(Service_Plan, null, null, null, null, null, null, null, null);
                        if (!string.IsNullOrEmpty(SP0_data.BpCode.Trim())) Branch_cd = SP0_data.BpCode.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B1Code.Trim())) Branch_cd += SP0_data.B1Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B2Code.Trim())) Branch_cd += SP0_data.B2Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B3Code.Trim())) Branch_cd += SP0_data.B3Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B4Code.Trim())) Branch_cd += SP0_data.B4Code.Trim();
                        if (!string.IsNullOrEmpty(SP0_data.B5Code.Trim())) Branch_cd += SP0_data.B5Code.Trim();

                        SP_Desc = SP0_data.Desc.Trim();
                        string Allow_Add_Branch = SP0_data.Allow_Add_Branch.Trim();

                        List<Funnel_RepEntity> dsCount = new List<Funnel_RepEntity>(); List<Funnel_RepEntity> dsMSCount = new List<Funnel_RepEntity>();

                        if (N_Agy != null && N_Dept != null && N_prog != null)
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                        }
                        else if (N_Agy != null && N_Dept != null && N_prog == null)
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                        }
                        else if (N_Agy != null && N_Dept == null && N_prog == null)
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                        }
                        else
                        {
                            dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                            dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                        }
                        //DataSet dsCount = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel("CA", N_Agy, N_Dept, N_prog, N_Year, Service_Plan, null, null, null, null,null,null);
                        //DataSet dsMSCount = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel("MS", N_Agy, N_Dept, N_prog, N_Year, Service_Plan, null, null, null, null, null, null);
                        if (dsMSCount.Count > 0 || dsCount.Count > 0)
                        {
                            if (Branch_cd.Length > 0)
                            {
                                for (int i = 0; i < Branch_cd.Length; )
                                {
                                    string Temp_Branch = Branch_cd.Substring(i, 1);
                                    //dsSP_CaseSP2 = DatabaseLayer.SPAdminDB.Browse_CASESP2(Service_Plan, Temp_Branch, null, null);
                                    //dtSP_CaseSP2 = dsSP_CaseSP2.Tables[0];

                                    List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == Service_Plan.Trim()).OrderByDescending(u => u.Branch).ToList();

                                    Priv_Branch = null;
                                    if (casesp2Data.Count > 0)
                                    {

                                        foreach (CASESP2Entity dr in casesp2Data)
                                        {
                                            CAFirst = true;
                                            CaDate = null;
                                            Branch = dr.Branch.ToString().Trim();
                                            if (Service_Plan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                            {
                                                document.Add(table);
                                                table.DeleteBodyRows();
                                                if (!First)
                                                    document.NewPage();
                                                Service_desc = SP0_data.BpDesc.Trim();
                                                if (!First)
                                                {
                                                    if (Branch.Trim() == SP0_data.B1Code.Trim())
                                                        Service_desc = SP0_data.B1Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B2Code.Trim())
                                                        Service_desc = SP0_data.B2Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B3Code.Trim())
                                                        Service_desc = SP0_data.B3Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B4Code.Trim())
                                                        Service_desc = SP0_data.B4Desc.Trim();
                                                    else if (Branch.Trim() == SP0_data.B5Code.Trim())
                                                        Service_desc = SP0_data.B5Desc.Trim();
                                                }

                                                PdfPCell SP_Desc_Header = new PdfPCell(new Phrase("Service: " + SP_Desc.Trim(), TblFontBoldColor));
                                                SP_Desc_Header.HorizontalAlignment = Element.ALIGN_CENTER;
                                                SP_Desc_Header.Colspan = 8;
                                                SP_Desc_Header.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                table.AddCell(SP_Desc_Header);

                                                PdfPCell ServiceDesc = new PdfPCell(new Phrase("Branch: " + Service_desc.Trim(), TblFontBoldColor));
                                                ServiceDesc.HorizontalAlignment = Element.ALIGN_CENTER;
                                                ServiceDesc.Colspan = 8;
                                                ServiceDesc.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                table.AddCell(ServiceDesc);

                                                PdfPCell Headercell1 = new PdfPCell(new Phrase("App No", TblFontBold1));
                                                Headercell1.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                Headercell1.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                Headercell1.BorderColor = BaseColor.WHITE;
                                                Headercell1.FixedHeight = 15f;
                                                table.AddCell(Headercell1);

                                                PdfPCell Headercell2 = new PdfPCell(new Phrase("Applicant Name", TblFontBold1));
                                                Headercell2.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                Headercell2.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                Headercell2.BorderColor = BaseColor.WHITE;
                                                Headercell2.FixedHeight = 15f;
                                                table.AddCell(Headercell2);

                                                PdfPCell Headercell3 = new PdfPCell(new Phrase("Date", TblFontBold1));
                                                Headercell3.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                Headercell3.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                Headercell3.BorderColor = BaseColor.WHITE;
                                                Headercell3.FixedHeight = 15f;
                                                table.AddCell(Headercell3);

                                                PdfPCell Headercell4 = new PdfPCell(new Phrase("Case Worker", TblFontBold1));
                                                Headercell4.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                Headercell4.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                Headercell4.BorderColor = BaseColor.WHITE;
                                                Headercell4.FixedHeight = 15f;
                                                table.AddCell(Headercell4);

                                                PdfPCell Headercell5 = new PdfPCell(new Phrase("Site", TblFontBold1));
                                                Headercell5.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                Headercell5.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                Headercell5.BorderColor = BaseColor.WHITE;
                                                Headercell5.FixedHeight = 15f;
                                                table.AddCell(Headercell5);

                                                Headercell5 = new PdfPCell(new Phrase("Amount", TblFontBold1));
                                                Headercell5.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                Headercell5.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                Headercell5.BorderColor = BaseColor.WHITE;
                                                Headercell5.FixedHeight = 15f;
                                                table.AddCell(Headercell5);

                                                PdfPCell enrl4 = new PdfPCell(new Phrase("Enroll Program", TblFontBold1));
                                                enrl4.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                enrl4.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                enrl4.BorderColor = BaseColor.WHITE;
                                                enrl4.FixedHeight = 15f;
                                                table.AddCell(enrl4);

                                                PdfPCell enrld = new PdfPCell(new Phrase("Enroll Dates", TblFontBold1));
                                                enrld.HorizontalAlignment = Element.ALIGN_LEFT;
                                                //enrld.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                                //enrld.BackgroundColor = BaseColor.LIGHT_GRAY;
                                                enrld.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                                enrld.BorderColor = BaseColor.WHITE;
                                                enrld.FixedHeight = 15f;
                                                table.AddCell(enrld);

                                                Priv_Branch = Branch;
                                                First = false;
                                            }
                                            string CAMSType = dr.Type1.ToString(); string CAMSTypeDesc = string.Empty;
                                            if (CAMSType == "MS") CAMSTypeDesc = "Outcome"; else CAMSTypeDesc = "Service";
                                            string Grp = dr.Orig_Grp.ToString().Trim();
                                            string Search_Caseworker = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                Search_Caseworker = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                            else Search_Caseworker = "";

                                            string Search_Site = string.Empty;
                                            if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                Search_Site = "";
                                            else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                            else Search_Site = "";

                                            List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                            if (CAMSType == "CA")
                                            {
                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                            }
                                            else if (CAMSType == "MS")
                                            {

                                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_GROUP.Equals(Grp) && u.CASEACT_BRANCH.Equals(Branch));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                    else
                                                        RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }

                                            }

                                            if (RepEntity.Count > 0)
                                            {
                                                if (dtpFrom.Checked && dtpTo.Checked)
                                                    RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                            }

                                            //DataSet ds = Captain.DatabaseLayer.SPAdminDB.GetAppforFunnel(CAMSType, N_Agy, N_Dept, N_prog, N_Year, Service_Plan, dr.CamCd.ToString().Trim(), Search_Caseworker, Branch, null,Status,Enrl_hie);
                                            //DataTable dt = ds.Tables[0];

                                            if (RepEntity.Count > 0)
                                            {
                                                if (CAMSType == "CA")
                                                {
                                                    CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                    if (CaEntity != null)
                                                    {
                                                        CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                    }


                                                    //foreach (CAMASTEntity CaEntity in CAList)
                                                    //{
                                                    //    if (CaEntity.Code.Trim() == dr.CamCd.ToString().Trim())
                                                    //    {
                                                    //        CAMSDesc = "Critical Activity : " + CaEntity.Desc.Trim(); break;
                                                    //    }
                                                    //}
                                                }
                                                else
                                                {
                                                    MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                    if (MSEntity != null)
                                                    {
                                                        CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                    }

                                                    //foreach (MSMASTEntity MSEntity in MSList)
                                                    //{
                                                    //    if (MSEntity.Code == dr.CamCd.ToString().Trim())
                                                    //    {
                                                    //        CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                    //        break;
                                                    //    }
                                                    //}
                                                }
                                                if (dtpFrom.Checked.Equals(false))
                                                {
                                                    PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), TableFont1));
                                                    CAMS.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowDesc.Border = iTextSharp.text.Rectangle.BOX;
                                                    CAMS.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    CAMS.BorderColor = BaseColor.WHITE;
                                                    CAMS.Colspan = 8;
                                                    CAMS.FixedHeight = 15f;
                                                    table.AddCell(CAMS);
                                                }
                                                //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                                //DataTable dtVerifier = dsVerifier.Tables[0];

                                                foreach (Funnel_RepEntity drApp in RepEntity)
                                                {
                                                    CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                    Note_Worker = string.Empty;
                                                    HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                    if (hiedata != null)
                                                    {
                                                        Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                    }

                                                    Note_site = string.Empty;
                                                    if (propCaseAllSiteEntity.Count > 0)
                                                    {
                                                        if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                        {
                                                            CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                            if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                            //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                            //if (Note_site == null) Note_site = string.Empty;
                                                        }
                                                    }
                                                    //foreach (DataRow drVerifier in dtVerifier.Rows)
                                                    //{
                                                    //    if (drApp.Worker.ToString().Trim() == drVerifier["PWH_CASEWORKER"].ToString().Trim())
                                                    //    {
                                                    //        Note_Worker = drVerifier["NAME"].ToString().Trim();
                                                    //        break;
                                                    //    }
                                                    //}

                                                    DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                    string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                    string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                    if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                    {
                                                        if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",","").ToString()))
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        else
                                                        {
                                                            for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                            {
                                                                CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                if (casehieName != null)
                                                                    Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                                Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                            }
                                                        }
                                                        if(Enroll_Prog.Trim().Length>0)
                                                            Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                        if(Enroll_Date.Trim().Length>0)
                                                            Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                    }

                                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                    {
                                                        if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                        {
                                                            if (CAFirst)
                                                            {
                                                                PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), TblFontBoldColor));
                                                                CAMS.HorizontalAlignment = Element.ALIGN_LEFT;
                                                                CAMS.Colspan = 8;
                                                                //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                                CAMS.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                                CAMS.BorderColor = BaseColor.WHITE;
                                                                CAMS.FixedHeight = 15f;
                                                                table.AddCell(CAMS);
                                                                CAFirst = false;
                                                            }
                                                            PdfPCell APP = new PdfPCell(new Phrase(drApp.SNP_APP.ToString().Trim(), TableFont1));
                                                            APP.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //APP.Border = iTextSharp.text.Rectangle.BOX;
                                                            APP.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            APP.BorderColor = BaseColor.WHITE;
                                                            APP.FixedHeight = 15f;
                                                            table.AddCell(APP);

                                                            PdfPCell Name = new PdfPCell(new Phrase(drApp.App_Name.ToString().Trim(), TableFont1));
                                                            Name.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //Name.Border = iTextSharp.text.Rectangle.BOX;
                                                            Name.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            Name.BorderColor = BaseColor.WHITE;
                                                            Name.FixedHeight = 15f;
                                                            table.AddCell(Name);

                                                            PdfPCell Date = new PdfPCell(new Phrase(CaDate.Trim(), TableFont1));
                                                            Date.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //Date.Border = iTextSharp.text.Rectangle.BOX;
                                                            Date.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            Date.BorderColor = BaseColor.WHITE;
                                                            Date.FixedHeight = 15f;
                                                            table.AddCell(Date);

                                                            PdfPCell Worker = new PdfPCell(new Phrase(Note_Worker.Trim(), TableFont1));
                                                            Worker.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //Worker.Border = iTextSharp.text.Rectangle.BOX;
                                                            Worker.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            Worker.BorderColor = BaseColor.WHITE;
                                                            Worker.FixedHeight = 15f;
                                                            table.AddCell(Worker);

                                                            PdfPCell Site = new PdfPCell(new Phrase(Note_site.Trim(), TableFont1));
                                                            Site.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //Site.Border = iTextSharp.text.Rectangle.BOX;
                                                            Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            Site.BorderColor = BaseColor.WHITE;
                                                            Site.FixedHeight = 15f;
                                                            table.AddCell(Site);

                                                            Site = new PdfPCell(new Phrase(drApp.Cost.Trim(), TableFont1));
                                                            Site.HorizontalAlignment = Element.ALIGN_RIGHT;
                                                            //Site.Border = iTextSharp.text.Rectangle.BOX;
                                                            Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            Site.BorderColor = BaseColor.WHITE;
                                                            Site.FixedHeight = 15f;
                                                            table.AddCell(Site);

                                                            PdfPCell enrlProg = new PdfPCell(new Phrase(Enroll_Prog.Trim(), TableFont1));
                                                            enrlProg.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //enrlProg.Border = iTextSharp.text.Rectangle.BOX;
                                                            enrlProg.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                            enrlProg.BorderColor = BaseColor.WHITE;
                                                            enrlProg.FixedHeight = 15f;
                                                            table.AddCell(enrlProg);

                                                            PdfPCell enrldt = new PdfPCell(new Phrase(Enroll_Date.Trim(), TableFont1));
                                                            enrldt.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            //enrldt.Border = iTextSharp.text.Rectangle.BOX;
                                                            enrldt.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#f2f9fd"));
                                                            enrldt.BorderColor = BaseColor.WHITE;
                                                            enrldt.FixedHeight = 15f;
                                                            table.AddCell(enrldt);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        PdfPCell APP = new PdfPCell(new Phrase(drApp.SNP_APP.ToString().Trim(), TableFont1));
                                                        APP.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //APP.Border = iTextSharp.text.Rectangle.BOX;
                                                        APP.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                        APP.BorderColor = BaseColor.WHITE;
                                                        APP.FixedHeight = 15f;
                                                        table.AddCell(APP);

                                                        PdfPCell Name = new PdfPCell(new Phrase(drApp.App_Name.ToString().Trim(), TableFont1));
                                                        Name.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //Name.Border = iTextSharp.text.Rectangle.BOX;
                                                        Name.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Name.BorderColor = BaseColor.WHITE;
                                                        Name.FixedHeight = 15f;
                                                        table.AddCell(Name);

                                                        PdfPCell Date = new PdfPCell(new Phrase(CaDate.Trim(), TableFont1));
                                                        Date.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //Date.Border = iTextSharp.text.Rectangle.BOX;
                                                        Date.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Date.BorderColor = BaseColor.WHITE;
                                                        Date.FixedHeight = 15f;
                                                        table.AddCell(Date);

                                                        PdfPCell Worker = new PdfPCell(new Phrase(Note_Worker.Trim(), TableFont1));
                                                        Worker.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //Worker.Border = iTextSharp.text.Rectangle.BOX;
                                                        Worker.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Worker.BorderColor = BaseColor.WHITE;
                                                        Worker.FixedHeight = 15f;
                                                        table.AddCell(Worker);

                                                        PdfPCell Site = new PdfPCell(new Phrase(Note_site.Trim(), TableFont1));
                                                        Site.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //Site.Border = iTextSharp.text.Rectangle.BOX;
                                                        Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Site.BorderColor = BaseColor.WHITE;
                                                        Site.FixedHeight = 15f;
                                                        table.AddCell(Site);

                                                        Site = new PdfPCell(new Phrase(drApp.Cost.Trim(), TableFont1));
                                                        Site.HorizontalAlignment = Element.ALIGN_RIGHT;
                                                        //Site.Border = iTextSharp.text.Rectangle.BOX;
                                                        Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Site.BorderColor = BaseColor.WHITE;
                                                        Site.FixedHeight = 15f;
                                                        table.AddCell(Site);

                                                        PdfPCell enrlProg = new PdfPCell(new Phrase(Enroll_Prog.Trim(), TableFont1));
                                                        enrlProg.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //enrlProg.Border = iTextSharp.text.Rectangle.BOX;
                                                        enrlProg.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        enrlProg.BorderColor = BaseColor.WHITE;
                                                        enrlProg.FixedHeight = 15f;
                                                        table.AddCell(enrlProg);

                                                        PdfPCell enrldt = new PdfPCell(new Phrase(Enroll_Date.Trim(), TableFont1));
                                                        enrldt.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //enrldt.Border = iTextSharp.text.Rectangle.BOX;
                                                        enrldt.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#f2f9fd"));
                                                        enrldt.BorderColor = BaseColor.WHITE;
                                                        enrldt.FixedHeight = 15f;
                                                        table.AddCell(enrldt);
                                                    }

                                                }
                                            }
                                        }
                                    }
                                    i++;
                                }
                            }

                            if (Allow_Add_Branch == "Y")
                            {
                                document.Add(table);
                                table.DeleteBodyRows();
                                if (!First)
                                    document.NewPage();

                                
                                DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(N_Agy, N_Dept, N_prog, N_Year, drsp.Cells["SP_Code"].Value.ToString().Trim());
                                DataTable dt = ds.Tables[0];

                                if (dt.Rows.Count > 0)
                                {
                                    PdfPCell SP_Desc_Header = new PdfPCell(new Phrase("Service: " + SP_Desc.Trim(), TblFontBoldColor));
                                    SP_Desc_Header.HorizontalAlignment = Element.ALIGN_CENTER;
                                    SP_Desc_Header.Colspan = 8;
                                    SP_Desc_Header.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    table.AddCell(SP_Desc_Header);

                                    PdfPCell ServiceDesc = new PdfPCell(new Phrase("Branch: " + "Additional Branch", TblFontBoldColor));
                                    ServiceDesc.HorizontalAlignment = Element.ALIGN_CENTER;
                                    ServiceDesc.Colspan = 8;
                                    ServiceDesc.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                    table.AddCell(ServiceDesc);

                                    string[] HeaderSeq4 = { "App No", "Applicant Name", "Date", "Case Worker", "Site", "Amount", "Enroll Program", "Enroll Dates" };
                                    for (int i = 0; i < HeaderSeq4.Length; ++i)
                                    {
                                        PdfPCell cell = new PdfPCell(new Phrase(HeaderSeq4[i], TblFontBold1));
                                        cell.HorizontalAlignment = Element.ALIGN_LEFT;
                                        //Headercell1.Border = iTextSharp.text.Rectangle.NO_BORDER;
                                        //Headercell1.BackgroundColor = BaseColor.LIGHT_GRAY;
                                        cell.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#0b4775"));
                                        cell.BorderColor = BaseColor.WHITE;
                                        cell.FixedHeight = 15f;
                                        table.AddCell(cell);
                                    }

                                    foreach (DataRow dr in dt.Rows)
                                    {
                                        CAFirst = true;
                                        string CAMSType = dr["SPM2_TYPE"].ToString();
                                        string Search_Caseworker = string.Empty;
                                        if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                            Search_Caseworker = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                            Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                        else Search_Caseworker = "";

                                        string Search_Site = string.Empty;
                                        if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                            Search_Site = "";
                                        else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                            Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                        else Search_Site = "";
                                        List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                        if (CAMSType == "CA")
                                        {
                                            if (N_Agy != null && N_Dept != null && N_prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept != null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept == null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                        }
                                        else if (CAMSType == "MS")
                                        {

                                            if (N_Agy != null && N_Dept != null && N_prog != null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept != null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else if (N_Agy != null && N_Dept == null && N_prog == null)
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                            else
                                            {
                                                if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                else
                                                    RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                            }
                                        }

                                        if (RepEntity.Count > 0)
                                        {
                                            if (dtpFrom.Checked && dtpTo.Checked)
                                                RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                        }

                                        if (RepEntity.Count > 0)
                                        {
                                            if (CAMSType == "CA")
                                            {
                                                CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                if (CaEntity != null)
                                                {
                                                    CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                }
                                            }
                                            else
                                            {
                                                MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                if (MSEntity != null)
                                                {
                                                    CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                }
                                            }

                                            if (dtpFrom.Checked.Equals(false))
                                            {
                                                PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), TblFontBold1));
                                                CAMS.HorizontalAlignment = Element.ALIGN_LEFT;
                                                CAMS.Colspan = 8;
                                                //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                CAMS.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                CAMS.BorderColor = BaseColor.WHITE;
                                                CAMS.FixedHeight = 15f;
                                                table.AddCell(CAMS);
                                            }
                                            //DataSet dsVerifier = DatabaseLayer.CaseMst.GetCaseWorker("I", Agency, Depart, Program);
                                            //DataTable dtVerifier = dsVerifier.Tables[0];

                                            foreach (Funnel_RepEntity drApp in RepEntity)
                                            {
                                                CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                Note_Worker = string.Empty;
                                                HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                if (hiedata != null)
                                                {
                                                    Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                }

                                                Note_site = string.Empty;
                                                if (propCaseAllSiteEntity.Count > 0)
                                                {
                                                    if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                    {
                                                        CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                        if (SelSite != null) Note_site = SelSite.SiteNAME.Trim(); else Note_site = string.Empty;
                                                        //Note_site = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim())).SiteNAME.Trim();
                                                        //if (Note_site == null) Note_site = string.Empty;
                                                    }
                                                }

                                                DataSet dsHie = new DataSet(); string Enroll_Prog = string.Empty; string Enroll_Date = string.Empty;
                                                string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                {
                                                    if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                    {
                                                        for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                        {
                                                            Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                            //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                            //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                            Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                        }
                                                    }
                                                    else
                                                    {
                                                        for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                        {
                                                            CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                            if (casehieName != null)
                                                                Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                            //dsHie = Captain.DatabaseLayer.ADMNB001DB.ADMNB001_GetCashie(Enrl_Fundhie[j].Substring(0, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(2, 2).Trim() + "-" + Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                            //Enroll_Prog += dsHie.Tables[0].Rows[0]["HIE_NAME"].ToString().Trim() + ", ";
                                                            Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                        }
                                                    }
                                                    if (Enroll_Prog.Trim().Length > 0)
                                                        Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                    if (Enroll_Date.Trim().Length > 0)
                                                        Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                }

                                                if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                {
                                                    if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                    {
                                                        if (CAFirst)
                                                        {
                                                            PdfPCell CAMS = new PdfPCell(new Phrase(CAMSDesc.Trim(), TblFontBold1));
                                                            CAMS.HorizontalAlignment = Element.ALIGN_LEFT;
                                                            CAMS.Colspan = 8;
                                                            //CAMS.Border = iTextSharp.text.Rectangle.BOX;
                                                            CAMS.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                            CAMS.BorderColor = BaseColor.WHITE;
                                                            CAMS.FixedHeight = 15f;
                                                            table.AddCell(CAMS);
                                                            CAFirst = false;
                                                        }
                                                        PdfPCell APP = new PdfPCell(new Phrase(drApp.SNP_APP.ToString().Trim(), TableFont1));
                                                        APP.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        APP.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        APP.BorderColor = BaseColor.WHITE;
                                                        APP.FixedHeight = 15f;
                                                        table.AddCell(APP);

                                                        PdfPCell Name = new PdfPCell(new Phrase(drApp.App_Name.ToString().Trim(), TableFont1));
                                                        Name.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        Name.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Name.BorderColor = BaseColor.WHITE;
                                                        Name.FixedHeight = 15f;
                                                        table.AddCell(Name);

                                                        PdfPCell Date = new PdfPCell(new Phrase(CaDate.Trim(), TableFont1));
                                                        Date.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        Date.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Date.BorderColor = BaseColor.WHITE;
                                                        Date.FixedHeight = 15f;
                                                        table.AddCell(Date);

                                                        PdfPCell Worker = new PdfPCell(new Phrase(Note_Worker.Trim(), TableFont1));
                                                        Worker.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        Worker.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Worker.BorderColor = BaseColor.WHITE;
                                                        Worker.FixedHeight = 15f;
                                                        table.AddCell(Worker);

                                                        PdfPCell Site = new PdfPCell(new Phrase(Note_site.Trim(), TableFont1));
                                                        Site.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Site.BorderColor = BaseColor.WHITE;
                                                        Site.FixedHeight = 15f;
                                                        table.AddCell(Site);

                                                        Site = new PdfPCell(new Phrase(drApp.Cost.Trim(), TableFont1));
                                                        Site.HorizontalAlignment = Element.ALIGN_RIGHT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        Site.BorderColor = BaseColor.WHITE;
                                                        Site.FixedHeight = 15f;
                                                        table.AddCell(Site);

                                                        PdfPCell enrlProg = new PdfPCell(new Phrase(Enroll_Prog.Trim(), TableFont1));
                                                        enrlProg.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        enrlProg.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                        enrlProg.BorderColor = BaseColor.WHITE;
                                                        enrlProg.FixedHeight = 15f;
                                                        table.AddCell(enrlProg);

                                                        PdfPCell enrldt = new PdfPCell(new Phrase(Enroll_Date.Trim(), TableFont1));
                                                        enrldt.HorizontalAlignment = Element.ALIGN_LEFT;
                                                        //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                        enrldt.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#f2f9fd"));
                                                        enrldt.BorderColor = BaseColor.WHITE;
                                                        enrldt.FixedHeight = 15f;
                                                        table.AddCell(enrldt);
                                                    }
                                                }
                                                else
                                                {
                                                    PdfPCell APP = new PdfPCell(new Phrase(drApp.SNP_APP.ToString().Trim(), TableFont1));
                                                    APP.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    APP.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#dceaf4"));
                                                    APP.BorderColor = BaseColor.WHITE;
                                                    APP.FixedHeight = 15f;
                                                    table.AddCell(APP);

                                                    PdfPCell Name = new PdfPCell(new Phrase(drApp.App_Name.ToString().Trim(), TableFont1));
                                                    Name.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    Name.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                    Name.BorderColor = BaseColor.WHITE;
                                                    Name.FixedHeight = 15f;
                                                    table.AddCell(Name);

                                                    PdfPCell Date = new PdfPCell(new Phrase(CaDate.Trim(), TableFont1));
                                                    Date.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    Date.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                    Date.BorderColor = BaseColor.WHITE;
                                                    Date.FixedHeight = 15f;
                                                    table.AddCell(Date);

                                                    PdfPCell Worker = new PdfPCell(new Phrase(Note_Worker.Trim(), TableFont1));
                                                    Worker.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    Worker.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                    Worker.BorderColor = BaseColor.WHITE;
                                                    Worker.FixedHeight = 15f;
                                                    table.AddCell(Worker);

                                                    PdfPCell Site = new PdfPCell(new Phrase(Note_site.Trim(), TableFont1));
                                                    Site.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                    Site.BorderColor = BaseColor.WHITE;
                                                    Site.FixedHeight = 15f;
                                                    table.AddCell(Site);

                                                    Site = new PdfPCell(new Phrase(drApp.Cost.Trim(), TableFont1));
                                                    Site.HorizontalAlignment = Element.ALIGN_RIGHT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    Site.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                    Site.BorderColor = BaseColor.WHITE;
                                                    Site.FixedHeight = 15f;
                                                    table.AddCell(Site);

                                                    PdfPCell enrlProg = new PdfPCell(new Phrase(Enroll_Prog.Trim(), TableFont1));
                                                    enrlProg.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    enrlProg.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#ebf4fa"));
                                                    enrlProg.BorderColor = BaseColor.WHITE;
                                                    enrlProg.FixedHeight = 15f;
                                                    table.AddCell(enrlProg);

                                                    PdfPCell enrldt = new PdfPCell(new Phrase(Enroll_Date.Trim(), TableFont1));
                                                    enrldt.HorizontalAlignment = Element.ALIGN_LEFT;
                                                    //RowType.Border = iTextSharp.text.Rectangle.BOX;
                                                    enrldt.BackgroundColor = new BaseColor(System.Drawing.ColorTranslator.FromHtml("#f2f9fd"));
                                                    enrldt.BorderColor = BaseColor.WHITE;
                                                    enrldt.FixedHeight = 15f;
                                                    table.AddCell(enrldt);
                                                }

                                            }
                                        }

                                    }
                                }




                            }


                        }
                    }
                }
                if (table.Rows.Count > 0)
                    document.Add(table);
                else
                {
                    PdfContentByte cb;
                    cb = writer.DirectContent;
                    cb.BeginText();
                    cb.SetFontAndSize(bf_Calibri1, 14);
                    cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "This Service plan having No Postings", 300, 600, 0);
                    cb.EndText();
                }
                document.Close();
                fs.Close();
                fs.Dispose();
            }
        }

        private void Pb_Help_Click(object sender, EventArgs e)
        {
            //Help.ShowHelp(this, Context.Server.MapPath("~\\Resources\\HelpFiles\\Captain_Help.chm"), HelpNavigator.KeywordIndex, "CASB4007");
        }

        private void CASB4007_FunnelReport_ToolClick(object sender, ToolClickEventArgs e)
        {
            Application.Navigate(CommonFunctions.CreateZenHelps(Privileges.Program, 0, BaseForm.BusinessModuleID.ToString(), "", ""), target: "_blank");
        }

        private void btnSaveParameters_Click(object sender, EventArgs e)
        {
            if (ValidateForm())
            {

                ControlCard_Entity Save_Entity = new ControlCard_Entity(true);
                Save_Entity.Scr_Code = Privileges.Program;
                Save_Entity.UserID = BaseForm.UserID;
                Save_Entity.Card_1 = Get_XML_Format_for_Report_Controls();
                Save_Entity.Card_2 = string.Empty;
                Save_Entity.Card_3 = string.Empty;
                Save_Entity.Module = BaseForm.BusinessModuleID;

                Report_Get_SaveParams_Form Save_Form = new Report_Get_SaveParams_Form(Save_Entity, "Save", BaseForm, Privileges);
                Save_Form.StartPosition = FormStartPosition.CenterScreen;
                Save_Form.ShowDialog();
            }
        }

        private void btnGetParameters_Click(object sender, EventArgs e)
        {
            //_errorProvider.SetError(dtpDueDt, null);
            //_errorProvider.SetError(rdoMultipleSites, null);
            ControlCard_Entity Save_Entity = new ControlCard_Entity(true);
            Save_Entity.Scr_Code = Privileges.Program;
            Save_Entity.UserID = BaseForm.UserID;
            Save_Entity.Module = BaseForm.BusinessModuleID;
            Report_Get_SaveParams_Form Save_Form = new Report_Get_SaveParams_Form(Save_Entity, "Get");
            Save_Form.FormClosed += new FormClosedEventHandler(Get_Saved_Parameters);
            Save_Form.StartPosition = FormStartPosition.CenterScreen;
            Save_Form.ShowDialog();
        }

        private void Get_Saved_Parameters(object sender, FormClosedEventArgs e)
        {
            Report_Get_SaveParams_Form form = sender as Report_Get_SaveParams_Form;
            string[] Saved_Parameters = new string[2];
            Saved_Parameters[0] = Saved_Parameters[1] = string.Empty;

            if (form.DialogResult == DialogResult.OK)
            {
                DataTable RepCntl_Table = new DataTable();
                Saved_Parameters = form.Get_Adhoc_Saved_Parameters();

                RepCntl_Table = CommonFunctions.Convert_XMLstring_To_Datatable(Saved_Parameters[0]);
                Set_Report_Controls(RepCntl_Table);


            }
        }

        private string Get_XML_Format_for_Report_Controls()
        {

            //string strSite = rdoAllSite.Checked == true ? "A" : "M";
            //string strFundAll = rbFundAll.Checked == true ? "1" : "2";
            string strShowTask = string.Empty; string PDFType = string.Empty;
            string strChk = string.Empty; string Prog = string.Empty;
            string Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString();
            string Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString();
            if (rbEnrApppBY_Hie.Checked == true)
                Prog = ((Captain.Common.Utilities.ListItem)cmbSelProg.SelectedItem).Value.ToString();
            string Det = string.Empty;

            if (chkbDet.Checked == true)
                strChk = "Y";
            else strChk = "N";


            if (rbAllApp.Checked == true)
                strShowTask = "A";
            else if (rbEnrolApp.Checked == true)
                strShowTask = "E";
            else if (rbEnrApppBY_Hie.Checked == true)
                strShowTask = "H";

            if (rbPDF.Checked == true)
                PDFType= "PDF";
            else if (rbCSV.Checked == true)
                PDFType = "TXT";
            else if (rbBoth.Checked == true)
                PDFType = "BOTH";

            string strsiteRoomNames = string.Empty;
            foreach (DataGridViewRow dr in gvSps.Rows)
            {
                if (dr.Cells["Selected"].Value.ToString().Trim() == "Y")
                {
                    if (!strsiteRoomNames.Equals(string.Empty)) strsiteRoomNames += ",";
                    strsiteRoomNames += dr.Cells["SP_Code"].Value.ToString().Trim();
                }
            }
            string ChkFrmDte = dtpFrom.Checked == true ? "Y" : "N";
            string ChkToDte = dtpTo.Checked == true ? "Y" : "N";
            StringBuilder str = new StringBuilder();
            str.Append("<Rows>");
            str.Append("<Row AGENCY = \"" + Agency + "\" DEPT = \"" + Depart + "\" PROG = \"" + Program +
                            "\" YEAR = \"" + Program_Year + "\" ShowTask = \"" + strShowTask + "\" CheckValue = \"" + strChk +
                            "\"  CFromDate = \"" + ChkFrmDte + "\"  CToDate = \"" + ChkToDte + "\" PDFTYPE = \"" + PDFType +
                            "\"  FromDate = \"" + dtpFrom.Value.Date + "\"  ToDate = \"" + dtpTo.Value.Date +
                            "\" SiteNames = \"" + strsiteRoomNames + "\" CaseWorker = \"" + Caseworker + "\" CaseType = \"" + ((Captain.Common.Utilities.ListItem)cmbCaseType.SelectedItem).Value.ToString() +
                            "\" Site = \"" + Site +
                            "\" EnrolProgram = \"" + Prog + "\" />");
            str.Append("</Rows>");

            return str.ToString();
        }

        private void Set_Report_Controls(DataTable Tmp_Table)
        {
            if (Tmp_Table != null && Tmp_Table.Rows.Count > 0)
            {
                DataRow dr = Tmp_Table.Rows[0];

                Set_Report_Hierarchy(dr["AGENCY"].ToString(), dr["DEPT"].ToString(), dr["PROG"].ToString(), dr["YEAR"].ToString());


                if (dr["ShowTask"].ToString() == "A")
                    rbAllApp.Checked = true;
                else if (dr["ShowTask"].ToString().Trim() == "E")
                    rbEnrolApp.Checked = true;
                else if (dr["ShowTask"].ToString().Trim() == "H")
                {
                    rbEnrApppBY_Hie.Checked = true;
                    cmbSelProg.Visible = true;
                    CommonFunctions.SetComboBoxValue(cmbSelProg, dr["EnrolProgram"].ToString());
                }

                if (dr["CheckValue"].ToString().Trim() == "Y")
                    chkbDet.Checked = true;


                if (dr["PDFTYPE"].ToString() == "PDF")
                    rbPDF.Checked = true;
                else if (dr["PDFTYPE"].ToString().Trim() == "TXT")
                    rbCSV.Checked = true;
                else if (dr["PDFTYPE"].ToString().Trim() == "BOTH")
                    rbBoth.Checked = true;

                string strSites = dr["SiteNames"].ToString();

                foreach (DataGridViewRow row in gvSps.Rows)
                {
                    if (strSites != null)
                    {
                        string[] sitesRooms = strSites.Split(',');
                        for (int i = 0; i < sitesRooms.Length; i++)
                        {
                            if (sitesRooms[i].ToString() == row.Cells["SP_Code"].Value.ToString())
                            {
                                row.Cells["SP_Sel"].Value = Img_Tick;
                                row.Cells["Selected"].Value = "Y";
                                break;
                            }
                        }
                    }
                }
                dtpFrom.Checked = dr["CFromDate"].ToString() == "Y" ? true : false;
                dtpTo.Checked = dr["CToDate"].ToString() == "Y" ? true : false;
                CommonFunctions.SetComboBoxValue(cmbWorker, dr["CaseWorker"].ToString());
                CommonFunctions.SetComboBoxValue(cmbSite, dr["Site"].ToString());
                CommonFunctions.SetComboBoxValue(cmbCaseType, dr["CaseType"].ToString());
                dtpFrom.Value = Convert.ToDateTime(dr["FromDate"]);
                dtpTo.Value = Convert.ToDateTime(dr["ToDate"]);

            }
        }

        // Added by Vikash on 05/12/2023 as part of Funnel Report point in May 2023 Enhancement Document
        private void chbSerOutOnly_CheckedChanged(object sender, EventArgs e)
        {
            if (ValidateForm())
            {

                List<DataGridViewRow> dgvAllRows = gvFunnel.Rows.Cast<DataGridViewRow>().ToList();

                List<DataGridViewRow> dgvValueRows = dgvAllRows.Cast<DataGridViewRow>().Where(x => x.Cells["Count"].Value.ToString().Trim() == string.Empty && x.Cells["Type"].Value.ToString() != string.Empty).ToList();

                if (chbSerOutOnly.Checked)
                {
                    dgvValueRows.ForEach(x => x.Visible = false);
                }
                else
                {
                    dgvValueRows.ForEach(x => x.Visible = true);
                }
            }
        }

        #region Vikash added on 02/04/2025 to convert Excel to DevExpress Format

        private void On_ExcelForm_Closed_DevExpress(object sender, FormClosedEventArgs e)
        {
            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                #region FileNameBuild

                string PdfName = "Pdf File";
                PdfName = form.GetFileName();

                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName;// + "_AUDIT";

                Random_Filename = null;
                string xlFileName = PdfName;
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    {
                        DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim());
                    }
                }
                catch (Exception ex)
                {
                    CommonFunctions.MessageBoxDisplay("Error");
                }

                try
                {
                    string Tmpstr = xlFileName + ".xlsx";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = xlFileName + newFileName.Substring(0, length) + ".xlsx";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    xlFileName = Random_Filename;
                else
                    xlFileName += ".xlsx";

                string _excelPath = xlFileName;

                #endregion

                try
                {
                    using (DevExpress.Spreadsheet.Workbook wb = new DevExpress.Spreadsheet.Workbook())
                    {
                        DevExpress_Excel_Properties oDevExpress_Excel_Properties = new DevExpress_Excel_Properties();
                        oDevExpress_Excel_Properties.sxlbook = wb;
                        oDevExpress_Excel_Properties.sxlTitleFont = "calibri";
                        oDevExpress_Excel_Properties.sxlbodyFont = "calibri";

                        oDevExpress_Excel_Properties.getDevexpress_Excel_Properties();

                        #region Parameters Page

                        DevExpress.Spreadsheet.Worksheet paramSheet = wb.Worksheets[0];
                        paramSheet.Name = "Params";
                        paramSheet.ActiveView.TabColor = Color.ForestGreen;
                        paramSheet.ActiveView.ShowGridlines = false;
                        wb.Unit = DevExpress.Office.DocumentUnit.Point;

                        paramSheet.Columns[1].Width = 80;
                        paramSheet.Columns[2].Width = 80;
                        paramSheet.Columns[3].Width = 50;
                        paramSheet.Columns[4].Width = 80;
                        paramSheet.Columns[5].Width = 200;

                        int _Rowindex = 0;
                        int _Columnindex = 0;

                        string strAgy = Current_Hierarchy_DB.Split('-')[0];

                        AgencyControlEntity BAgyControlDetails = _model.ZipCodeAndAgency.GetAgencyControlFile(strAgy);

                        string ImgName = "";
                        if (BaseForm.BaseAgencyControlDetails.AgyShortName == "NEOCAA")
                        {
                            ImgName = "NEOCAA_" + strAgy + "_LOGO.png";
                        }
                        else
                            ImgName = BaseForm.BaseAgencyControlDetails.AgyShortName + "_00_LOGO.png";

                        _Rowindex = 1;
                        _Columnindex = 1;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = BAgyControlDetails.AgyName;
                        paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.xTitleCellstyle;
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);
                        paramSheet.Rows[_Rowindex][_Columnindex].Font.Size = 18;
                        _Rowindex++;

                        string imagesPath = "https://capsysdev.capsystems.com/images/PIPlogos/" + ImgName;
                        DevExpress.Spreadsheet.SpreadsheetImageSource imgsrc = DevExpress.Spreadsheet.SpreadsheetImageSource.FromUri(imagesPath, wb);
                        DevExpress.Spreadsheet.Picture pic = paramSheet.Pictures.AddPicture(imgsrc, 20, 0, 120, 70);


                        AgencyControlEntity _agycntrldets = new AgencyControlEntity();
                        _agycntrldets = BaseForm.BaseAgencyControlDetails;

                        if (BaseForm.BaseAgencyControlDetails.AgyShortName == "NEOCAA")
                            _agycntrldets = BAgyControlDetails;
                        else
                            _agycntrldets = BaseForm.BaseAgencyControlDetails;

                        string street = _agycntrldets.Street == "" ? "" : (_agycntrldets.Street + ", ");
                        string city = _agycntrldets.City == "" ? "" : (_agycntrldets.City + ", ");
                        string state = _agycntrldets.State == "" ? "" : (_agycntrldets.State + ", ");
                        string zip1 = _agycntrldets.Zip1 == "" ? "" : _agycntrldets.Zip1.PadLeft(5, '0');

                        string strAddress = street + city + state + zip1;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = strAddress;
                        paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlEMPTC;
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);

                        _Rowindex++;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = "";
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);

                        _Rowindex++;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = Privileges.PrivilegeName;
                        paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.reportNameStyle;
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);

                        _Rowindex++;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = "Report Parameters";
                        paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.xTitleCellstyle2;
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);

                        string Agy = "All";
                        string Dept = "All";
                        string Prg = "All";
                        string program_year = string.Empty;
                        if (Current_Hierarchy.Substring(0, 2) != "**")
                            Agy = Current_Hierarchy.Substring(0, 2);
                        if (Current_Hierarchy.Substring(2, 2) != "**")
                            Dept = Current_Hierarchy.Substring(2, 2);
                        if (Current_Hierarchy.Substring(4, 2) != "**")
                            Prg = Current_Hierarchy.Substring(4, 2);
                        if (CmbYear.Visible == true)
                            program_year = "Year: " + ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString();

                        if (CmbYear.Visible == true)
                        {
                            _Rowindex++;
                            paramSheet.Rows[_Rowindex][_Columnindex].Value = Txt_HieDesc.Text.Trim() + "   " + program_year;
                            paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.xsubTitleintakeCellstyle;
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);
                        }
                        else
                        {
                            _Rowindex++;
                            paramSheet.Rows[_Rowindex][_Columnindex].Value = Txt_HieDesc.Text.Trim();
                            paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.xsubTitleintakeCellstyle;
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);
                        }

                        _Rowindex++;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = "";
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 5);

                        bool Sel = true;
                        string serv = string.Empty;
                        foreach (DataGridViewRow row in gvSps.Rows)
                        {
                            if (row.Cells["Selected"].Value.ToString().Trim() == "Y")
                            {
                                serv += row.Cells["Service_Plan"].Value.ToString().Trim() + ",";
                            }
                            else if (row.Cells["Selected"].Value.ToString().Trim() == "N")
                                Sel = false;
                        }

                        string descserv = "All Service Plans";
                        if (!Sel)
                            descserv = serv.Substring(0, serv.Length - 1);

                        _Rowindex++;
                        _Columnindex = 1;

                        if (!Sel)
                        {
                            paramSheet.Rows[_Rowindex][_Columnindex].Value = "Selected Sevice Plan(s)";
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                            _Columnindex = _Columnindex + 2;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = descserv;
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                            _Columnindex = _Columnindex + 3;
                        }
                        else
                        {
                            paramSheet.Rows[_Rowindex][_Columnindex].Value = "Sevice Plan";
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                            _Columnindex = _Columnindex + 2;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = descserv;
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                            _Columnindex = _Columnindex + 3;
                        }

                        _Rowindex++;
                        _Columnindex = 1;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = lblCaseworker.Text.Trim();
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                        _Columnindex = _Columnindex + 2;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Text.ToString();
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                        _Columnindex = _Columnindex + 3;

                        _Rowindex++;
                        _Columnindex = 1;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = lblCaseType.Text.Trim();
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                        _Columnindex = _Columnindex + 2;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = ((Captain.Common.Utilities.ListItem)cmbCaseType.SelectedItem).Text.ToString();
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                        _Columnindex = _Columnindex + 3;

                        _Rowindex++;
                        _Columnindex = 1;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = lblSite.Text;
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                        _Columnindex = _Columnindex + 2;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Text.ToString();
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                        _Columnindex = _Columnindex + 3;

                        if (dtpFrom.Checked == true)
                        {
                            _Rowindex++;
                            _Columnindex = 1;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = lblDateRangeFrom.Text;
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                            _Columnindex = _Columnindex + 2;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = dtpFrom.Text + ", To: " + dtpTo.Text;
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                            _Columnindex = _Columnindex + 3;
                        }

                        _Rowindex++;
                        _Columnindex = 1;

                        string EnrlProg = string.Empty;
                        if (rbAllApp.Checked == true)
                            EnrlProg = rbAllApp.Text.Trim();
                        else if (rbEnrolApp.Checked == true)
                            EnrlProg = rbEnrolApp.Text.Trim();
                        else if (rbEnrApppBY_Hie.Checked == true)
                            EnrlProg = rbEnrApppBY_Hie.Text.Trim();

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = lblEnrollPRog.Text.Trim();
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                        _Columnindex = _Columnindex + 2;

                        paramSheet.Rows[_Rowindex][_Columnindex].Value = EnrlProg;
                        oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                        _Columnindex = _Columnindex + 3;

                        if (rbEnrApppBY_Hie.Checked == true)
                        {
                            _Rowindex++;
                            _Columnindex = 1;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = lblSelProg.Text.Trim();
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                            _Columnindex = _Columnindex + 2;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = cmbSelProg.Text.Trim();
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                            _Columnindex = _Columnindex + 3;
                        }

                        if (chbSerOutOnly.Checked)
                        {
                            _Rowindex++;
                            _Columnindex = 1;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = chbSerOutOnly.Text.Trim();
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 2, oDevExpress_Excel_Properties.paramsCellStyle);
                            _Columnindex = _Columnindex + 2;

                            paramSheet.Rows[_Rowindex][_Columnindex].Value = "Yes";
                            oDevExpress_Excel_Properties.xlRowsMerge(paramSheet, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlNLC);
                            _Columnindex = _Columnindex + 3;
                        }

                        _Rowindex++;
                        _Columnindex = 1;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = "";
                        _Columnindex = _Columnindex + 5;

                        _Rowindex = _Rowindex + 3;
                        _Columnindex = 5;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = "Generated By: " + BaseForm.UserID;
                        paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlGenerate_lr;

                        _Rowindex++;
                        paramSheet.Rows[_Rowindex][_Columnindex].Value = "Generated On: " + DateTime.Now.ToString("MM/dd/yyyy hh:mm:ss tt");
                        paramSheet.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlGenerate_lr;

                        paramSheet.Rows[_Rowindex].AutoFit();
                        paramSheet.IgnoredErrors.Add(paramSheet.GetDataRange(), DevExpress.Spreadsheet.IgnoredErrorType.NumberAsText);

                        #endregion

                        #region Data Printing

                        DevExpress.Spreadsheet.Worksheet SheetDetails = wb.Worksheets.Add("Funnel Report");
                        SheetDetails.ActiveView.ShowGridlines = false;
                        wb.Unit = DevExpress.Office.DocumentUnit.Point;

                        #region Column Widths

                        SheetDetails.Columns[0].Width = 50;
                        SheetDetails.Columns[1].Width = 500;
                        SheetDetails.Columns[2].Width = 50;

                        #endregion

                        string Year_Value = string.Empty;
                        if (CmbYear.Visible == true)
                            Year_Value = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.ToString().Trim();

                        string SP_Agy = string.Empty, SP_Dept = string.Empty, SP_Prog = string.Empty;
                        if (Agency == "**")
                            SP_Agy = null;
                        else
                            SP_Agy = Agency;
                        if (Depart == "**")
                            SP_Dept = null;
                        else
                            SP_Dept = Depart;
                        if (Program == "**")
                            SP_Prog = null;
                        else
                            SP_Prog = Program;

                        string CAMSDesc = null;
                        string SerVicePlan = null;
                        string SP_Desc = null;
                        bool First = true;
                        string Branch = null, Priv_Branch = null;

                        List<AgyCommonFillEntity> Apps = new List<AgyCommonFillEntity>();

                        foreach (Funnel_RepEntity row in CAFunnel)
                        {
                            Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));
                        }

                        foreach (Funnel_RepEntity row in MSFunnel)
                            Apps.Add(new AgyCommonFillEntity(row.SNP_APP, row.SERVICEPLAN, row.ACT_DATE, row.ESTATUS, row.FUND));

                        List<AgyCommonFillEntity> Selapps = new List<AgyCommonFillEntity>();
                        if (dtpFrom.Checked == true && dtpTo.Checked == true)
                            Apps = Apps.FindAll(u => Convert.ToDateTime(u.Desc) <= Convert.ToDateTime(dtpTo.Value.ToString()) && Convert.ToDateTime(u.Desc) >= Convert.ToDateTime(dtpFrom.Value.ToString()));

                        CASESP0Entity SP_Sel_Service = new CASESP0Entity();

                        _Rowindex = _Columnindex = 0;

                        foreach (DataGridViewRow drsp in gvSps.Rows)
                        {
                            if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                            {
                                SerVicePlan = drsp.Cells["SP_Code"].Value.ToString().Trim();

                                Selapps = Apps.FindAll(u => u.Deflt.Equals(SerVicePlan));
                                var appcount = Selapps.Select(u => u.Code).Distinct().ToList();

                                SP_Sel_Service = SP_Services.Find(u => u.Code.Trim().Equals(SerVicePlan.Trim()));

                                string Allow_Add_Branch = SP_Sel_Service.Allow_Add_Branch.Trim();

                                List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == SerVicePlan.Trim()).OrderByDescending(u => u.Branch).ToList();
                                SP_Desc = SP_Sel_Service.Desc.ToString().Trim();
                                Priv_Branch = null;

                                if (casesp2Data.Count > 0)
                                {
                                    foreach (CASESP2Entity dr in casesp2Data)
                                    {
                                        Branch = dr.Branch.ToString().Trim();
                                        if (SerVicePlan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                        {
                                            string Service_desc = SP_Sel_Service.BpDesc.ToString();
                                            if (!First)
                                            {
                                                if (Branch.Trim() == SP_Sel_Service.B1Code.ToString().Trim())
                                                    Service_desc = SP_Sel_Service.B1Desc.ToString();
                                                else if (Branch.Trim() == SP_Sel_Service.B2Code.ToString().Trim())
                                                    Service_desc = SP_Sel_Service.B2Desc.ToString();
                                                else if (Branch.Trim() == SP_Sel_Service.B3Code.ToString().Trim())
                                                    Service_desc = SP_Sel_Service.B3Desc.ToString();
                                                else if (Branch.Trim() == SP_Sel_Service.B4Code.ToString().Trim())
                                                    Service_desc = SP_Sel_Service.B4Desc.ToString();
                                                else if (Branch.Trim() == SP_Sel_Service.B5Code.ToString().Trim())
                                                    Service_desc = SP_Sel_Service.B5Desc.ToString();
                                            }

                                            #region Column Headers

                                            _Rowindex = _Rowindex + 2;
                                            _Columnindex = 0;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")";
                                            oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex = _Columnindex + 3;

                                            _Rowindex++;
                                            _Columnindex = 0;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Branch: " + Service_desc.Trim();
                                            oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex = _Columnindex + 3;

                                            _Rowindex++;
                                            _Columnindex = 0;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Type";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Description";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Count";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleC;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;

                                            #endregion

                                            Priv_Branch = Branch;
                                            First = false;
                                        }

                                        string CAMSType = dr.Type1.ToString();
                                        string CAMSTypeDesc = string.Empty;

                                        if (CAMSType == "MS")
                                            CAMSTypeDesc = "Outcome";
                                        else
                                            CAMSTypeDesc = "Service";

                                        string Grp = dr.Orig_Grp.ToString().Trim();

                                        if (CAMSType == "CA")
                                        {
                                            List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());

                                            if (dsCAMAST.Count > 0)
                                            {
                                                CAMSDesc = dsCAMAST[0].Desc.ToString();

                                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                    CA_Entity.Caseworker = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                    CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                else
                                                    CA_Entity.Caseworker = "";

                                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                    CA_Entity.Site = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                    CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                else
                                                    CA_Entity.Site = "";

                                                List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                                string CAmsCode = dr.CamCd.ToString().Trim();

                                                if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                    else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                    else
                                                        CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }

                                                if (CAApp.Count > 0)
                                                {
                                                    string Priv_Type = null, Priv_Cams_Desc = null;

                                                    if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                    {
                                                        int datecnt = 0;
                                                        decimal TAmount = 0;

                                                        List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));

                                                        if (SelCaseact.Count > 0)
                                                        {
                                                            if (dr.SP2_COUNT_TYPE == "A")
                                                            {
                                                                List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
                                                                decimal TotalCost = 0;
                                                                if (SelRecs.Count > 0)
                                                                {
                                                                    TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                                    TAmount = ((TotalCost / SelRecs.Count));
                                                                }
                                                            }
                                                            else if (dr.SP2_COUNT_TYPE == "S")
                                                            {
                                                                List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");

                                                                if (SelRecs.Count > 0)
                                                                {
                                                                    TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                                    //TAmount = ((TotalCost / SelRecs.Count) * 100);
                                                                }
                                                            }
                                                            else if (dr.SP2_COUNT_TYPE == "E")
                                                            {
                                                                List<Funnel_RepEntity> SelRecs = SelCaseact.FindAll(u => u.Cost != "");
                                                                if (SelRecs.Count > 0)
                                                                {
                                                                    SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                                    TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                                }
                                                            }
                                                            else
                                                                datecnt = SelCaseact.Count;
                                                        }

                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSTypeDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = TAmount.ToString("0.00").Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                        else if (datecnt == 0)
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                        else
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = datecnt.ToString().Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSTypeDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        Priv_Type = CAMSTypeDesc.Trim();

                                                        Priv_Cams_Desc = CAMSDesc.Trim();

                                                        decimal TAmount = 0;

                                                        if (dr.SP2_COUNT_TYPE == "A")
                                                        {
                                                            List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                            decimal TotalCost = 0;
                                                            if (SelRecs.Count > 0)
                                                            {
                                                                TotalCost = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));

                                                                TAmount = ((TotalCost / SelRecs.Count));
                                                            }
                                                        }
                                                        else if (dr.SP2_COUNT_TYPE == "S")
                                                        {
                                                            List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");

                                                            if (SelRecs.Count > 0)
                                                            {
                                                                TAmount = SelRecs.Sum(u => Convert.ToDecimal(u.Cost.Trim()));
                                                            }
                                                        }
                                                        else if (dr.SP2_COUNT_TYPE == "E")
                                                        {
                                                            List<Funnel_RepEntity> SelRecs = CAApp.FindAll(u => u.Cost != "");
                                                            if (SelRecs.Count > 0)
                                                            {
                                                                SelRecs = SelRecs.OrderByDescending(u => Convert.ToDateTime(u.ACT_DATE.Trim())).ToList();
                                                                TAmount = Convert.ToDecimal(SelRecs[0].Cost.Trim());
                                                            }
                                                        }

                                                        if (!string.IsNullOrEmpty(dr.SP2_COUNT_TYPE.Trim()))
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = TAmount.ToString("0.00").Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                        else
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAApp.Count.ToString().Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    _Rowindex++;
                                                    _Columnindex = 0;

                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSTypeDesc.Trim();
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                    _Columnindex++;

                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                    _Columnindex++;

                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                    _Columnindex++;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr.CamCd.ToString().Trim());

                                            if (MSMast.Count > 0)
                                            {
                                                List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();

                                                CAMSDesc = MSMast[0].Desc.ToString();
                                                string MSType = MSMast[0].Type1.ToString();
                                                string Type_Desc = string.Empty;
                                                Type_Desc = "Outcome";

                                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                    Search_MS_Details.CaseWorker = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                    Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                else
                                                    Search_MS_Details.CaseWorker = "";

                                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                    Search_MS_Details.Site = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                    Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                else
                                                    Search_MS_Details.Site = "";

                                                string CAmsCode = dr.CamCd.ToString().Trim();
                                                if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }
                                                else
                                                {
                                                    if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                    else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                    else
                                                        MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                }

                                                if (MSApp.Count > 0)
                                                {
                                                    if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
                                                    {
                                                        int DateCount = 0;
                                                        List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                        if (SelCaseact.Count > 0)
                                                            DateCount = SelCaseact.Count;

                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = Type_Desc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        if (DateCount == 0)
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                        else
                                                        {
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = DateCount.ToString().Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }

                                                    }
                                                    else
                                                    {
                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = Type_Desc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = MSApp.Count.ToString();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;
                                                    }
                                                }
                                                else
                                                {
                                                    _Rowindex++;
                                                    _Columnindex = 0;

                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = Type_Desc.Trim();
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                    _Columnindex++;

                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                    _Columnindex++;

                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                    _Columnindex++;
                                                }
                                            }
                                        }
                                    }
                                }

                                if (Allow_Add_Branch == "Y")
                                {
                                    DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(SP_Agy, SP_Dept, SP_Prog, Year_Value, SerVicePlan);
                                    DataTable dtAdd = ds.Tables[0];

                                    if (dtAdd.Rows.Count > 0)
                                    {
                                        #region Column Headers

                                        _Rowindex = _Rowindex + 2;
                                        _Columnindex = 0;

                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Service: " + SP_Desc.Trim() + " (APPS " + appcount.Count + ")";
                                        oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                        _Columnindex = _Columnindex + 3;

                                        _Rowindex++;

                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Branch: " + "Additional Branch".Trim();
                                        oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 3, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                        _Columnindex = _Columnindex + 3;

                                        _Rowindex++;

                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Type";
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                        _Columnindex++;

                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Description";
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                        _Columnindex++;

                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Count";
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleC;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;

                                        #endregion

                                        foreach (DataRow dr in dtAdd.Rows)
                                        {
                                            string CAMSType = dr["SPM2_TYPE"].ToString();

                                            string CAMSTypeDesc = string.Empty;

                                            if (CAMSType == "MS")
                                                CAMSTypeDesc = "Outcome";
                                            else
                                                CAMSTypeDesc = "Service";

                                            if (CAMSType == "CA")
                                            {
                                                List<CAMASTEntity> dsCAMAST = propCAList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());

                                                if (dsCAMAST.Count > 0)
                                                {
                                                    CAMSDesc = dsCAMAST[0].Desc.ToString();

                                                    if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                        CA_Entity.Caseworker = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                        CA_Entity.Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                    else
                                                        CA_Entity.Caseworker = "";

                                                    if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                        CA_Entity.Site = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                        CA_Entity.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                    else
                                                        CA_Entity.Site = "";

                                                    List<Funnel_RepEntity> CAApp = new List<Funnel_RepEntity>();
                                                    string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim();

                                                    if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                    }
                                                    else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                    }
                                                    else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else
                                                            CAApp = CAFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()) && !string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()) && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Caseworker.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Worker.Trim().Equals(CA_Entity.Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(CA_Entity.Site.Trim()))
                                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9") && u.Site.Trim().Equals(CA_Entity.Site.Trim()));
                                                        else
                                                            CAApp = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Equals("9"));
                                                    }

                                                    if (CAApp.Count > 0)
                                                    {
                                                        string Priv_Type = null, Priv_Cams_Desc = null;

                                                        if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                        {
                                                            int datecnt = 0;
                                                            List<Funnel_RepEntity> SelCaseact = CAApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                            if (SelCaseact.Count > 0)
                                                                datecnt = SelCaseact.Count;

                                                            _Rowindex++;
                                                            _Columnindex = 0;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSTypeDesc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            Priv_Type = CAMSTypeDesc.Trim();

                                                            if (datecnt == 0)
                                                            {
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;
                                                            }
                                                            else
                                                            {
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = datecnt.ToString().Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            _Rowindex++;
                                                            _Columnindex = 0;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSTypeDesc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            Priv_Type = CAMSTypeDesc.Trim();

                                                            Priv_Cams_Desc = CAMSDesc.Trim();

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAApp.Count.ToString();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSTypeDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                List<MSMASTEntity> MSMast = propMSList.FindAll(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                if (MSMast.Count > 0)
                                                {
                                                    List<Funnel_RepEntity> MSApp = new List<Funnel_RepEntity>();

                                                    CAMSDesc = MSMast[0].Desc.ToString();

                                                    string MSType = MSMast[0].Type1.ToString();

                                                    string Type_Desc = string.Empty;

                                                    Type_Desc = "Outcome";

                                                    if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                        Search_MS_Details.CaseWorker = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                        Search_MS_Details.CaseWorker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                    else
                                                        Search_MS_Details.CaseWorker = "";

                                                    if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                        Search_MS_Details.Site = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                        Search_MS_Details.Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                    else
                                                        Search_MS_Details.Site = "";

                                                    string CAmsCode = dr["SPM2_CAMS_CODE"].ToString().Trim();
                                                    if (SP_Agy != null && SP_Dept != null && SP_Prog != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.Prog.Equals(SP_Prog) && u.Year.Trim().Equals(Year_Value.Trim()) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else if (SP_Agy != null && SP_Dept != null && SP_Prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.dept.Equals(SP_Dept) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else if (SP_Agy != null && SP_Dept == null && SP_Prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else
                                                            MSApp = MSFunnel.FindAll(u => u.agency.Equals(SP_Agy) && u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()) && !string.IsNullOrEmpty(Search_MS_Details.Site.Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()) && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.CaseWorker.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_MS_Details.CaseWorker.Trim().Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_MS_Details.Site.Trim().Trim()))
                                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_MS_Details.Site.Trim().Trim()));
                                                        else
                                                            MSApp = MSFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(SP_Sel_Service.Code) && u.CAMS_CODE.Trim().Equals(CAmsCode) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }

                                                    if (MSApp.Count > 0)
                                                    {
                                                        if ((dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true)))
                                                        {
                                                            int DateCount = 0;

                                                            List<Funnel_RepEntity> SelCaseact = MSApp.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                            if (SelCaseact.Count > 0)
                                                                DateCount = SelCaseact.Count;

                                                            _Rowindex++;
                                                            _Columnindex = 0;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = Type_Desc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            if (DateCount == 0)
                                                            {
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;
                                                            }
                                                            else
                                                            {
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = DateCount.ToString().Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            _Rowindex++;
                                                            _Columnindex = 0;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = Type_Desc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = MSApp.Count.ToString();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = Type_Desc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBCC_Blue_Borders;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex++;
                                                    }
                                                }
                                            }

                                        }
                                    }
                                }
                            }
                        }

                        SheetDetails.IgnoredErrors.Add(SheetDetails.GetDataRange(), DevExpress.Spreadsheet.IgnoredErrorType.NumberAsText);

                        wb.Sheets.ActiveSheet = paramSheet;

                        wb.SaveDocument(_excelPath, DevExpress.Spreadsheet.DocumentFormat.OpenXml);

                        //try
                        //{
                        //    string localFilePath = _excelPath;
                        //    /// Need to check for null value of localFilePath, etc...
                        //    FileInfo fiDownload = new FileInfo(localFilePath);
                        //    /// Need to check for file exists, is local file, is allow to read, etc...
                        //    string name = fiDownload.Name;
                        //    using (FileStream fileStream = fiDownload.OpenRead())
                        //    {
                        //        Application.Download(fileStream, name);
                        //    }
                        //}
                        //catch (Exception ex)
                        //{
                        //}

                        #endregion
                    }
                }
                catch (Exception ex)
                {

                }
            }
        }

        private void On_SaveAPP_Excel_DevExpress(object sender, FormClosedEventArgs e)
        {

            PdfListForm form = sender as PdfListForm;
            if (form.DialogResult == DialogResult.OK)
            {
                #region FileNameBuild

                string PdfName = "Pdf File";
                PdfName = form.GetFileName();

                PdfName = propReportPath + BaseForm.UserID + "\\" + PdfName + "_AUDIT";

                Random_Filename = null;
                string xlFileName = PdfName;
                try
                {
                    if (!Directory.Exists(propReportPath + BaseForm.UserID.Trim()))
                    {
                        DirectoryInfo di = Directory.CreateDirectory(propReportPath + BaseForm.UserID.Trim());
                    }
                }
                catch (Exception ex)
                {
                    CommonFunctions.MessageBoxDisplay("Error");
                }

                try
                {
                    string Tmpstr = xlFileName + ".xlsx";
                    if (File.Exists(Tmpstr))
                        File.Delete(Tmpstr);
                }
                catch (Exception ex)
                {
                    int length = 8;
                    string newFileName = System.Guid.NewGuid().ToString();
                    newFileName = newFileName.Replace("-", string.Empty);

                    Random_Filename = xlFileName + newFileName.Substring(0, length) + ".xlsx";
                }

                if (!string.IsNullOrEmpty(Random_Filename))
                    xlFileName = Random_Filename;
                else
                    xlFileName += ".xlsx";

                string _excelPath = xlFileName;

                #endregion

                try
                {
                    using (DevExpress.Spreadsheet.Workbook wb = new DevExpress.Spreadsheet.Workbook())
                    {
                        DevExpress_Excel_Properties oDevExpress_Excel_Properties = new DevExpress_Excel_Properties();
                        oDevExpress_Excel_Properties.sxlbook = wb;
                        oDevExpress_Excel_Properties.sxlTitleFont = "calibri";
                        oDevExpress_Excel_Properties.sxlbodyFont = "calibri";

                        oDevExpress_Excel_Properties.getDevexpress_Excel_Properties();

                        #region Data Printing

                        DevExpress.Spreadsheet.Worksheet SheetDetails = wb.Worksheets[0];
                        SheetDetails.Name = "Audit";
                        SheetDetails.ActiveView.ShowGridlines = false;
                        wb.Unit = DevExpress.Office.DocumentUnit.Point;

                        #region Column Widths

                        SheetDetails.Columns[0].Width = 60;
                        SheetDetails.Columns[1].Width = 150;
                        SheetDetails.Columns[2].Width = 60;
                        SheetDetails.Columns[3].Width = 100;
                        SheetDetails.Columns[4].Width = 90;
                        SheetDetails.Columns[5].Width = 80;
                        SheetDetails.Columns[6].Width = 80;
                        SheetDetails.Columns[7].Width = 80;

                        #endregion

                        int _Rowindex = 0;
                        int _Columnindex = 0;

                        string N_Agy = string.Empty, N_Dept = string.Empty, N_prog = string.Empty, N_Year = string.Empty;
                        if (Agency == "**")
                            N_Agy = null;
                        else
                            N_Agy = Agency;
                        if (Depart == "**")
                            N_Dept = null;
                        else
                            N_Dept = Depart;
                        if (Program == "**")
                            N_prog = null;
                        else
                            N_prog = Program;
                        if (CmbYear.Visible == true)
                            N_Year = ((Captain.Common.Utilities.ListItem)CmbYear.SelectedItem).Text.Trim(); //else N_Year = null;

                        string data = string.Empty;
                        bool First = true;
                        string Service_Plan = string.Empty, Branch_cd = string.Empty, SP_Desc = string.Empty, Priv_Branch = string.Empty;
                        string CaDate = string.Empty, Branch = string.Empty, Service_desc = string.Empty, CAMSDesc = string.Empty;
                        string F_Seq = string.Empty, Note_Worker = string.Empty, Note_site = string.Empty;

                        foreach (DataGridViewRow drsp in gvSps.Rows)
                        {
                            if (drsp.Cells["Selected"].Value.ToString().Trim() == "Y")
                            {
                                Service_Plan = drsp.Cells["SP_Code"].Value.ToString().Trim();
                                bool CAFirst = true;
                                CASESP0Entity SP0_data = _model.SPAdminData.Browse_CASESP0(Service_Plan, null, null, null, null, null, null, null, null);
                                if (!string.IsNullOrEmpty(SP0_data.BpCode.Trim()))
                                    Branch_cd = SP0_data.BpCode.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B1Code.Trim()))
                                    Branch_cd += SP0_data.B1Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B2Code.Trim()))
                                    Branch_cd += SP0_data.B2Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B3Code.Trim()))
                                    Branch_cd += SP0_data.B3Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B4Code.Trim()))
                                    Branch_cd += SP0_data.B4Code.Trim();
                                if (!string.IsNullOrEmpty(SP0_data.B5Code.Trim()))
                                    Branch_cd += SP0_data.B5Code.Trim();

                                SP_Desc = SP0_data.Desc.Trim();
                                string Allow_Add_Branch = SP0_data.Allow_Add_Branch.Trim();

                                List<Funnel_RepEntity> dsCount = new List<Funnel_RepEntity>();
                                List<Funnel_RepEntity> dsMSCount = new List<Funnel_RepEntity>();

                                if (N_Agy != null && N_Dept != null && N_prog != null)
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()));
                                }
                                else if (N_Agy != null && N_Dept != null && N_prog == null)
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept));
                                }
                                else if (N_Agy != null && N_Dept == null && N_prog == null)
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan) && u.agency.Equals(N_Agy));
                                }
                                else
                                {
                                    dsCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                                    dsMSCount = CAFunnel.FindAll(u => u.SERVICEPLAN.Trim().Equals(Service_Plan));
                                }

                                if (dsMSCount.Count > 0 || dsCount.Count > 0)
                                {
                                    if (Branch_cd.Length > 0)
                                    {
                                        for (int i = 0; i < Branch_cd.Length;)
                                        {
                                            string Temp_Branch = Branch_cd.Substring(i, 1);
                                            List<CASESP2Entity> casesp2Data = propCaseSp2List.FindAll(u => u.ServPlan.Trim() == Service_Plan.Trim()).OrderByDescending(u => u.Branch).ToList();

                                            Priv_Branch = null;
                                            if (casesp2Data.Count > 0)
                                            {
                                                foreach (CASESP2Entity dr in casesp2Data)
                                                {
                                                    CAFirst = true;
                                                    CaDate = null;
                                                    Branch = dr.Branch.ToString().Trim();
                                                    if (Service_Plan == dr.ServPlan.ToString() && Branch != Priv_Branch)
                                                    {
                                                        Service_desc = SP0_data.BpDesc.Trim();
                                                        if (!First)
                                                        {
                                                            if (Branch.Trim() == SP0_data.B1Code.Trim())
                                                                Service_desc = SP0_data.B1Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B2Code.Trim())
                                                                Service_desc = SP0_data.B2Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B3Code.Trim())
                                                                Service_desc = SP0_data.B3Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B4Code.Trim())
                                                                Service_desc = SP0_data.B4Desc.Trim();
                                                            else if (Branch.Trim() == SP0_data.B5Code.Trim())
                                                                Service_desc = SP0_data.B5Desc.Trim();
                                                        }

                                                        #region Column Headers

                                                        _Rowindex = _Rowindex + 2;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Service: " + SP_Desc.Trim();
                                                        oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex = _Columnindex + 8;

                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Branch: " + Service_desc.Trim();
                                                        oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex = _Columnindex + 8;

                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "App No";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Applicant Name";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Date";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Case Worker";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Site";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Amount";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleR;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Enroll Program";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Enroll Dates";
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                                        _Columnindex++;

                                                        #endregion

                                                        Priv_Branch = Branch;
                                                        First = false;
                                                    }

                                                    string CAMSType = dr.Type1.ToString();
                                                    string CAMSTypeDesc = string.Empty;
                                                    if (CAMSType == "MS")
                                                        CAMSTypeDesc = "Outcome";
                                                    else
                                                        CAMSTypeDesc = "Service";
                                                    string Grp = dr.Orig_Grp.ToString().Trim();
                                                    string Search_Caseworker = string.Empty;
                                                    if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                        Search_Caseworker = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                        Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                    else
                                                        Search_Caseworker = "";

                                                    string Search_Site = string.Empty;
                                                    if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                        Search_Site = "";
                                                    else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                        Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                    else
                                                        Search_Site = "";

                                                    List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                                    if (CAMSType == "CA")
                                                    {
                                                        if (N_Agy != null && N_Dept != null && N_prog != null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                    }
                                                    else if (CAMSType == "MS")
                                                    {
                                                        if (N_Agy != null && N_Dept != null && N_prog != null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                        else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_GROUP.Equals(Grp) && u.CASEACT_BRANCH.Equals(Branch));
                                                        }
                                                        else
                                                        {
                                                            if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                            else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                            else
                                                                RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr.CamCd.ToString().Trim()) && u.CASEACT_BRANCH.Equals(Branch) && u.CASEACT_GROUP.Equals(Grp));
                                                        }
                                                    }
                                                    if (RepEntity.Count > 0)
                                                    {
                                                        if (dtpFrom.Checked && dtpTo.Checked)
                                                            RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                    }

                                                    if (RepEntity.Count > 0)
                                                    {
                                                        if (CAMSType == "CA")
                                                        {
                                                            CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                            if (CaEntity != null)
                                                            {
                                                                CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                            }
                                                        }
                                                        else
                                                        {
                                                            MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr.CamCd.ToString().Trim());
                                                            if (MSEntity != null)
                                                            {
                                                                CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                            }
                                                        }

                                                        if (dtpFrom.Checked.Equals(false))
                                                        {
                                                            _Rowindex++;
                                                            _Columnindex = 0;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                            oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameBlockStyleC);
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex = _Columnindex + 8;
                                                        }

                                                        foreach (Funnel_RepEntity drApp in RepEntity)
                                                        {
                                                            CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                            Note_Worker = string.Empty;
                                                            HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                            if (hiedata != null)
                                                            {
                                                                Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                            }

                                                            Note_site = string.Empty;
                                                            if (propCaseAllSiteEntity.Count > 0)
                                                            {
                                                                if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                                {
                                                                    CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                                    if (SelSite != null)
                                                                        Note_site = SelSite.SiteNAME.Trim();
                                                                    else
                                                                        Note_site = string.Empty;
                                                                }
                                                            }

                                                            DataSet dsHie = new DataSet();
                                                            string Enroll_Prog = string.Empty;
                                                            string Enroll_Date = string.Empty;
                                                            string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                            string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                            if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                            {
                                                                if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                                {
                                                                    for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                    {
                                                                        Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                        Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                    {
                                                                        CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                        if (casehieName != null)
                                                                            Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                        Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                    }
                                                                }
                                                                if (Enroll_Prog.Trim().Length > 0)
                                                                    Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                                if (Enroll_Date.Trim().Length > 0)
                                                                    Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                            }

                                                            if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                            {
                                                                if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))

                                                                {
                                                                    if (CAFirst)
                                                                    {
                                                                        _Rowindex++;
                                                                        _Columnindex = 0;

                                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                                        oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameBlockStyleC);
                                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                        _Columnindex = _Columnindex + 8;

                                                                        CAFirst = false;
                                                                    }

                                                                    _Rowindex++;
                                                                    _Columnindex = 0;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.SNP_APP.ToString().Trim();
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.App_Name.ToString().Trim();
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = CaDate.Trim() == "" ? "" : Convert.ToDateTime(CaDate.Trim()).ToString("MM/dd/yyyy");
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_Worker.Trim();
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_site.Trim();
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.Cost.Trim();
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBRC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Prog.Trim();
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex++;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Date.Trim() == "" ? "" : Convert.ToDateTime(Enroll_Date.Trim()).ToString("MM/dd/yyyy");
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                _Rowindex++;
                                                                _Columnindex = 0;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.SNP_APP.ToString().Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.App_Name.ToString().Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = CaDate.Trim() == "" ? "" : Convert.ToDateTime(CaDate.Trim()).ToString("MM/dd/yyyy");
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_Worker.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_site.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.Cost.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBRC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Prog.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Date.Trim() == "" ? "" : Convert.ToDateTime(Enroll_Date.Trim()).ToString("MM/dd/yyyy");
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            i++;
                                        }
                                    }

                                    if (Allow_Add_Branch == "Y")
                                    {
                                        DataSet ds = DatabaseLayer.SPAdminDB.GetCAMSforSPM2(N_Agy, N_Dept, N_prog, N_Year, drsp.Cells["SP_Code"].Value.ToString().Trim());
                                        DataTable dt = ds.Tables[0];

                                        if (dt.Rows.Count > 0)
                                        {
                                            #region Column Headers

                                            _Rowindex = _Rowindex + 2;
                                            _Columnindex = 0;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Service: " + SP_Desc.Trim();
                                            oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex = _Columnindex + 8;

                                            _Rowindex++;
                                            _Columnindex = 0;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Branch: " + Service_desc.Trim();
                                            oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameStyleC);
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 12;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.FontStyle = DevExpress.Spreadsheet.SpreadsheetFontStyle.Bold;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex = _Columnindex + 8;

                                            _Rowindex++;
                                            _Columnindex = 0;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "App No";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Applicant Name";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Date";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Case Worker";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Site";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Amount";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleR;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Enroll Program";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = "Enroll Dates";
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlFrameBlockStyleL;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 11;
                                            SheetDetails.Rows[_Rowindex][_Columnindex].RowHeight = 20;
                                            _Columnindex++;

                                            #endregion

                                            foreach (DataRow dr in dt.Rows)
                                            {
                                                CAFirst = true;
                                                string CAMSType = dr["SPM2_TYPE"].ToString();
                                                string Search_Caseworker = string.Empty;
                                                if (((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim() == "****")
                                                    Search_Caseworker = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim()))
                                                    Search_Caseworker = ((Captain.Common.Utilities.ListItem)cmbWorker.SelectedItem).Value.ToString().Trim();
                                                else
                                                    Search_Caseworker = "";

                                                string Search_Site = string.Empty;
                                                if (((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim() == "0")
                                                    Search_Site = "";
                                                else if (!string.IsNullOrEmpty(((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim()))
                                                    Search_Site = ((Captain.Common.Utilities.ListItem)cmbSite.SelectedItem).Value.ToString().Trim();
                                                else
                                                    Search_Site = "";

                                                List<Funnel_RepEntity> RepEntity = new List<Funnel_RepEntity>();
                                                if (CAMSType == "CA")
                                                {
                                                    if (N_Agy != null && N_Dept != null && N_prog != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = CAFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                }

                                                else if (CAMSType == "MS")
                                                {

                                                    if (N_Agy != null && N_Dept != null && N_prog != null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.Prog.Equals(N_prog) && u.Year.Trim().Equals(N_Year.Trim()) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else if (N_Agy != null && N_Dept != null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.dept.Equals(N_Dept) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else if (N_Agy != null && N_Dept == null && N_prog == null)
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.agency.Equals(N_Agy) && u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrEmpty(Search_Caseworker.Trim()) && !string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()) && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Caseworker.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Worker.Trim().Equals(Search_Caseworker.Trim()));
                                                        else if (!string.IsNullOrEmpty(Search_Site.Trim()))
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9") && u.Site.Trim().Equals(Search_Site.Trim()));
                                                        else
                                                            RepEntity = MSFunnel.FindAll(u => u.SERVICEPLAN.Equals(Service_Plan) && u.CAMS_CODE.Trim().Equals(dr["SPM2_CAMS_CODE"].ToString().Trim()) && u.CASEACT_BRANCH.Trim().Equals("9"));
                                                    }
                                                }

                                                if (RepEntity.Count > 0)
                                                {
                                                    if (dtpFrom.Checked && dtpTo.Checked)
                                                        RepEntity = RepEntity.FindAll(u => Convert.ToDateTime(u.ACT_DATE.Trim()) >= Convert.ToDateTime(dtpFrom.Text.Trim()) && Convert.ToDateTime(u.ACT_DATE.Trim()) <= Convert.ToDateTime(dtpTo.Text.Trim()));
                                                }

                                                if (RepEntity.Count > 0)
                                                {
                                                    if (CAMSType == "CA")
                                                    {

                                                        CAMASTEntity CaEntity = propCAList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                        if (CaEntity != null)
                                                        {
                                                            CAMSDesc = "Service : " + CaEntity.Desc.Trim();
                                                        }
                                                    }
                                                    else
                                                    {

                                                        MSMASTEntity MSEntity = propMSList.Find(u => u.Code.Trim() == dr["SPM2_CAMS_CODE"].ToString().Trim());
                                                        if (MSEntity != null)
                                                        {
                                                            CAMSDesc = "Outcome : " + MSEntity.Desc.Trim();
                                                        }
                                                    }
                                                    if (dtpFrom.Checked.Equals(false))
                                                    {
                                                        _Rowindex++;
                                                        _Columnindex = 0;

                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                        oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameBlockStyleC);
                                                        SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                        _Columnindex = _Columnindex + 8;
                                                    }

                                                    foreach (Funnel_RepEntity drApp in RepEntity)
                                                    {
                                                        CaDate = LookupDataAccess.Getdate(drApp.ACT_DATE.ToString().Trim());
                                                        Note_Worker = string.Empty;
                                                        HierarchyEntity hiedata = propCaseworkerList.Find(u => u.CaseWorker.ToString() == drApp.Worker.ToString().Trim());
                                                        if (hiedata != null)
                                                        {
                                                            Note_Worker = hiedata.HirarchyName.ToString().Trim();
                                                        }

                                                        Note_site = string.Empty;
                                                        if (propCaseAllSiteEntity.Count > 0)
                                                        {
                                                            if (!string.IsNullOrEmpty(drApp.Site.Trim()))
                                                            {
                                                                CaseSiteEntity SelSite = propCaseAllSiteEntity.Find(u => u.SiteNUMBER.Trim().Equals(drApp.Site.Trim()));
                                                                if (SelSite != null)
                                                                    Note_site = SelSite.SiteNAME.Trim();
                                                                else
                                                                    Note_site = string.Empty;
                                                            }
                                                        }

                                                        DataSet dsHie = new DataSet();
                                                        string Enroll_Prog = string.Empty;
                                                        string Enroll_Date = string.Empty;
                                                        string[] Enrl_Fundhie = drApp.FUND.ToString().Trim().Split(',');
                                                        string[] Enrl_fundDate = drApp.ENRL_DATE.ToString().Trim().Split(',');
                                                        if (!string.IsNullOrEmpty(drApp.FUND.ToString().Trim()))
                                                        {
                                                            if (!CommonFunctions.IsNumeric(drApp.FUND.ToString().Replace(",", "").ToString()))
                                                            {
                                                                for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                {
                                                                    Enroll_Prog += Enrl_Fundhie[j].ToString().Trim() + ", ";
                                                                    Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                }
                                                            }
                                                            else
                                                            {
                                                                for (int j = 0; j < Enrl_Fundhie.Length; j++)
                                                                {
                                                                    CaseHierarchyEntity casehieName = propCaseHieNameEntity.Find(u => u.Agency.Trim() == Enrl_Fundhie[j].Substring(0, 2).Trim() && u.Dept.Trim() == Enrl_Fundhie[j].Substring(2, 2).Trim() && u.Prog == Enrl_Fundhie[j].Substring(4, 2).Trim());
                                                                    if (casehieName != null)
                                                                        Enroll_Prog += casehieName.HierarchyName.ToString().Trim() + ", ";
                                                                    Enroll_Date += LookupDataAccess.Getdate(Enrl_fundDate[j]) + ", ";
                                                                }
                                                            }
                                                            if (Enroll_Prog.Trim().Length > 0)
                                                                Enroll_Prog = Enroll_Prog.Substring(0, Enroll_Prog.Length - 2);
                                                            if (Enroll_Date.Trim().Length > 0)
                                                                Enroll_Date = Enroll_Date.Substring(0, Enroll_Date.Length - 2);
                                                        }

                                                        if (dtpFrom.Checked.Equals(true) && dtpTo.Checked.Equals(true))
                                                        {
                                                            if (Convert.ToDateTime(LookupDataAccess.Getdate((dtpFrom.Text.Trim()))) <= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))) && Convert.ToDateTime(LookupDataAccess.Getdate((dtpTo.Text.Trim()))) >= Convert.ToDateTime(LookupDataAccess.Getdate((CaDate))))
                                                            {
                                                                if (CAFirst)
                                                                {
                                                                    _Rowindex++;
                                                                    _Columnindex = 0;

                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Value = CAMSDesc.Trim();
                                                                    oDevExpress_Excel_Properties.xlRowsMerge(SheetDetails, _Rowindex, _Columnindex, 8, oDevExpress_Excel_Properties.gxlFrameBlockStyleC);
                                                                    SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                    _Columnindex = _Columnindex + 8;

                                                                    CAFirst = false;
                                                                }

                                                                _Rowindex++;
                                                                _Columnindex = 0;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.SNP_APP.ToString().Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.App_Name.ToString().Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = CaDate.Trim() == "" ? "" : Convert.ToDateTime(CaDate.Trim()).ToString("MM/dd/yyyy");
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_Worker.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_site.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.Cost.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBRC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Prog.Trim();
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                                _Columnindex++;

                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Date.Trim() == "" ? "" : Convert.ToDateTime(Enroll_Date.Trim()).ToString("MM/dd/yyyy");
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                                SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            _Rowindex++;
                                                            _Columnindex = 0;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.SNP_APP.ToString().Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.App_Name.ToString().Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = CaDate.Trim() == "" ? "" : Convert.ToDateTime(CaDate.Trim()).ToString("MM/dd/yyyy");
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_Worker.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = Note_site.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = drApp.Cost.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBRC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Prog.Trim();
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;
                                                            _Columnindex++;

                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Value = Enroll_Date.Trim() == "" ? "" : Convert.ToDateTime(Enroll_Date.Trim()).ToString("MM/dd/yyyy");
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Style = oDevExpress_Excel_Properties.gxlDBLC_Blue_Borders;
                                                            SheetDetails.Rows[_Rowindex][_Columnindex].Font.Size = 10;

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        #endregion

                        SheetDetails.IgnoredErrors.Add(SheetDetails.GetDataRange(), DevExpress.Spreadsheet.IgnoredErrorType.NumberAsText);

                        wb.SaveDocument(_excelPath, DevExpress.Spreadsheet.DocumentFormat.OpenXml);

                        //try
                        //{
                        //    string localFilePath = _excelPath;
                        //    /// Need to check for null value of localFilePath, etc...
                        //    FileInfo fiDownload = new FileInfo(localFilePath);
                        //    /// Need to check for file exists, is local file, is allow to read, etc...
                        //    string name = fiDownload.Name;
                        //    using (FileStream fileStream = fiDownload.OpenRead())
                        //    {
                        //        Application.Download(fileStream, name);
                        //        AlertBox.Show("Report Generated Successfully");
                        //    }
                        //}
                        //catch (Exception ex)
                        //{
                        //}
                    }
                }
                catch (Exception ex) { }
            }
        }

        #endregion


    }
}